[{"D:\\Project\\react\\src\\index.js":"1","D:\\Project\\react\\src\\Store\\Store.js":"2","D:\\Project\\react\\src\\App.js":"3","D:\\Project\\react\\src\\Login.js":"4","D:\\Project\\react\\src\\Home.js":"5","D:\\Project\\react\\src\\Cookies.js":"6","D:\\Project\\react\\src\\Method\\Store.js":"7","D:\\Project\\react\\src\\Program\\WindowFrame.js":"8","D:\\Project\\react\\src\\Component\\Control\\ExplainInput.js":"9","D:\\Project\\react\\src\\Component\\Control\\Button.js":"10","D:\\Project\\react\\src\\db\\Mysql\\Mysql.js":"11","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js":"12","D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabList.js":"13","D:\\Project\\react\\src\\db\\Mysql\\MysqlServer.js":"14","D:\\Project\\react\\src\\Method\\Comm.js":"15","D:\\Project\\react\\src\\Method\\Grid.js":"16","D:\\Project\\react\\src\\Program\\MES\\PgmTest.js":"17","D:\\Project\\react\\src\\JSON\\jsonControl.js":"18","D:\\Project\\react\\src\\Program\\MES\\Chart\\PgmTest2.js":"19","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js":"20","D:\\Project\\react\\src\\Program\\MES\\Menu.js":"21","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js":"22","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js":"23","D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js":"24","D:\\Project\\react\\src\\Component\\Control\\DetailDiv.js":"25","D:\\Project\\react\\src\\Component\\Control\\SearchDiv.js":"26","D:\\Project\\react\\src\\Method\\Popup.js":"27","D:\\Project\\react\\src\\Method\\Component.js":"28","D:\\Project\\react\\src\\Component\\Control\\Input.js":"29","D:\\Project\\react\\src\\Component\\Control\\Combobox.js":"30","D:\\Project\\react\\src\\Component\\Control\\DateTime.js":"31","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart1.js":"32","D:\\Project\\react\\src\\Component\\Control\\Number.js":"33","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart2.js":"34","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart3.js":"35","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js":"36","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart4.js":"37","D:\\Project\\react\\src\\Component\\Grid\\Column\\Number.js":"38","D:\\Project\\react\\src\\Component\\Grid\\Column\\Input.js":"39","D:\\Project\\react\\src\\Component\\Grid\\Grid.js":"40","D:\\Project\\react\\src\\Component\\Layout\\Layout.js":"41","D:\\Project\\react\\src\\Component\\Grid\\Column\\DateTime.js":"42","D:\\Project\\react\\src\\Component\\Grid\\Column\\Combobox.js":"43","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js":"44","D:\\Project\\react\\src\\Component\\Popup\\PopupFrame.js":"45","D:\\Project\\react\\src\\Program\\POPUP\\PopupTest.js":"46","D:\\Project\\01.YK\\react\\src\\index.js":"47","D:\\Project\\01.YK\\react\\src\\Store\\Store.js":"48","D:\\Project\\01.YK\\react\\src\\App.js":"49","D:\\Project\\01.YK\\react\\src\\Home.js":"50","D:\\Project\\01.YK\\react\\src\\Login.js":"51","D:\\Project\\01.YK\\react\\src\\Cookies.js":"52","D:\\Project\\01.YK\\react\\src\\Program\\WindowFrame.js":"53","D:\\Project\\01.YK\\react\\src\\WebReq\\WebReq.js":"54","D:\\Project\\01.YK\\react\\src\\Method\\Store.js":"55","D:\\Project\\01.YK\\react\\src\\Method\\Component.js":"56","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Input.js":"57","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabList.js":"58","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js":"59","D:\\Project\\01.YK\\react\\src\\db\\Mysql\\Mysql.js":"60","D:\\Project\\01.YK\\react\\src\\db\\Mysql\\MysqlServer.js":"61","D:\\Project\\01.YK\\react\\src\\JSON\\jsonControl.js":"62","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js":"63","D:\\Project\\01.YK\\react\\src\\Method\\Comm.js":"64","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js":"65","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js":"66","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js":"67","D:\\Project\\01.YK\\react\\src\\Method\\Grid.js":"68","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Combobox.js":"69","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Image.js":"70","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Input.js":"71","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Combobox.js":"72","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Grid.js":"73","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\TextArea.js":"74","D:\\Project\\01.YK\\react\\src\\Component\\Control\\DetailDiv.js":"75","D:\\Project\\01.YK\\react\\src\\Component\\Control\\SearchDiv.js":"76","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\DateTime.js":"77","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Number.js":"78","D:\\Project\\01.YK\\react\\src\\Method\\Popup.js":"79","D:\\Project\\01.YK\\react\\src\\Component\\Control\\DateTime.js":"80","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Number.js":"81","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js":"82","D:\\Project\\01.YK\\react\\src\\Component\\Layout\\Layout.js":"83","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js":"84","D:\\Project\\01.YK\\react\\src\\Component\\Popup\\PopupFrame.js":"85","D:\\Project\\01.YK\\react\\src\\Program\\POPUP\\PopupTest.js":"86","D:\\Project\\01.YK\\react\\src\\Component\\Control\\TextArea.js":"87","D:\\Project\\01.YK\\react\\src\\db\\Oracle\\Oracle.js":"88","D:\\Project\\01.YK\\react\\src\\db\\Oracle\\OracleServer.js":"89","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Checkbox.js":"90","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Detailspan.js":"91","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Mainspan.js":"92","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Botspan.js":"93","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\TabList.js":"94","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\TabList copy.js":"95","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\CAMR_SETTING\\CAMR_SETTING.js":"96","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Chit\\Chit.js":"97","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Chit\\ChitMemo.js":"98","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\RecImage.js":"99","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\CompleteBtn.js":"100","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\TabList.js":"101","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\ENTR_PROC\\ENTR_PROC.js":"102","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\CompleteBtn.js":"103","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\DISP_PROC.js":"104","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\RecImageDtl.js":"105","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImage.js":"106","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\CompleteBtn.js":"107","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy 2.js":"108","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl.js":"109","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\INSP_HIST.js":"110","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy 3.js":"111","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\DispImg.js":"112","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\DispInfo.js":"113","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\CompleteBtn.js":"114","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\Botspan.js":"115","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy.js":"116","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImage.js":"117","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecTimer.js":"118","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\INSP_PROC.js":"119","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\SHIP_PROC\\CompleteBtn.js":"120","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\SHIP_PROC\\SHIP_PROC.js":"121","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImage copy.js":"122","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy 4.js":"123","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\INSP_CFRM.js":"124","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\RecImage.js":"125","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\RecImageDtl.js":"126","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\TabList.js":"127","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Checkbox.js":"128","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\CompleteBtn.js":"129","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\RecImage.js":"130","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\RecImageDtl.js":"131","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\TabList.js":"132","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\INSP_CANC.js":"133","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImage copy 2.js":"134","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy 2.js":"135","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl.js":"136","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy.js":"137","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy 3.js":"138","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy 4.js":"139"},{"size":280,"mtime":1623198507106,"results":"140","hashOfConfig":"141"},{"size":720,"mtime":1623198507098,"results":"142","hashOfConfig":"141"},{"size":423,"mtime":1623198506881,"results":"143","hashOfConfig":"141"},{"size":8922,"mtime":1624253274618,"results":"144","hashOfConfig":"141"},{"size":2339,"mtime":1623198789146,"results":"145","hashOfConfig":"141"},{"size":540,"mtime":1623198506986,"results":"146","hashOfConfig":"141"},{"size":23552,"mtime":1623287890068,"results":"147","hashOfConfig":"141"},{"size":8266,"mtime":1623287890068,"results":"148","hashOfConfig":"141"},{"size":2540,"mtime":1623198506898,"results":"149","hashOfConfig":"141"},{"size":2100,"mtime":1623198506882,"results":"150","hashOfConfig":"141"},{"size":6863,"mtime":1624253278354,"results":"151","hashOfConfig":"141"},{"size":4687,"mtime":1623198506975,"results":"152","hashOfConfig":"141"},{"size":3073,"mtime":1623287890068,"results":"153","hashOfConfig":"141"},{"size":1831,"mtime":1624251408048,"results":"154","hashOfConfig":"141"},{"size":3421,"mtime":1623198507062,"results":"155","hashOfConfig":"141"},{"size":2093,"mtime":1623287890068,"results":"156","hashOfConfig":"141"},{"size":18566,"mtime":1623894271533,"results":"157","hashOfConfig":"141"},{"size":1143,"mtime":1623198507057,"results":"158","hashOfConfig":"141"},{"size":6851,"mtime":1623198507076,"results":"159","hashOfConfig":"141"},{"size":1382,"mtime":1623198506974,"results":"160","hashOfConfig":"141"},{"size":24216,"mtime":1623894171987,"results":"161","hashOfConfig":"141"},{"size":1121,"mtime":1623198506969,"results":"162","hashOfConfig":"141"},{"size":474,"mtime":1623198506977,"results":"163","hashOfConfig":"141"},{"size":2132,"mtime":1623287890068,"results":"164","hashOfConfig":"141"},{"size":388,"mtime":1623198506891,"results":"165","hashOfConfig":"141"},{"size":255,"mtime":1623198506906,"results":"166","hashOfConfig":"141"},{"size":1224,"mtime":1623893479508,"results":"167","hashOfConfig":"141"},{"size":1819,"mtime":1623287890068,"results":"168","hashOfConfig":"141"},{"size":6965,"mtime":1623198506901,"results":"169","hashOfConfig":"141"},{"size":7293,"mtime":1623895218374,"results":"170","hashOfConfig":"141"},{"size":8663,"mtime":1623287890068,"results":"171","hashOfConfig":"141"},{"size":3372,"mtime":1623198507071,"results":"172","hashOfConfig":"141"},{"size":7848,"mtime":1623287890068,"results":"173","hashOfConfig":"141"},{"size":1917,"mtime":1623198507073,"results":"174","hashOfConfig":"141"},{"size":3131,"mtime":1623198507074,"results":"175","hashOfConfig":"141"},{"size":853,"mtime":1623198506971,"results":"176","hashOfConfig":"141"},{"size":2181,"mtime":1623198507075,"results":"177","hashOfConfig":"141"},{"size":4696,"mtime":1623287890068,"results":"178","hashOfConfig":"141"},{"size":5031,"mtime":1623198506933,"results":"179","hashOfConfig":"141"},{"size":19259,"mtime":1623287890068,"results":"180","hashOfConfig":"141"},{"size":3834,"mtime":1623198506966,"results":"181","hashOfConfig":"141"},{"size":4266,"mtime":1623287890068,"results":"182","hashOfConfig":"141"},{"size":10178,"mtime":1623892863583,"results":"183","hashOfConfig":"141"},{"size":1361,"mtime":1623198506972,"results":"184","hashOfConfig":"141"},{"size":4358,"mtime":1623835586251,"results":"185","hashOfConfig":"141"},{"size":1121,"mtime":1623198507093,"results":"186","hashOfConfig":"141"},{"size":280,"mtime":1627967732377,"results":"187","hashOfConfig":"188"},{"size":937,"mtime":1624503751437,"results":"189","hashOfConfig":"188"},{"size":488,"mtime":1625049228357,"results":"190","hashOfConfig":"188"},{"size":7506,"mtime":1630152375697,"results":"191","hashOfConfig":"188"},{"size":3851,"mtime":1630567244560,"results":"192","hashOfConfig":"188"},{"size":540,"mtime":1623198506986,"results":"193","hashOfConfig":"188"},{"size":8290,"mtime":1630369877626,"results":"194","hashOfConfig":"188"},{"size":4008,"mtime":1630652914445,"results":"195","hashOfConfig":"188"},{"size":26531,"mtime":1630373186362,"results":"196","hashOfConfig":"188"},{"size":2719,"mtime":1630373034880,"results":"197","hashOfConfig":"188"},{"size":7520,"mtime":1629253130195,"results":"198","hashOfConfig":"188"},{"size":3327,"mtime":1630375773521,"results":"199","hashOfConfig":"188"},{"size":3481,"mtime":1630371792778,"results":"200","hashOfConfig":"188"},{"size":6863,"mtime":1624253278354,"results":"201","hashOfConfig":"188"},{"size":1840,"mtime":1629717762957,"results":"202","hashOfConfig":"188"},{"size":1143,"mtime":1623198507057,"results":"203","hashOfConfig":"188"},{"size":2177,"mtime":1625013232145,"results":"204","hashOfConfig":"188"},{"size":8426,"mtime":1630028689506,"results":"205","hashOfConfig":"188"},{"size":1382,"mtime":1624581507523,"results":"206","hashOfConfig":"188"},{"size":1732,"mtime":1629774639775,"results":"207","hashOfConfig":"188"},{"size":474,"mtime":1623198506977,"results":"208","hashOfConfig":"188"},{"size":2105,"mtime":1630489460523,"results":"209","hashOfConfig":"188"},{"size":10087,"mtime":1630550875658,"results":"210","hashOfConfig":"188"},{"size":2637,"mtime":1625562576282,"results":"211","hashOfConfig":"188"},{"size":5609,"mtime":1630043265320,"results":"212","hashOfConfig":"188"},{"size":12680,"mtime":1630291680216,"results":"213","hashOfConfig":"188"},{"size":20202,"mtime":1630047511258,"results":"214","hashOfConfig":"188"},{"size":5181,"mtime":1628573250397,"results":"215","hashOfConfig":"188"},{"size":388,"mtime":1623198506891,"results":"216","hashOfConfig":"217"},{"size":255,"mtime":1623198506906,"results":"218","hashOfConfig":"217"},{"size":4727,"mtime":1625460225083,"results":"219","hashOfConfig":"217"},{"size":4966,"mtime":1630042129184,"results":"220","hashOfConfig":"188"},{"size":1224,"mtime":1623893479508,"results":"221","hashOfConfig":"217"},{"size":8663,"mtime":1623287890068,"results":"222","hashOfConfig":"217"},{"size":7848,"mtime":1623287890068,"results":"223","hashOfConfig":"217"},{"size":1776,"mtime":1629774739323,"results":"224","hashOfConfig":"188"},{"size":3834,"mtime":1623198506966,"results":"225","hashOfConfig":"217"},{"size":1357,"mtime":1629162522603,"results":"226","hashOfConfig":"188"},{"size":4358,"mtime":1623835586251,"results":"227","hashOfConfig":"217"},{"size":1121,"mtime":1623198507093,"results":"228","hashOfConfig":"217"},{"size":2552,"mtime":1630401107714,"results":"229","hashOfConfig":"188"},{"size":286,"mtime":1630392153270,"results":"230","hashOfConfig":"188"},{"size":1176,"mtime":1630898873253,"results":"231","hashOfConfig":"188"},{"size":5955,"mtime":1630058854179,"results":"232","hashOfConfig":"188"},{"size":764,"mtime":1628504305297,"results":"233","hashOfConfig":"188"},{"size":1158,"mtime":1628504448953,"results":"234","hashOfConfig":"188"},{"size":401,"mtime":1628504220899,"results":"235","hashOfConfig":"188"},{"size":3100,"mtime":1630399263278,"results":"236","hashOfConfig":"188"},{"size":2074,"mtime":1628556907887,"results":"237","hashOfConfig":"188"},{"size":12183,"mtime":1631006316348,"results":"238","hashOfConfig":"188"},{"size":3105,"mtime":1630400245522,"results":"239","hashOfConfig":"188"},{"size":1905,"mtime":1630402764680,"results":"240","hashOfConfig":"188"},{"size":517,"mtime":1630484594128,"results":"241","hashOfConfig":"188"},{"size":10466,"mtime":1630552045992,"results":"242","hashOfConfig":"188"},{"size":2453,"mtime":1630405685789,"results":"243","hashOfConfig":"188"},{"size":7748,"mtime":1630553120329,"results":"244","hashOfConfig":"188"},{"size":2605,"mtime":1630488424826,"results":"245","hashOfConfig":"188"},{"size":31732,"mtime":1630553112760,"results":"246","hashOfConfig":"188"},{"size":4377,"mtime":1630565600141,"results":"247","hashOfConfig":"188"},{"size":520,"mtime":1630483978742,"results":"248","hashOfConfig":"188"},{"size":8125,"mtime":1629189945002,"results":"249","hashOfConfig":"188"},{"size":6011,"mtime":1629717763014,"results":"250","hashOfConfig":"188"},{"size":3291,"mtime":1630485041859,"results":"251","hashOfConfig":"188"},{"size":19767,"mtime":1630553132343,"results":"252","hashOfConfig":"188"},{"size":6013,"mtime":1629717762957,"results":"253","hashOfConfig":"188"},{"size":2078,"mtime":1629446195358,"results":"254","hashOfConfig":"188"},{"size":1742,"mtime":1629271666066,"results":"255","hashOfConfig":"188"},{"size":9259,"mtime":1630551661614,"results":"256","hashOfConfig":"188"},{"size":401,"mtime":1625628154746,"results":"257","hashOfConfig":"188"},{"size":4381,"mtime":1629717762958,"results":"258","hashOfConfig":"188"},{"size":2320,"mtime":1631006800463,"results":"259","hashOfConfig":"188"},{"size":2676,"mtime":1628503976176,"results":"260","hashOfConfig":"188"},{"size":49932,"mtime":1631006788467,"results":"261","hashOfConfig":"188"},{"size":8384,"mtime":1630552560387,"results":"262","hashOfConfig":"188"},{"size":26544,"mtime":1630553148205,"results":"263","hashOfConfig":"188"},{"size":2279,"mtime":1629885304608,"results":"264","hashOfConfig":"188"},{"size":12135,"mtime":1629952884424,"results":"265","hashOfConfig":"188"},{"size":25573,"mtime":1630553049842,"results":"266","hashOfConfig":"188"},{"size":519,"mtime":1630484878401,"results":"267","hashOfConfig":"188"},{"size":3289,"mtime":1630484972132,"results":"268","hashOfConfig":"188"},{"size":2459,"mtime":1630405672896,"results":"269","hashOfConfig":"188"},{"size":7767,"mtime":1630374088248,"results":"270","hashOfConfig":"188"},{"size":3392,"mtime":1630489791000,"results":"271","hashOfConfig":"188"},{"size":518,"mtime":1630485105323,"results":"272","hashOfConfig":"188"},{"size":3289,"mtime":1630485174866,"results":"273","hashOfConfig":"188"},{"size":2459,"mtime":1630405661641,"results":"274","hashOfConfig":"188"},{"size":26778,"mtime":1630553093656,"results":"275","hashOfConfig":"188"},{"size":2264,"mtime":1630473461970,"results":"276","hashOfConfig":"188"},{"size":5754,"mtime":1630916532879,"results":"277","hashOfConfig":"188"},{"size":5744,"mtime":1631010468575,"results":"278","hashOfConfig":"188"},{"size":6325,"mtime":1630895420557,"results":"279","hashOfConfig":"188"},{"size":5546,"mtime":1630656044304,"results":"280","hashOfConfig":"188"},{"size":6432,"mtime":1630658320252,"results":"281","hashOfConfig":"188"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},"1ai3dju",{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"284"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"284"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"284"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"284"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"284"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"284"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},"vmaov1",{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"383"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"383"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"383"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"383"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"383"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"383"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"383"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},"4k3ehh",{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"446"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"446"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"383"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"383"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"383"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"383"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"383"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"383"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"383"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"383"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"383"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"544","messages":"545","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"383"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"383"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"383"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"383"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"383"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576","usedDeprecatedRules":"383"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"383"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"383"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"584","messages":"585","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"383"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"383"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"383"},"D:\\Project\\react\\src\\index.js",[],["593","594"],"D:\\Project\\react\\src\\Store\\Store.js",[],"D:\\Project\\react\\src\\App.js",[],"D:\\Project\\react\\src\\Login.js",["595","596","597"],"D:\\Project\\react\\src\\Home.js",["598"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport SideBarMenuMain from './Component/Menu/SideBarMenu/SideBarMenuMain';\r\nimport TabList from './Component/Menu/tabMenu/TabList';\r\nimport WindowFrame from './Program/WindowFrame';\r\n\r\nimport './Home.css';\r\nimport {getSessionCookie} from \"./Cookies\";\r\n// import {ExampleApp} from './Component/Popup/TestPopup'\r\n\r\nlet isSession = false;\r\n\r\nconst Home = (props) => {  \r\n  const session = getSessionCookie(\"session\");\r\n  const leftWindow = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n    return p.open === n.open;\r\n  });\r\n\r\n  const windowState = useSelector((e) => {\r\n    if(e.WINDOWFRAME_REDUCER === undefined) {\r\n      return null;\r\n    }else{\r\n      return e.WINDOWFRAME_REDUCER.windowState\r\n    }\r\n  }, (p, n) => {\r\n    return (p === null ? 0 : p.length) === (n === null ? 0 : n.length)\r\n  });\r\n\r\n  // const SideBarMenuState = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n  //   return JSON.stringify(p) === JSON.stringify(n);\r\n  // });\r\n\r\n  // const width = SideBarMenuState[0].width;\r\n\r\n  let width = 343; \r\n  if(leftWindow.open) width = 90;\r\n  // if (session === \"SUCCESS\")\r\n  // {\r\n    isSession = true;\r\n  // }\r\n  return (\r\n    \r\n    <React.Fragment>      \r\n      {isSession ?\r\n      <>\r\n        <div style={{display:'inline-block', height:'100%'}} >\r\n          <SideBarMenuMain />\r\n        </div>\r\n        \r\n        <div style={{display:'inline-block', paddingRight:'17px', transition:'all 0.2s ease-in-out', position:'absolute', left:width, right:0, height:'100%'}}>\r\n          <div style={{display:'flex', flexDirection:'column', height:'100vh'}}>\r\n            <div style={{height:80}}>\r\n              <TabList />\r\n            </div>\r\n            <div style={{flex:1, display:'flex'}}> \r\n              <div style={{float:'left', width:'100%', position:'relative', zIndex:0, overflow:'hidden'}}>\r\n                {windowState != null &&\r\n                  windowState.map(e => \r\n                    <WindowFrame key={e.programId} programId={e.programId} programNam={e.programNam}/>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n      :\r\n        <div>LOGIN PLZZZ</div>\r\n      }\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;","D:\\Project\\react\\src\\Cookies.js",["599"],"import React from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nexport const setSessionCookie = (key, value, expire) => {\r\n  console.log(key + \":\" + value);\r\n  Cookies.remove(key); // 원래 쿠키 삭제\r\n  Cookies.set(key, value, {expires : expire} ); // 키, 값,  만료일\r\n};\r\n\r\nexport const getSessionCookie = (key) => {\r\n  const sessionCookie = Cookies.get(key);\r\n\r\n  if (sessionCookie === undefined) {\r\n    return {};\r\n  } \r\n  else \r\n  {\r\n    console.log(\"sessionCookie : \" + sessionCookie)\r\n    return sessionCookie;\r\n  }\r\n};","D:\\Project\\react\\src\\Method\\Store.js",[],"D:\\Project\\react\\src\\Program\\WindowFrame.js",[],"D:\\Project\\react\\src\\Component\\Control\\ExplainInput.js",[],"D:\\Project\\react\\src\\Component\\Control\\Button.js",[],"D:\\Project\\react\\src\\db\\Mysql\\Mysql.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js",[],"D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabList.js",[],"D:\\Project\\react\\src\\db\\Mysql\\MysqlServer.js",[],"D:\\Project\\react\\src\\Method\\Comm.js",[],"D:\\Project\\react\\src\\Method\\Grid.js",[],"D:\\Project\\react\\src\\Program\\MES\\PgmTest.js",[],"D:\\Project\\react\\src\\JSON\\jsonControl.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\PgmTest2.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js",[],"D:\\Project\\react\\src\\Program\\MES\\Menu.js",["600","601"],"import React, { Component } from 'react';\r\nimport Grid from '../../Component/Grid/Grid';\r\nimport Layout from '../../Component/Layout/Layout';\r\n\r\nimport { gfc_initPgm, gfc_getAtt, gfc_getMultiLang } from '../../Method/Comm';\r\nimport { gfg_getGrid, gfg_appendRow, gfg_setValue, gfg_setSelectRow } from '../../Method/Grid';\r\nimport { gfo_getInput, gfo_getCombo, gfo_getDateTime, gfo_getNumber } from '../../Method/Component';\r\nimport { gfs_getStoreValue } from '../../Method/Store';\r\nimport { getCallSP_Mysql } from '../../db/Mysql/Mysql';\r\n\r\nimport { Number as columnNumber } from '../../Component/Grid/Column/Number';\r\nimport { Input as columnInput } from '../../Component/Grid/Column/Input';\r\nimport { DateTime as columnDateTime } from '../../Component/Grid/Column/DateTime';\r\nimport { Combobox as columnCombobox} from '../../Component/Grid/Column/Combobox';\r\n\r\nimport SearchDiv from '../../Component/Control/SearchDiv';\r\nimport DetailDiv from '../../Component/Control/DetailDiv';\r\n\r\nimport Input from '../../Component/Control/Input';\r\nimport Combobox from '../../Component/Control/Combobox';\r\nimport DateTime from '../../Component/Control/DateTime';\r\nimport Number from '../../Component/Control/Number';\r\n\r\nimport store from \"../../Store/Store.js\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        gfc_initPgm(props.pgm, props.nam, this);\r\n    }\r\n    Retrieve = () => {\r\n        const menu_id = gfo_getInput(this.props.pgm, 'search_menu_id').getValue();\r\n        const menu_nam = gfo_getInput(this.props.pgm, 'search_menu_nam').getValue();\r\n        const menu_use = gfo_getCombo(this.props.pgm, 'search_menu_use').getValue();                \r\n\r\n        getCallSP_Mysql(\r\n            [{SP        : 'SP_MENU_ED050',\r\n              ROWSTATUS : 'R',\r\n              COP_CD    : '10', \r\n              MENU_ID   : menu_id,\r\n              MENU_NAM  : menu_nam,\r\n              USE_YN    : menu_use,\r\n              MENU_LEVEL  : 0,\r\n              MENU_GRP_YN : '0',\r\n              UP_MENU_ID  : '',\r\n              PGM_ID      : '',\r\n              MENU_SEQ    : 0,\r\n              RETAUT_YN : '',\r\n              INSAUT_YN : '',\r\n              SAVAUT_YN : '',\r\n              DELAUT_YN : '',\r\n              PRNAUT_YN : '',\r\n              EXEAUT_YN : '',\r\n              APPAUT_YN : '',\r\n              XLSAUT_YN : '',\r\n              ETCAUT_YN : '',\r\n              UPDCHR_NO : '',\r\n            }]\r\n        ).then(\r\n            e=>{\r\n                const MSG_CODE = e.data.MSG_CODE;\r\n                const MSG_TEXT = e.data.MSG_TEXT;\r\n                if (e.data.result){\r\n                    const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n                    grid.resetData(e.data.data);\r\n                    gfg_setSelectRow(grid);\r\n                  }\r\n                  else{\r\n                  }                  \r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n            }\r\n        )\r\n    }\r\n\r\n    Insert = () => {\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        gfg_appendRow(grid, grid.getRowCount(), {}, 'MENU_NAM')\r\n    }\r\n    Save = () => {\r\n\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        getCallSP_Mysql(\r\n            [],\r\n            [{grid,\r\n              SP          : 'SP_MENU_ED050',\r\n              COP_CD    : '10',              \r\n              MENU_ID     : 'VARCHAR',\r\n              MENU_NAM    : 'VARCHAR',\r\n              USE_YN      : 'VARCHAR',\r\n              MENU_LEVEL  : 'DECIMAL',\r\n              MENU_GRP_YN : 'VARCHAR',\r\n              UP_MENU_ID  : 'VARCHAR',\r\n              PGM_ID      : 'VARCHAR',\r\n              MENU_SEQ    : 'INT',\r\n              RETAUT_YN : 'VARCHAR',\r\n              INSAUT_YN : 'VARCHAR',\r\n              SAVAUT_YN : 'VARCHAR',\r\n              DELAUT_YN : 'VARCHAR',\r\n              PRNAUT_YN : 'VARCHAR',\r\n              EXEAUT_YN : 'VARCHAR',\r\n              APPAUT_YN : 'VARCHAR',\r\n              XLSAUT_YN : 'VARCHAR',\r\n              ETCAUT_YN : 'VARCHAR',\r\n              UPDCHR_NO : 'VARCHAR'\r\n            }],\r\n            [{\r\n                UPDCHR_NO : gfs_getStoreValue('USER_REDUCER', 'USER_ID') //gfs_getStoreValue\r\n            }]\r\n        ).then(\r\n            e=>{\r\n                const MSG_CODE = e.data.MSG_CODE;\r\n                const MSG_TEXT = e.data.MSG_TEXT;\r\n                if (e.data.result){\r\n                    grid.resetOriginData()\r\n                    grid.restore();\r\n                  }\r\n                  else{\r\n                    const COL_NAM = e.data.COL_NAM;\r\n                    const ROW_KEY = e.data.ROW_KEY;\r\n          \r\n                    gfg_setSelectRow(grid, COL_NAM, ROW_KEY);\r\n                  }                  \r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n            }\r\n        )\r\n    }\r\n    Delete = () => {\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        getCallSP_Mysql(\r\n            [],\r\n            [{grid,\r\n              SP          : 'SP_MENU_ED050',\r\n              COP_CD    : '10',              \r\n              MENU_ID     : 'VARCHAR',\r\n              MENU_NAM    : 'VARCHAR',\r\n              USE_YN      : 'VARCHAR',\r\n              MENU_LEVEL  : 'DECIMAL',\r\n              MENU_GRP_YN : 'VARCHAR',\r\n              UP_MENU_ID  : 'VARCHAR',\r\n              PGM_ID      : 'VARCHAR',\r\n              MENU_SEQ    : 'INT',\r\n              RETAUT_YN : 'VARCHAR',\r\n              INSAUT_YN : 'VARCHAR',\r\n              SAVAUT_YN : 'VARCHAR',\r\n              DELAUT_YN : 'VARCHAR',\r\n              PRNAUT_YN : 'VARCHAR',\r\n              EXEAUT_YN : 'VARCHAR',\r\n              APPAUT_YN : 'VARCHAR',\r\n              XLSAUT_YN : 'VARCHAR',\r\n              ETCAUT_YN : 'VARCHAR',\r\n              UPDCHR_NO : 'VARCHAR'\r\n            }],\r\n            [{\r\n                UPDCHR_NO : gfs_getStoreValue('USER_REDUCER', 'USER_ID') //gfs_getStoreValue\r\n            }],\r\n            true\r\n        ).then(\r\n            e => {\r\n              const MSG_CODE = e.data.MSG_CODE;\r\n              const MSG_TEXT = e.data.MSG_TEXT;\r\n              const ROW_KEY = e.data.ROW_KEY;\r\n      \r\n              if(e.data.result){\r\n                grid.removeRow(ROW_KEY);\r\n                grid.resetOriginData();\r\n                grid.restore();\r\n                gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n              }else{\r\n                if (MSG_CODE === 'PHANTOM'){\r\n      \r\n                }else{\r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n                }\r\n              }\r\n            }\r\n          )\r\n    }\r\n\r\n    onSelectChange = (e) => {\r\n        if(e === null) return;\r\n        gfo_getNumber(this.props.pgm, 'detail_menu_seq').setValue(e.MENU_SEQ);\r\n        gfo_getInput(this.props.pgm, 'detail_menu_comment').setValue(e.BIGO);\r\n        gfo_getInput(this.props.pgm, 'detail_crt_no').setValue(e.CRTCHR_NO);\r\n        gfo_getDateTime(this.props.pgm, 'detail_crt_dt').setValue(e.CRT_DT);\r\n        gfo_getInput(this.props.pgm, 'detail_up_no').setValue(e.UPDCHR_NO);\r\n        gfo_getDateTime(this.props.pgm, 'detail_up_dt').setValue(e.UPD_DT);        \r\n      }\r\n    \r\n      afterChange = (e) => {\r\n      }\r\n\r\n    render(){\r\n        return (\r\n        <Layout split   ='horizontal'\r\n                minSize     ={[54]}\r\n                defaultSize ={54}\r\n                // resizerStyle='none'\r\n                >\r\n        <SearchDiv>\r\n            <Input pgm={this.props.pgm}\r\n                    id='search_menu_id'\r\n                    label={gfc_getAtt('메뉴 ID')}\r\n            >\r\n            </Input>\r\n            <Input pgm={this.props.pgm}\r\n                    id='search_menu_nam'\r\n                    label={gfc_getAtt('메뉴 이름')}>\r\n            </Input>\r\n\r\n            <Combobox pgm={this.props.pgm}\r\n                        id='search_menu_use'\r\n                        location= 'Common/Common.js'\r\n                        fn      = 'use_yn'\r\n                        value   = 'USE_YN'\r\n                        display = 'YN_STR'\r\n                        field   = {[]}\r\n                        param   = {[]}\r\n                        width   = {500}\r\n                        >\r\n            </Combobox>            \r\n        </SearchDiv>\r\n\r\n            <Layout primary     = 'second'\r\n                    split       ='vertical'\r\n                    defaultSize = {'0%'}\r\n                    direction   = 'left'\r\n            >\r\n                <Grid pgm={this.props.pgm}\r\n                  id='main50'\r\n                  selectionChange={(e) => this.onSelectChange(e)}\r\n                  afterChange={(e) => this.afterChange(e)}\r\n                  columns = {[\r\n                                columnInput({name    : 'MENU_ID', \r\n                                            header  : gfc_getAtt('메뉴ID'), \r\n                                            width   : 120, \r\n                                            readOnly: false\r\n                                        }),\r\n                                columnInput({name    : 'MENU_NAM', \r\n                                            header  : gfc_getAtt('메뉴명'), \r\n                                            width   : 120, \r\n                                            readOnly: false\r\n                                        }),\r\n                                columnCombobox({name: 'USE_YN', \r\n                                                header: gfc_getAtt('사용여부'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),\r\n                                columnNumber({name : 'MENU_LEVEL',\r\n                                              header: gfc_getAtt('메뉴단계'),\r\n                                              readOnly : false,\r\n                                            }),\r\n                                columnCombobox({name: 'RETAUT_YN', \r\n                                                header: gfc_getAtt('조회권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'INSAUT_YN', \r\n                                                header: gfc_getAtt('등록권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),\r\n                                columnCombobox({name: 'SAVAUT_YN', \r\n                                                header: gfc_getAtt('저장권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),       \r\n                                columnCombobox({name: 'DELAUT_YN', \r\n                                                header: gfc_getAtt('삭제권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'PRNAUT_YN', \r\n                                                header: gfc_getAtt('출력권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'EXEAUT_YN', \r\n                                                header: gfc_getAtt('실행권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'APPAUT_YN', \r\n                                                header: gfc_getAtt('결재권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'XLSAUT_YN', \r\n                                                header: gfc_getAtt('엑셀권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'ETCAUT_YN', \r\n                                                header: gfc_getAtt('기타권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnNumber({name : 'MENU_SEQ',\r\n                                              header: gfc_getAtt('메뉴 SEQ'),\r\n                                              width : 0,\r\n                                              readOnly : true,                                              \r\n                                              }),\r\n                                columnInput({name  : 'BIGO', \r\n                                             header: gfc_getAtt('코멘트'), \r\n                                             width : 0,\r\n                                             readOnly: true\r\n                                             }),\r\n                                columnInput({name  : 'CRTCHR_NO', \r\n                                             header: gfc_getAtt('생성자'), \r\n                                             width : 0,\r\n                                             readOnly: true,\r\n                                             align   : 'center'\r\n                                            }),\r\n                                \r\n                                columnDateTime({name  : 'CRT_DT',\r\n                                                header: gfc_getAtt('생성일자'),\r\n                                                width : 0,\r\n                                                format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                                                time  : 'HH:mm',\r\n                                                editor: { \r\n                                                 timepicker: true\r\n                                                }\r\n                                              }),\r\n                                \r\n                                columnInput({name  : 'UPDCHR_NO', \r\n                                             header: gfc_getAtt('수정자'), \r\n                                             width : 0,\r\n                                             readOnly: true\r\n                                            }),\r\n  \r\n                                columnDateTime({name  : 'UPD_DT',\r\n                                                header: gfc_getAtt('수정일시'),\r\n                                                width : 0,\r\n                                                format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                                                time  : 'HH:mm',\r\n                                                readOnly: true\r\n                                              })\r\n                        \r\n                  ]}>\r\n\r\n                </Grid>\r\n                <DetailDiv title={gfc_getAtt('상세정보')}>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('메뉴 SEQ')}</th>\r\n                        <td>\r\n                            <Number pgm={this.props.pgm}\r\n                                    id='detail_menu_seq'>\r\n                            </Number>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('비고')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_menu_comment'>\r\n                            </Input>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('생성자')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_crt_no'\r\n                                    readOnly={true}>\r\n                            </Input>\r\n                        </td>\r\n                        <th>{gfc_getAtt('생성일')}</th>\r\n                        <td>\r\n                            <DateTime pgm={this.props.pgm}\r\n                                        id='detail_crt_dt'\r\n                                        format= {`${gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT')} HH:mm`}\r\n                                        readOnly={true}>\r\n                            </DateTime>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('갱신자')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_up_no'\r\n                                    readOnly={true}>\r\n                            </Input>\r\n                        </td>\r\n                        <th>{gfc_getAtt('갱신일')}</th>\r\n                        <td>\r\n                            <DateTime pgm={this.props.pgm}\r\n                                        id='detail_up_dt'\r\n                                        format= {`${gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT')} HH:mm`}\r\n                                        readOnly={true}>                                            \r\n                            </DateTime>\r\n                        </td>\r\n                    </tr>\r\n                </DetailDiv>\r\n\r\n            </Layout>\r\n        </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js",[],"D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js",[],"D:\\Project\\react\\src\\Component\\Control\\DetailDiv.js",[],"D:\\Project\\react\\src\\Component\\Control\\SearchDiv.js",[],"D:\\Project\\react\\src\\Method\\Popup.js",[],"D:\\Project\\react\\src\\Method\\Component.js",[],"D:\\Project\\react\\src\\Component\\Control\\Input.js",[],"D:\\Project\\react\\src\\Component\\Control\\Combobox.js",[],"D:\\Project\\react\\src\\Component\\Control\\DateTime.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart1.js",[],"D:\\Project\\react\\src\\Component\\Control\\Number.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart2.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart3.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart4.js",["602","603"],"import React, { useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as echarts from 'echarts';\r\n\r\nlet myChart;\r\n\r\nconst Chart4 = (props) => {\r\n  const chartDiv = useRef(null);\r\n  \r\n  const data = useSelector((e) => e.PGMTEST2_REDUCER.data4Org);\r\n\r\n  const dateList = data.map(function (item) {\r\n      return item.OTIME;\r\n  });\r\n  const valueList = data.map(function (item) {\r\n      return item.VALUE;\r\n  });\r\n\r\n  const option = {\r\n    xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        boundaryGap: [0, '30%']\r\n    },\r\n    visualMap: {\r\n        type: 'piecewise',\r\n        show: false,\r\n        dimension: 0,\r\n        seriesIndex: 0,\r\n        pieces: [{\r\n            gt: 1,\r\n            lt: 3,\r\n            color: 'rgba(0, 0, 180, 0.4)'\r\n        }, {\r\n            gt: 5,\r\n            lt: 7,\r\n            color: 'rgba(255, 0, 0)'\r\n        }]\r\n    },\r\n    series: [\r\n        {\r\n            type: 'line',\r\n            smooth: 0.6,\r\n            symbol: 'none',\r\n            lineStyle: {\r\n                color: '#5470C6',\r\n                width: 5\r\n            },\r\n            markLine: {\r\n                symbol: ['none', 'none'],\r\n                label: {show: false},\r\n                data: [\r\n                    {xAxis: 1},\r\n                    {xAxis: 3},\r\n                    {xAxis: 5},\r\n                    {xAxis: 7}\r\n                ]\r\n            },\r\n            areaStyle: {},\r\n            data: [\r\n                ['2019-10-10', 200],\r\n                ['2019-10-11', 560],\r\n                ['2019-10-12', 750],\r\n                ['2019-10-13', 580],\r\n                ['2019-10-14', 250],\r\n                ['2019-10-15', 300],\r\n                ['2019-10-16', 450],\r\n                ['2019-10-17', 300],\r\n                ['2019-10-18', 100]\r\n            ]\r\n        }\r\n    ]\r\n  };\r\n\r\n\r\n  if(myChart === undefined && chartDiv.current !== null){\r\n     myChart = echarts.init(chartDiv.current);\r\n  }\r\n\r\n  if(option && myChart) myChart.setOption(option);\r\n\r\n  return(\r\n    <div ref={chartDiv} style={{float:'left', width:'50%', height:'100%'}} ></div>\r\n  );\r\n}\r\n\r\nexport default Chart4;","D:\\Project\\react\\src\\Component\\Grid\\Column\\Number.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\Input.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Grid.js",[],"D:\\Project\\react\\src\\Component\\Layout\\Layout.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\DateTime.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\Combobox.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js",[],"D:\\Project\\react\\src\\Component\\Popup\\PopupFrame.js",["604"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport { jsonMaxValue } from '../../JSON/jsonControl';\r\nimport { Rnd } from 'react-rnd';\r\nimport ReactDOM from 'react-dom';\r\nimport { gfs_PGM_REDUCER, gfs_dispatch, gfs_getStoreValue } from '../../Method/Store';\r\n\r\nclass PopupFrame extends Component {\r\n  popupOpenYn = null;\r\n  parentNode = null;\r\n  rootId = 0;\r\n\r\n  zIndex = 0;\r\n  state = {\r\n    width  : this.props.width,\r\n    height : this.props.height,\r\n    child  : undefined,\r\n    pgm    : '',\r\n    nam    : ''\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.rootId = this.props.rootId;\r\n\r\n    this.zIndex = jsonMaxValue(gfs_getStoreValue('WINDOWFRAME_REDUCER', 'windowState'), 'windowZindex');\r\n\r\n    this.popupOpenYn = document.querySelector('[id^=\"POPUP_OWNER\"]');\r\n    \r\n    var bg = document.createElement('div');\r\n    bg.id = 'POPUP_OWNER_' + props.parent.props.pgm + '_' + this.rootId;\r\n    bg.style = `position: fixed;\r\n                z-index: ${this.zIndex};\r\n                left: 0px;\r\n                top: 0px;\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: auto;\r\n                background: rgba(0,0,0,0.4)`;\r\n    if(this.popupOpenYn === null){\r\n      document.body.append(bg);\r\n    }else{\r\n      this.parentNode = ReactDOM.findDOMNode(this.props.parent);\r\n      this.parentNode.append(bg);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    const pgm = this.state.pgm + this.props.rootId;\r\n    const rtnValue = gfs_getStoreValue(pgm);\r\n\r\n    // gfs_dispatch('WINDOWFRAME_REDUCER', 'CLOSEWINDOW', \r\n    //   ({\r\n    //     activeWindow: {programId: pgm\r\n    //                   }\r\n    //   })\r\n    // );\r\n\r\n    this.props.callback(rtnValue);\r\n  }\r\n\r\n  componentDidMount(){  \r\n    const popup = import(`../../Program/POPUP/${this.props.src}`);\r\n    popup.then(\r\n      e => {\r\n        //지금 팝업은 메뉴도 없고,\r\n        // 다국어 테이블도 없고해서 그냥 하드코딩한다.\r\n        // 차후에 결정되면 메뉴등록해서 nam가져올지 다국어에서 nam가져올지 결정\r\n        const pgm = e.default.name + this.props.rootId;\r\n        const nam = e.default.name;\r\n        gfs_PGM_REDUCER(pgm);\r\n\r\n        this.setState({pgm: e.default.name, nam: nam});\r\n\r\n        this.setState({\r\n          child: \r\n          <div className='win_body'>\r\n            <e.default pgm={pgm} nam={nam}/>\r\n          </div>\r\n        });\r\n      }\r\n    )\r\n  }\r\n  \r\n  render() {\r\n\r\n    return(     \r\n      <Rnd size={{\r\n        width: this.state.width,\r\n        height:this.state.height\r\n      }}\r\n      dragHandleClassName='win_header'\r\n      // bounds='parent'\r\n      style={{\r\n        zIndex: this.zIndex + 1\r\n      }}\r\n      onResizeStop= {(e, dir, ref, delta, position) => this.setState({width: this.state.width < delta.width ? this.state.width - delta.width : this.state.width + delta.width,\r\n                                                                      height: this.state.height < delta.height ? this.state.height - delta.height : this.state.height + delta.height})}\r\n      >\r\n        <div style={{width:'100%'}} \r\n             className='content'\r\n             >\r\n        \r\n          <div className='win_header' style={{cursor:'move'}}>\r\n            <h4>[{this.state.pgm}] {this.state.nam}</h4>\r\n            \r\n            <div className='win_controller'>\r\n\r\n              <button type='button' className='close' \r\n                      onClick={() => {\r\n                        ReactDOM.unmountComponentAtNode(document.getElementById('POPUP_' + this.props.parent.props.pgm + '_' + this.rootId));\r\n\r\n                        if(this.parentNode === null){\r\n                          document.body.removeChild(document.getElementById('POPUP_OWNER_' + this.props.parent.props.pgm + '_' + this.rootId));\r\n                        }else{\r\n                          this.parentNode.removeChild(document.getElementById('POPUP_OWNER_' + this.props.parent.props.pgm + '_' + this.rootId));\r\n                        }\r\n                      }}\r\n                      onMouseDown={e => e.stopPropagation()} >\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {this.state.child}\r\n        </div>\r\n      </Rnd>    \r\n    );\r\n  }\r\n}\r\n\r\nPopupFrame.propTypes = {\r\n\r\n};\r\n\r\nPopupFrame.defaultProps = {\r\n\r\n};\r\n\r\nexport default PopupFrame;","D:\\Project\\react\\src\\Program\\POPUP\\PopupTest.js",["605"],"import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport Layout from '../../Component/Layout/Layout';\r\nimport SearchDiv from '../../Component/Control/SearchDiv';\r\nimport Input from '../../Component/Control/Input';\r\nimport { gfc_getAtt } from '../../Method/Comm';\r\nimport { gfp_openPopup } from '../../Method/Popup';\r\n\r\nclass PopupTest extends Component {\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  // }\r\n  \r\n  render() {\r\n\r\n    return(        \r\n      <Layout split       ='horizontal'\r\n              minSize     ={[54]}\r\n              defaultSize ={54}\r\n              resizerStyle='none' \r\n      >\r\n        <SearchDiv>\r\n            <Input pgm={this.props.pgm}\r\n                   id='search_user_nam'\r\n                   label={gfc_getAtt('사용자명')} />\r\n            <Input pgm={this.props.pgm}\r\n                   id='search_user_id'\r\n                   label={gfc_getAtt('사용자ID')} />\r\n                   \r\n        </SearchDiv>\r\n        <div>HIHI</div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nPopupTest.propTypes = {\r\n\r\n};\r\n\r\nPopupTest.defaultProps = {\r\n\r\n};\r\n\r\nexport default PopupTest;","D:\\Project\\01.YK\\react\\src\\index.js",[],["606","607"],"D:\\Project\\01.YK\\react\\src\\Store\\Store.js",[],"D:\\Project\\01.YK\\react\\src\\App.js",[],"D:\\Project\\01.YK\\react\\src\\Home.js",["608"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport SideBarMenuMain from './Component/Menu/SideBarMenu/SideBarMenuMain';\r\nimport TabList from './Component/Menu/tabMenu/TabList';\r\nimport WindowFrame from './Program/WindowFrame';\r\n\r\nimport './Home.css';\r\nimport { getSessionCookie } from \"./Cookies\";\r\nimport { gfs_injectAsyncReducer, gfs_WINDOWFRAME_REDUCER, gfs_dispatch, gfs_PGM_REDUCER } from './Method/Store';\r\nimport { gfc_sleep } from './Method/Comm';\r\n\r\nimport GifPlayer from 'react-gif-player';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nlet isSession = false;\r\n\r\nconst defaultData = async() => {\r\n  const userReducer = (nowState, action) => {\r\n    if(action.reducer !== 'USER_REDUCER') {\r\n      return {\r\n        COP_CD    : nowState === undefined ? ''           : nowState.COP_CD,\r\n        USER_ID   : nowState === undefined ? '1989'       : nowState.USER_ID,\r\n        USER_NAM  : nowState === undefined ? '김경현'      : nowState.USER_NAM,\r\n        LANGUAGE  : nowState === undefined ? 'KOR'        : nowState.LANGUAGE,\r\n        YMD_FORMAT: nowState === undefined ? 'yyyy-MM-DD' : nowState.YMD_FORMAT,\r\n        // YMD_FORMAT: nowState === undefined ? 'MM-DD-yyyy' : nowState.YMD_FORMAT,\r\n        YM_FORMAT : nowState === undefined ? 'yyyy-MM'    : nowState.YM_FORMAT,\r\n        NUM_FORMAT: nowState === undefined ? '0,0'        : nowState.NUM_FORMAT,\r\n        NUM_ROUND : nowState === undefined ? '2R'         : nowState.NUM_ROUND\r\n      };\r\n    }\r\n\r\n    if(action.type === 'USERID_FOCUS'){\r\n      return Object.assign({}, nowState, {\r\n        userIdFocus  : action.userIdFocus\r\n      });\r\n    }else if(action.type === 'PWD_FOCUS'){\r\n      return Object.assign({}, nowState, {\r\n        pwdFocus  : action.pwdFocus\r\n      });\r\n    }else if(action.type === 'USERID_CHANGE'){\r\n      return Object.assign({}, nowState, {\r\n        userIdText   : action.userIdText\r\n      });\r\n    }else if(action.type === 'PWD_CHANGE'){\r\n      return Object.assign({}, nowState, {\r\n        pwdText   : action.pwdText\r\n      });\r\n    }\r\n  };\r\n\r\n  gfs_injectAsyncReducer('USER_REDUCER', userReducer);\r\n}\r\n\r\nconst onActiveWindow = (e) => {\r\n  if(document.visibilityState === 'visible'){\r\n    gfs_dispatch('MASK_REDUCER', 'ON_ACTIVE', {\r\n      active : true,\r\n      time   : new Date()\r\n    });\r\n  }else{\r\n    gfs_dispatch('MASK_REDUCER', 'ON_ACTIVE', {\r\n      active : false,\r\n      time   : new Date()\r\n    });\r\n  }\r\n}\r\n\r\nconst defaultOpen = async() => {\r\n\r\n    //검수대기 Open\r\n    gfs_PGM_REDUCER('INSP_PROC');\r\n    gfs_dispatch('WINDOWFRAME_REDUCER', 'SELECTWINDOW', \r\n    ({\r\n      windowZindex: 0,\r\n      activeWindow: {programId: 'INSP_PROC',\r\n                      programNam: '검수진행'\r\n                    }\r\n    }));\r\n\r\n    await gfc_sleep(20);\r\n\r\n    //검수이력 Open\r\n    gfs_PGM_REDUCER('INSP_HIST');\r\n    gfs_dispatch('WINDOWFRAME_REDUCER', 'SELECTWINDOW', \r\n    ({\r\n      windowZindex: 1,\r\n      activeWindow: {programId: 'INSP_HIST',\r\n                      programNam: '검수이력'\r\n                    }\r\n    }));\r\n\r\n    await gfc_sleep(20);\r\n\r\n    //출차대기 Open\r\n    gfs_PGM_REDUCER('DISP_PROC');\r\n    gfs_dispatch('WINDOWFRAME_REDUCER', 'SELECTWINDOW', \r\n    ({\r\n      windowZindex: 2,\r\n      activeWindow: {programId: 'DISP_PROC',\r\n                      programNam: '출차대기'\r\n                    }\r\n    }));\r\n\r\n    await gfc_sleep(20);\r\n\r\n    //입차대기 Open\r\n    gfs_PGM_REDUCER('ENTR_PROC');\r\n    gfs_dispatch('WINDOWFRAME_REDUCER', 'SELECTWINDOW', \r\n    ({\r\n      windowZindex: 3,\r\n      activeWindow: {programId: 'ENTR_PROC',\r\n                      programNam: '입차대기'\r\n                    }\r\n    }));\r\n\r\n    await gfc_sleep(20);\r\n\r\n    gfs_dispatch('WINDOWFRAME_REDUCER', 'SELECTWINDOW', \r\n    ({\r\n      windowZindex: 0,\r\n      activeWindow: {programId: 'INSP_PROC',\r\n                      programNam: '검수진행'\r\n                    }\r\n    }));\r\n}\r\n\r\nconst Home = (props) => {  \r\n  useEffect(e => {\r\n    const MASK_REDUCER = (nowState, action) => {\r\n      if(action.reducer !== 'MASK_REDUCER') {\r\n        return {\r\n          MASK     : nowState === undefined ? false : nowState.MASK,\r\n          ON_ACTIVE: nowState === undefined ? {\r\n            active : true,\r\n            time   : new Date() \r\n          } : nowState.ON_ACTIVE,\r\n        };\r\n      }\r\n      \r\n      if(action.type === 'ON_ACTIVE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          ON_ACTIVE : {\r\n            active: action.active,\r\n            time  : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'MASK'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MASK : action.MASK\r\n        })\r\n      }\r\n    }\r\n\r\n    gfs_injectAsyncReducer('MASK_REDUCER', MASK_REDUCER);\r\n    document.onvisibilitychange = e => onActiveWindow(e);\r\n\r\n    //#region 윈도우 리듀서 생성\r\n    gfs_WINDOWFRAME_REDUCER();\r\n    //#endregion\r\n\r\n    defaultData();\r\n\r\n    //화면Open\r\n    defaultOpen();\r\n  }, [])\r\n\r\n  const session = getSessionCookie(\"session\");\r\n  const leftWindow = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n    return p.open === n.open;\r\n  });\r\n\r\n  const MASK = useSelector((e) => {\r\n    if(e.MASK_REDUCER !== undefined){\r\n      return e.MASK_REDUCER.MASK;\r\n    }else{\r\n      return false;\r\n    }\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const windowState = useSelector((e) => {\r\n    if(e.WINDOWFRAME_REDUCER === undefined) {\r\n      return null;\r\n    }else{\r\n      return e.WINDOWFRAME_REDUCER.windowState\r\n    }\r\n  }, (p, n) => {\r\n    return (p === null ? 0 : p.length) === (n === null ? 0 : n.length)\r\n  });\r\n\r\n  // const SideBarMenuState = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n  //   return JSON.stringify(p) === JSON.stringify(n);\r\n  // });\r\n\r\n  // const width = SideBarMenuState[0].width;\r\n\r\n  let width = 343; \r\n  if(leftWindow.open) width = 90;\r\n  // if (session === \"SUCCESS\")\r\n  // {\r\n    isSession = true;\r\n  // }\r\n  return (\r\n    \r\n    <LoadingOverlay\r\n      active={MASK}\r\n      spinner={<GifPlayer height='100' width='100' gif={require('../src/Image/waitImage.gif').default} autoplay={MASK ? true : false}/>}\r\n      styles={{\r\n        overlay: (base) => ({\r\n          ...base,\r\n          background: 'transparent'\r\n        })\r\n      }}\r\n    >\r\n      <React.Fragment>      \r\n        {isSession ?\r\n        <>\r\n\r\n          <div style={{display:'inline-block', height:'100%'}} >\r\n            <SideBarMenuMain />\r\n          </div>\r\n          \r\n          <div style={{display:'inline-block', paddingRight:'17px', transition:'all 0.2s ease-in-out', position:'absolute', left:width, right:0, height:'100%'}}>\r\n            <div style={{display:'flex', flexDirection:'column', height:'100vh'}}>\r\n              <div style={{height:80}}>\r\n                <TabList />\r\n              </div>\r\n              <div style={{flex:1, display:'flex'}}> \r\n                <div style={{float:'left', width:'100%', position:'relative', zIndex:0, overflow:'hidden'}}>\r\n                  {windowState != null &&\r\n                    windowState.map(e => \r\n                      <WindowFrame key={e.programId} programId={e.programId} programNam={e.programNam}/>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        :\r\n          <div>LOGIN PLZZZ</div>\r\n        }\r\n        \r\n      </React.Fragment>\r\n    </LoadingOverlay>\r\n  );\r\n};\r\n\r\nexport default Home;","D:\\Project\\01.YK\\react\\src\\Login.js",["609","610","611"],"import React from 'react';\r\n\r\nimport Input from './Component/Control/Input';\r\nimport { gfo_getInput } from './Method/Component';\r\nimport { getDynamicSql_Oracle } from './db/Oracle/Oracle';\r\nimport { setSessionCookie, getSessionCookie} from './Cookies';\r\nimport { gfs_PGM_REDUCER, gfs_getStoreValue, gfs_dispatch } from './Method/Store';\r\nimport './login.css';\r\n\r\n\r\ngfs_PGM_REDUCER('login');\r\n\r\nconst onClick = async(e, user_id, pass_cd) => {\r\n\r\n  let result = await getDynamicSql_Oracle(\r\n    'Common/Common',\r\n    'LOGIN',\r\n    [{user_id,\r\n      pass_cd}]\r\n  ); \r\n\r\n  if(result.data.rows.length > 0){\r\n    gfo_getInput('login', 'id').setValue('');\r\n    gfo_getInput('login', 'pwd').setValue('');\r\n\r\n    const width = window.screen.availWidth;\r\n    const height = window.screen.availHeight;\r\n\r\n    const winProperties = 'fullscreen=yes, location=no, toolbar=no, menubar=no, resizable=yes, scrollbars=no, addressbar=no, width=' + (width) + ',height=' + (height);\r\n\r\n    e.preventDefault(); \r\n    setSessionCookie('session', 'SUCCESS', 1/1440);   \r\n    let win = window.open('Home', 'YK', winProperties);\r\n    win.moveTo(0, 0);\r\n  }else{\r\n    alert('로그인 정보가 잘못되었습니다.');\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  \r\n  return (\r\n    <div className='login_box'>\r\n\t\t  <h2><img src={require('../src/Image/yk_07@2x.png').default} width='358' height='47' alt='와이케이스틸 로고' /></h2>\r\n\r\n      \r\n      <div className='input_box'>\r\n        <div className='input_line'>\r\n          <label>ID</label>\r\n          <Input pgm='login' id='id' type='text' />\r\n        </div>\r\n        <div className='input_line'>\r\n          <label>PASSWORD</label>\r\n          <Input pgm='login' id='pwd' type='password' />\r\n        </div>\r\n        <button type='button' onClick={e => {\r\n          const id  = gfo_getInput('login', 'id').getValue();\r\n          const pwd = gfo_getInput('login', 'pwd').getValue();\r\n\r\n          onClick(e, id, pwd);\r\n        }}>로그인</button>\r\n\t\t  </div>\r\n    </div>\r\n    // <div>\r\n    //   <h1>Login</h1>\r\n    //   <div>\r\n    //     <form>\r\n    //         <ExplainInput placeholder='사용자ID' \r\n    //                       width='240px'\r\n    //                       height='35px'\r\n    //                       marginBottom='5px'\r\n    //                       parentBorder={userIdParentBorder} \r\n    //                       smallVisible={userIdspanVisible}\r\n    //                       location={userIdinputTop}\r\n    //                       onFocus={props.onUserIdFocus}\r\n    //                       onBlur={props.onUserIdBlur}\r\n    //                       onChange={props.onUserIdChange} />\r\n            \r\n    //         <ExplainInput placeholder='비밀번호' \r\n    //                       width='240px'\r\n    //                       height='35px'\r\n    //                       marginBottom='20px'\r\n    //                       parentBorder={pwdParentBorder} \r\n    //                       smallVisible={pwdspanVisible}\r\n    //                       location={pwdinputTop}\r\n    //                       onFocus={props.onPwdFocus}\r\n    //                       onBlur={props.onPwdBlur}  \r\n    //                       onChange={props.onPwdChange}\r\n    //                       type='password'/>\r\n\r\n    //       <div style={{textAlign:'center'}}>\r\n            \r\n    //       <Button value='로그인'\r\n    //               color='white'\r\n    //               disabled={btnDisabled}\r\n    //               backgroundColor={btnBackGround}\r\n    //               height='30px'\r\n    //               width='240px'\r\n    //               borderWidth='0px'\r\n    //               borderRadius='3px'\r\n    //               outline='0px' \r\n    //               onClick={e => onClick(e, userIdText, pwdText)}/>\r\n    //       </div>\r\n    //     </form>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Login;","D:\\Project\\01.YK\\react\\src\\Cookies.js",["612"],"D:\\Project\\01.YK\\react\\src\\Program\\WindowFrame.js",[],"D:\\Project\\01.YK\\react\\src\\WebReq\\WebReq.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Store.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Component.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\Input.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabList.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js",[],"D:\\Project\\01.YK\\react\\src\\db\\Mysql\\Mysql.js",[],"D:\\Project\\01.YK\\react\\src\\db\\Mysql\\MysqlServer.js",[],"D:\\Project\\01.YK\\react\\src\\JSON\\jsonControl.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Comm.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Grid.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\Combobox.js",["613"],"import React from 'react';\r\nimport Select from 'react-select';\r\nimport { gfs_dispatch } from '../../Method/Store';\r\nimport PropTypes from 'prop-types';\r\nimport { getDynamicSql_Mysql } from '../../db/Mysql/Mysql.js';\r\nimport { Component } from 'react';\r\nimport { gfo_getCombo } from '../../Method/Component';\r\nimport { gfc_getMultiLang } from '../../Method/Comm';\r\n\r\nclass Combobox extends Component{\r\n  originalValue = '';\r\n\r\n  state = {\r\n    value: '',\r\n    optionList: [],\r\n    data: this.props.data,\r\n    etcData: this.props.etcData,\r\n    oracleData: this.props.oracleData,\r\n    isDisabled: this.props.isDisabled\r\n  }\r\n\r\n  width = 0\r\n\r\n  ComboCreate = async(props) => {\r\n    this.options = []\r\n    let result = {};\r\n\r\n    if(this.state.data !== undefined){\r\n      result.data = {};\r\n      result.data.result = true;\r\n      result.data.data = this.state.data;\r\n    }else if(this.state.etcData !== undefined){\r\n      result = await this.state.etcData;\r\n      if(Object.keys(result.data) !== 'result'){\r\n        result.data.result = true;\r\n        result.data.data = result.data[Object.keys(result.data)[0]];\r\n        delete result.data[Object.keys(result.data)[0]];\r\n      }\r\n    }else if(this.state.oracleData !== undefined){\r\n      result = await this.state.oracleData;\r\n      if(Object.keys(result.data) !== 'result'){\r\n        result.data.result = true;\r\n        let data = [];\r\n        for(let i = 0; i < result.data.rows.length; i++){\r\n    \r\n          let col = {};\r\n          for(let j = 0; j < result.data.rows[i].length; j++){\r\n            col[result.data.metaData[j].name] = result.data.rows[i][j];\r\n          }\r\n          data.push(col);\r\n        }\r\n\r\n        result.data.data = data;\r\n      }\r\n    }else{\r\n      // result = await getDynamicSql_Mysql(\r\n      //   props.location,\r\n      //   props.fn,\r\n      //   [props.param]\r\n      // );\r\n    }\r\n\r\n    try{\r\n      if(result.data.result){\r\n        \r\n        for(let idx in result.data.data){\r\n          let canvas = document.createElement(\"canvas\");\r\n          let context = canvas.getContext(\"2d\");\r\n          context.font = props.fontSize + \"px bold\";\r\n          let metrics = context.measureText(result.data.data[idx][props.value]);\r\n\r\n          if(this.width < metrics.width + 10) {\r\n            if(props.fontSize >= 9)\r\n              this.width = Math.ceil(metrics.width) + 25\r\n            else\r\n              this.width = Math.ceil(metrics.width) + 20\r\n          };\r\n        }\r\n\r\n        for(let idx in result.data.data){\r\n          let arrValue = {};\r\n\r\n          const value = result.data.data[idx][props.value];\r\n          arrValue['value'] = value;\r\n\r\n          const text = result.data.data[idx][props.display];\r\n          // arrValue['labelText'] = setCode(value, maxCode) + text;\r\n          \r\n          arrValue['label'] = text;\r\n\r\n          for(let idx2 in props.field){\r\n            arrValue[props.field[idx2]] = result.data.data[idx][props.field[idx2]];\r\n          }\r\n\r\n          if(props.emptyRow){\r\n            if(idx === '0'){\r\n              this.options.push({'value': '', 'label': ''})\r\n            }\r\n          }\r\n\r\n          this.options.push(arrValue)\r\n        }\r\n\r\n        this.setState({\r\n          optionList: this.options\r\n        })\r\n      }\r\n    }catch{\r\n      let arrValue   = {};\r\n      arrValue['value'] = '';\r\n      // arrValue['labelText']  = '';\r\n      arrValue['label']  = '';\r\n      this.options.push(arrValue)\r\n    }\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    if(gfo_getCombo(props.pgm, props.id) !== undefined){\r\n      gfc_getMultiLang('dup', '콤보 아이디 중복입니다. > ' + props.pgm + ', ' + props.id);\r\n      return \r\n    } \r\n  }\r\n\r\n  componentWillUnmount(){\r\n    gfs_dispatch(this.props.pgm, 'CLEARCOMBO', \r\n      ({\r\n        id: this.props.id\r\n      })\r\n    );\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    this.ComboCreate(this.props);\r\n\r\n    gfs_dispatch(this.props.pgm, 'INITCOMBO', \r\n      ({\r\n        Combo  : {id   : this.props.id,\r\n                  Combo: this}\r\n      })\r\n    );\r\n  }\r\n\r\n  //#region 스타일  \r\n  dot = (text) => ({\r\n    display: 'flex',\r\n  \r\n    ':before': {\r\n      content: '\"' + text + '\"',\r\n      fontWeight:'bold',\r\n      width: this.width\r\n    },\r\n  });\r\n\r\n  customStyles = {\r\n    container: (base) => ({\r\n      ...base,\r\n      flex : 1,\r\n      width: this.props.width === undefined ? '100%' : this.props.width,\r\n      // width: '100%',\r\n      margin:0\r\n    }),\r\n  \r\n    control: (base) => ({\r\n      ...base,\r\n      margin:0,\r\n      height: this.props.height,\r\n      textAlign: this.align,\r\n      backgroundColor: this.state.isDisabled === true && '#FAFAFA',\r\n      borderColor:'#B5B5B5'\r\n    }),\r\n\r\n    valueContainer: (base) => ({\r\n      ...base,\r\n      padding:0,\r\n      margin: '0px 0px 0px 5px'\r\n      // zIndex: 100\r\n    }),\r\n\r\n    indicatorsContainer: (base) => ({\r\n      ...base,\r\n      padding: 0,\r\n      // display: isFoucs //'none', 'flex'\r\n    }),\r\n    \r\n    input: (base) => ({\r\n      ...base,\r\n      margin: '0px 0px 0px 3px'\r\n    }),\r\n    \r\n    menu: (base, e2) => ({\r\n      ...base,  \r\n      marginTop: 1,\r\n      // width: this.width,\r\n      width: '100%',\r\n      // width: this.width > this.props.width ? this.width : this.props.width, //지금 this.props.width를 구할수 없어 추후 수정\r\n      zIndex: 1000\r\n      // width: 400\r\n    }),\r\n\r\n    option: (base, state) => ({\r\n      ...base,\r\n      ...this.dot(state.data.value)\r\n    }),\r\n  \r\n    singleValue: (base) => ({\r\n      ...base,\r\n      margin: '0px 0px 0px 4px',\r\n      color: this.state.isDisabled === true && 'black',\r\n      // ...dot()\r\n    }),\r\n\r\n    placeholder: (base) => ({\r\n      ...base,\r\n      margin: '0px 0px 0px 4px',\r\n      // display: isFoucs //'none', 'flex'\r\n    })\r\n  }\r\n\r\n  onReset = async (e) => {\r\n    const Key = Object.keys(e);\r\n    const value = e[Key];\r\n    let values = {};\r\n\r\n    values[Key] = await value;\r\n    \r\n    this.setState(\r\n      values\r\n    )\r\n\r\n    await this.ComboCreate(this.props);\r\n  }\r\n\r\n  onFocusBase = (e) => {\r\n    if(this.props.onFocus !== undefined){\r\n      this.props.onFocus(this.ComboCreate);\r\n    }\r\n  }\r\n\r\n  onBlurBase = (e) => {\r\n    const value = this.ref.current.state.value;\r\n    if(value === null) return;\r\n    if(value === undefined) return;\r\n\r\n    const curValue = value.value;\r\n    this.props.onBlur(this.props.id, curValue, this.originalValue, this);\r\n    \r\n    if(curValue !== this.originalValue)\r\n      this.originalValue = curValue;\r\n  }\r\n\r\n  onChangeBase = (e) => {\r\n    if(this.props.onChange !== undefined){\r\n      this.props.onChange(e);\r\n    }\r\n  }\r\n\r\n  getValue = () => {\r\n    const value = this.ref.current.state.value;\r\n    if(value === null) return null;\r\n    if(value === undefined) return null;\r\n\r\n    return value.value;\r\n  }\r\n\r\n  getLabel = () => {\r\n    const label = this.ref.current.state.value;\r\n    if(label === null) return null;\r\n    if(label === undefined) return null;\r\n\r\n    return label.label;\r\n  }\r\n\r\n  setValue = (value) => {\r\n    this.ref.current.select.setValue(this.options.find(e => e.value === value));\r\n  }\r\n\r\n  setFilter = (value) => {\r\n    console.log(value);\r\n  }\r\n\r\n  setDisabled = (value) => {\r\n    this.setState({\r\n      isDisabled: value\r\n    })\r\n  }\r\n  \r\n  render(){\r\n    this.ref = React.createRef();\r\n\r\n    return (\r\n      // <div style={{zIndex:1000}} className='item'>\r\n      <div className='item'>\r\n        {this.props.label !== '' && this.props.label !== undefined &&\r\n          <div style={{float:'left', marginRight:'3px'}}>\r\n            <label htmlFor={this.props.id}>{this.props.label}</label>\r\n          </div>\r\n        }\r\n  \r\n        <Select options      = {this.state.optionList}\r\n                styles       = {this.customStyles}\r\n                placeholder  = {this.props.placeholder}\r\n                menuPlacement= 'auto'\r\n                ref          = {this.ref}\r\n                isDisabled   = {this.state.isDisabled}\r\n                // isOptionDisabled={(option) => option.disabled}\r\n                onBlur       = {e => this.onBlurBase(e)}\r\n                onFocus      = {e => this.onFocusBase(e)}\r\n                onChange     = {e => this.onChangeBase(e)}\r\n                \r\n                // menuIsOpen\r\n                  \r\n                  // inputId={this.props.id}\r\n                  // filterOption={null}\r\n  \r\n                \r\n                  // // defaultValue={option[1]} //이건 이방법뿐인듯 따로 기능구현\r\n                  // onFocus={(e) => onFocusBase(e)}\r\n                  // onBlur={(e) => onBlurBase(e)}\r\n                \r\n                  // onInputChange={(value, action) => onInputChangeBase(value, action)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCombobox.propTypes = {\r\n  pgm         : PropTypes.string.isRequired,\r\n  id          : PropTypes.string.isRequired,\r\n  value       : PropTypes.string.isRequired,\r\n  display     : PropTypes.string.isRequired,\r\n  // location    : PropTypes.string.isRequired,\r\n  // fn          : PropTypes.string.isRequired,\r\n  // field       : PropTypes.array.isRequired,\r\n\r\n  width       : PropTypes.number,\r\n  height      : PropTypes.number,\r\n  fontSize    : PropTypes.number,\r\n  label       : PropTypes.string,\r\n  menuIsOpen  : PropTypes.bool,\r\n  isDisabled  : PropTypes.bool,\r\n  isRtl       : PropTypes.bool,\r\n  isSearchable: PropTypes.bool,\r\n  isMulti     : PropTypes.bool,\r\n  blurInputOnSelect: PropTypes.bool,\r\n  closeMenuOnSelect: PropTypes.bool,\r\n  placeholder : PropTypes.string,\r\n\r\n  onChange    : PropTypes.func,\r\n  onMenuOpen  : PropTypes.func,\r\n  onMenuClose : PropTypes.func,\r\n  onFocus     : PropTypes.func,\r\n  onBlur      : PropTypes.func\r\n};\r\n\r\nCombobox.defaultProps = {\r\n  // width       : 150,\r\n  height      : 23,\r\n  fontSize    : 14,\r\n  label       : '',\r\n  menuIsOpen  : false,\r\n  isDisabled  : false,\r\n  isRtl       : false,\r\n  isSearchable: true,\r\n  isMulti     : false,\r\n  blurInputOnSelect: false,\r\n  closeMenuOnSelect: false,\r\n  placeholder : '',\r\n\r\n  onChange    : (e) => {},\r\n  onMenuOpen  : () => {},\r\n  onMenuClose : () => {},\r\n  onFocus     : (e) => {},\r\n  onBlur      : (e) => {}\r\n};\r\n\r\nexport default Combobox;","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Image.js",["614"],"import { gfg_getRow } from '../../../Method/Grid';\r\nimport ReactDOM from 'react-dom';\r\n/**\r\n * name : 컬럼명\r\n * \r\n * header : 헤더명\r\n * \r\n * width(100) : Width\r\n * \r\n * onRender: {(value, el, rows)}\r\n * \r\n * resizable(true) : 컬럼넓이 조정여부\r\n * \r\n * imgItem: {}\r\n */\r\nexport const Image = (props) => {\r\n  const name      = props.name;\r\n  const header    = props.header;\r\n  const width     = props.width !== undefined ? props.width : 100;\r\n  const resizable = props.resizable !== undefined ? props.resizable : true;\r\n  const readOnly  = true;\r\n  const align     = props.align !== undefined ? props.align : 'center';\r\n  const valign    = props.valign !== undefined ? props.valign : 'middle';\r\n  const imgItem   = props.imgItem;\r\n\r\n  const rtn = {name,\r\n               header,\r\n               width,\r\n               resizable,\r\n               imgItem\r\n              }\r\n  \r\n  rtn.renderer = {\r\n    type   : ImageRenderer,\r\n    options: {\r\n      align : align,\r\n      valign: valign,\r\n      onRender: props.onRender,\r\n      readOnly,\r\n      imgItem\r\n    }\r\n  }\r\n\r\n  return rtn;\r\n}\r\n\r\nclass ImageRenderer {\r\n  constructor(props) {\r\n    const el = document.createElement('div');\r\n\r\n    this.el = el;\r\n    this.render(props);\r\n  }\r\n\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n\r\n  render(props) {\r\n    const grid = props.grid;\r\n    const rowKey = props.rowKey;\r\n    const height = grid.store.rowCoords.heights[rowKey];\r\n\r\n    const option = props.columnInfo.renderer.options;\r\n    const imgItem = option.imgItem;\r\n\r\n    let value = String((props.value === null || props.value === undefined) ? '' : props.value);   \r\n    const viewImg = imgItem.filter(e => e.code === value);\r\n\r\n    if(viewImg.length > 0) ReactDOM.render(viewImg[0].value, this.el);\r\n\r\n    this.el.setAttribute('style', `height: ${height - 1}px; \r\n                                   width:100%; \r\n                                   display:flex;justify-content:center;align-items:center;\r\n                                   border: 0px; \r\n                                   background-color:white;\r\n                                   text-align:${option['align']}; \r\n                                   vertical-align:${option['valign']}; \r\n                                   `)\r\n\r\n\r\n    // this.el.setAttribute('style', `height: 27px; \r\n    //                                width:calc(100% - 5px); \r\n    //                                background-color:white;\r\n    //                                padding: 0px 5px 0px 5px;\r\n    //                                border: 0px; \r\n    //                               `)\r\n    // this.el.value = value\r\n  }\r\n}","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Input.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Combobox.js",["615","616","617"],"import React from 'react';\r\nimport Select from 'react-select';\r\nimport ReactDOM from 'react-dom';\r\nimport { getDynamicSql_Mysql } from '../../../db/Mysql/Mysql';\r\n\r\nimport { gfc_sleep } from '../../../Method/Comm';\r\nimport { gfg_getRow } from '../../../Method/Grid';\r\n\r\n/**\r\n * name : 컬럼명\r\n * \r\n * header : 헤더명\r\n * \r\n * width(100) : Width\r\n * \r\n * readOnly(true) : readOnly\r\n * \r\n * format(설정값) : 날짜포맷\r\n * \r\n * fontSize :  폰트크기\r\n * \r\n * onRender: {(value, el, rows)}\r\n * \r\n * align(center(기본) | left | right) : 좌우정렬\r\n * \r\n * valign(top | middle(기본) | bottom) : 상하정렬\r\n * \r\n * resizable(true) : 컬럼넓이 조정여부\r\n * \r\n * data([{}]) : 데이터직접입력\r\n * \r\n * editor: { \r\n * \r\n *   location: \r\n * \r\n *   fn:\r\n * \r\n *   value:\r\n * \r\n *   display: \r\n * \r\n *   field: []\r\n * \r\n *   parma: {}\r\n * \r\n *   emptyRow:\r\n * \r\n *   onFilter: (e) => { }\r\n *\r\n * }\r\n */\r\n// export const Combobox = (name, header, width = 100, readOnly = false, editor, align = 'left', valign = 'middle', resizable = true) => {\r\nexport const Combobox = (props) => {\r\n  const name      = props.name;\r\n  const header    = props.header;\r\n  const width     = props.width !== undefined ? props.width : 100;\r\n  const readOnly  = props.readOnly !== undefined ? props.readOnly : true;\r\n  const fontSize  = props.fontSize !== undefined ? props.fontSize : '13';\r\n  const align     = props.align !== undefined ? props.align : 'center';\r\n  const valign    = props.valign !== undefined ? props.valign : 'middle';\r\n  const resizable = props.resizable !== undefined ? props.resizable : false;\r\n  const data      = props.data !== undefined ? props.data : undefined;\r\n  const etcData   = props.etcData !== undefined ? props.etcData : undefined;\r\n  const editor    = props.editor;\r\n\r\n  const rtn = {name,  \r\n               header, \r\n               width, \r\n               align, \r\n               valign, \r\n               resizable,\r\n               fontSize,\r\n               data,\r\n               etcData}\r\n\r\n  const queryResult = new ComboInit({\r\n    location: editor !== undefined ? editor.location : '',\r\n    fn      : editor !== undefined ? editor.fn : '',\r\n    value   : editor !== undefined ? editor.value : '',\r\n    display : editor !== undefined ? editor.display : '',\r\n    field   : editor !== undefined ? editor.field : '',\r\n    param   : editor !== undefined ? editor.param : '',\r\n    emptyRow: editor !== undefined ? editor.emptyRow : '',\r\n    fontSize: editor !== undefined ? editor.fontSize : '13',\r\n    data,\r\n    etcData\r\n  });\r\n\r\n  // rtn.editor = {\r\n  //   type   : 'select',\r\n  //   options: {\r\n  //     listItems: queryResult.optionList\r\n  //   }\r\n  // }\r\n\r\n  if(!readOnly){\r\n    rtn.editor = {\r\n      type   : ComboEditor,\r\n      data,\r\n      etcData,\r\n      options: {\r\n        align,\r\n        fontSize,\r\n        queryResult,\r\n        onRender: props.onRender,\r\n        onFilter: editor !== undefined ? editor.onFilter : ''\r\n      }\r\n    }\r\n  }\r\n\r\n  rtn.renderer = {\r\n    type   : ComboboxRenderer,\r\n    data,\r\n    etcData,\r\n    options: {\r\n      align,\r\n      valign,\r\n      fontSize,\r\n      onRender: props.onRender,\r\n      listItems: queryResult.optionList\r\n    }\r\n  }\r\n\r\n  return rtn;\r\n}\r\n\r\nclass ComboEditor {\r\n  constructor(props){\r\n    const option   = props.columnInfo.editor.options;\r\n    const align    = option.align;\r\n    const queryResult = option.queryResult;\r\n    let optionList = option.queryResult.optionList;\r\n    const width = queryResult.width;\r\n    const onFilter = option.onFilter;\r\n\r\n    if(onFilter !== undefined && onFilter !== '') optionList = onFilter(optionList)\r\n    \r\n    const dot = (text) => ({\r\n      display: 'flex',\r\n    \r\n      ':before': {\r\n        content: '\"' + text + '\"',\r\n        fontWeight:'bold',\r\n        width: width\r\n      },\r\n    });\r\n\r\n    const customStyles = {\r\n      container: (base) => ({\r\n        ...base,\r\n        flex : 1,\r\n        width: props.width === undefined ? '100%' : props.width,\r\n        // width: '100%',\r\n        margin:0\r\n      }),\r\n    \r\n      control: (base) => ({\r\n        ...base,\r\n        margin:0,\r\n        textAlign: align\r\n      }),\r\n  \r\n      valueContainer: (base) => ({\r\n        ...base,\r\n        padding:0\r\n      }),\r\n  \r\n      indicatorsContainer: (base) => ({\r\n        ...base,\r\n        padding: 0,\r\n        // display: isFoucs //'none', 'flex'\r\n      }),\r\n      \r\n      input: (base) => ({\r\n        ...base,\r\n        margin: '0px 0px 0px 3px'\r\n      }),\r\n      menu: (base, e2) => ({\r\n        ...base,  \r\n        marginTop: 1,\r\n        // width: '100%',\r\n        width: ComboInit.width > props.width ? ComboInit.width : props.width,\r\n        zIndex: 1000,\r\n        fontSize: option.fontSize\r\n      }),\r\n  \r\n      option: (base, state) => ({\r\n        ...base,\r\n        ...dot(state.data.value)\r\n      }),\r\n   \r\n      singleValue: (base) => ({\r\n        ...base,\r\n        margin: '0px 0px 0px 4px',\r\n        fontSize: option.fontSize\r\n        // ...dot()\r\n      }),\r\n  \r\n      placeholder: (base) => ({\r\n        ...base,\r\n        margin: '0px 0px 0px 4px',\r\n        // display: isFoucs //'none', 'flex'\r\n      })\r\n    }\r\n\r\n    // console.log(queryResult.optionList.findIndex(e => e.value === props.value))\r\n    const onBlur = async(e) => {\r\n      await gfc_sleep(10);\r\n\r\n      var event = document.createEvent(\"Events\");\r\n      event.initEvent('keydown', true, true);\r\n      event.keyCode = 9;\r\n      this.el.dispatchEvent(event);\r\n    }\r\n\r\n    const init = async(e) => {\r\n\r\n      this.ref = React.createRef();\r\n      this.grid = props.grid;\r\n  \r\n      const el = document.createElement('div'); \r\n      const combo = <Select options={optionList}\r\n                            styles={customStyles}\r\n                            defaultValue={optionList.find(e => e.value === props.value)}\r\n                            \r\n                            isMulti={false}\r\n                            ref={this.ref}\r\n                            placeholder=''\r\n                            menuPlacement='auto'\r\n\r\n                            // isDisabled\r\n                            // defaultMenuIsOpen\r\n  \r\n                            // blurInputOnSelect={true}\r\n                            // onBlur={(e) => onBlur(e)}\r\n                            // onFocus={e => console.log(e)}\r\n                            // onMenuOpen={e => console.log(e)}                            \r\n                            \r\n  \r\n  \r\n                            // onMenuClose={e => this.setBlur()}\r\n                            // onChange={e => this.setBlur()}\r\n                            \r\n                            // blurInputOnSelect={true}\r\n                            // filterOption={null} \r\n                            //  onChange={(e) => onChangeBase(e)}\r\n                          \r\n                            //  // defaultValue={option[1]} //이건 이방법뿐인듯 따로 기능구현\r\n                            //  onFocus={(e) => onFocusBase(e)}\r\n                            //  onBlur={(e) => onBlurBase(e)}\r\n                          \r\n                            //  onInputChange={(value, action) => onInputChangeBase(value, action)}\r\n                        />;\r\n      ReactDOM.render(combo, el)\r\n      this.el = el;\r\n\r\n      if(option['onRender'] !== undefined){\r\n        const onRender = option.onRender;\r\n        const rows = gfg_getRow(props.grid, props.rowKey);\r\n        // onRender(props.value, combo.ref.current, rows);\r\n        combo.ref.current.select.isDisabled = true;\r\n      }\r\n\r\n      const input = combo._self.el.getElementsByTagName('input');\r\n      if(input !== undefined && input !== null){\r\n        await gfc_sleep(50);\r\n        input[0].focus();\r\n      }\r\n\r\n      // combo._self.el.children[0].children[1].children[0].children[1].children[0].children[0].focus();\r\n\r\n      // console.log(combo._self.el.children[0].children[1].children[0].children[1].children[0].children[0]);\r\n      // console.log(combo._self.el.getElementsByTagName('input')[0]);\r\n    }\r\n\r\n    init();\r\n  }\r\n\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n\r\n  getValue() {\r\n    let value = this.ref.current.state.value;\r\n\r\n    if(value === null) value = '';\r\n    else value = this.ref.current.state.value.value;\r\n\r\n    return value;\r\n  }\r\n\r\n  mounted() {\r\n    // this.el.select();\r\n  }\r\n}\r\n\r\nclass ComboInit {\r\n\r\n  optionList = []\r\n  width = 0\r\n\r\n  ComboCreate = async(props) => {\r\n    let result = {};\r\n\r\n    if(props.data !== undefined){\r\n      result.data = {};\r\n      result.data.result = true;\r\n      result.data.data = props.data;\r\n    }else if(props.etcData !== undefined){\r\n      result = await props.etcData;\r\n      if(Object.keys(result.data) !== 'result'){\r\n        result.data.result = true;\r\n        result.data.data = result.data[Object.keys(result.data)[0]];\r\n        delete result.data[Object.keys(result.data)[0]];\r\n      }\r\n    }else{\r\n      result = await getDynamicSql_Mysql(\r\n        props.location,\r\n        props.fn,\r\n        [props.param]\r\n      );\r\n    }\r\n    \r\n    try{\r\n      if(result.data.result){\r\n        \r\n        for(let idx in result.data.data){\r\n          let canvas = document.createElement(\"canvas\");\r\n          let context = canvas.getContext(\"2d\");\r\n          context.font = (props.fontSize === undefined ? '13' : props.fontSize) + \"px bold\";\r\n          let metrics = context.measureText(result.data.data[idx][props.value] );\r\n\r\n          if(this.width < metrics.width + 10) {\r\n            if(props.fontSize >= 9)\r\n              this.width = Math.ceil(metrics.width) + 25\r\n            else\r\n              this.width = Math.ceil(metrics.width) + 20\r\n          };\r\n        }\r\n\r\n        for(let idx in result.data.data){\r\n          let arrValue = {};\r\n\r\n          const value = result.data.data[idx][props.value];\r\n          arrValue['value'] = value;\r\n\r\n          const text = result.data.data[idx][props.display];\r\n          // arrValue['labelText'] = setCode(value, maxCode) + text;\r\n          \r\n          arrValue['label'] = text;\r\n\r\n          for(let idx2 in props.field){\r\n            arrValue[props.field[idx2]] = result.data.data[idx][props.field[idx2]];\r\n          }\r\n\r\n          if(props.emptyRow){\r\n            if(idx === '0'){\r\n              // this.optionList.push({'value': '', 'labelText': setCode('', maxCode) + '', 'label': ''})\r\n              this.optionList.push({'value': '', 'label': ''})\r\n            }\r\n          }\r\n\r\n          this.optionList.push(arrValue)\r\n        }\r\n      }\r\n    }catch{\r\n      let arrValue   = {};\r\n      arrValue['value'] = '';\r\n      // arrValue['labelText']  = '';\r\n      arrValue['label']  = '';\r\n      this.optionList.push(arrValue)\r\n    }\r\n  }\r\n\r\n  constructor(props){\r\n    this.ComboCreate(props);\r\n  }\r\n}\r\n\r\nclass ComboboxRenderer {\r\n  constructor(props) {\r\n    //이것때문에 이상현상발생 null에 첫select의 값이 들어감 나중에 이상시 이것한번 체크\r\n    // if(props.columnInfo.defaultValue === undefined) props.columnInfo.defaultValue = props.value;\r\n    const el = document.createElement('input');\r\n\r\n    this.el = el;\r\n    this.render(props);\r\n  }\r\n\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n\r\n  render(props) {\r\n    const option = props.columnInfo.renderer.options;\r\n    const grid = props.grid;\r\n    const rowKey = props.rowKey;\r\n    const height = grid.store.rowCoords.heights[rowKey];\r\n    let value = props.value;\r\n    if(value === undefined || value === null) value = ''; else value = value.toString();\r\n\r\n    const listItems = props.columnInfo.renderer.options.listItems.filter(e => e.value === value);\r\n    if(listItems.length > 0) {\r\n      this.el.value = listItems[0].label;\r\n    }else{\r\n      this.el.value = value;\r\n    }\r\n\r\n    const orgData = props.grid.dataManager.getOriginData();\r\n    let org = orgData.length <= props.rowKey ? '' : props.grid.dataManager.getOriginData()[props.rowKey][props.columnInfo.name];\r\n    if(org === undefined || org === null) org = '';\r\n\r\n    let backGround = 'white';\r\n    if(org.toString() !== value.toString()) backGround = 'greenYellow'\r\n    \r\n    this.el.type = 'text';\r\n    // this.el.setAttribute('style', `height:33px; margin:0 5px 0 5px; text-align:${option['align']}; border: 0px; background-color:${backGround};display:table-cell; width:calc(100% - 10px);`)\r\n    this.el.setAttribute('style', `height: ${height - 1}px; \r\n                                   text-align:${option['align']}; \r\n                                   border: 0px; \r\n                                   background-color:${backGround};\r\n                                   display:table-cell; \r\n                                   font-size:${option['fontSize']}; \r\n                                   width:100%;`)\r\n  }\r\n}","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Grid.js",["618","619","620","621"],"//#region Import\r\nimport './CSS/Grid.css';\r\n// import './CSS/Date.css';\r\n// import './CSS/Time.css';\r\n// import 'tui-grid/dist/tui-grid.css';\r\nimport Draggable from 'react-draggable';\r\n\r\n// import Grid from 'tui-grid';\r\nimport Grid from '@toast-ui/react-grid';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect, useRef } from 'react';\r\nimport { gfs_getStoreValue, gfs_dispatch } from '../../Method/Store';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\n\r\nimport { gfc_getMultiLang, gfc_getAtt, gfc_sleep } from '../../Method/Comm';\r\nimport { gfg_getGrid } from '../../Method/Grid';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { getCallSP_Mysql } from '../../db/Mysql/Mysql';\r\n//#endregion\r\n\r\nconst RtnGrid = (props) => {\r\n\r\n  let   frozenCount = props.frozenCount;\r\n  const columns = props.columns;\r\n\r\n  const setFrozenCount = (cnt) => {\r\n    frozenCount = cnt;\r\n  }\r\n\r\n  const onResize = (width, height) => {\r\n    const grid = gfg_getGrid(props.pgm, props.id);\r\n\r\n    if(grid){\r\n      try{\r\n        if(Object.keys(grid).length > 0){\r\n          // window.dispatchEvent(new Event('resize'));\r\n          grid.setWidth(width);\r\n          grid.setHeight(height);\r\n        }\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }\r\n  };\r\n\r\n  //#region 헤더 설정\r\n  const setHeader = (columnId, columnNam, width, parent) => {\r\n    let elementResizeDetectorMaker = require('element-resize-detector');\r\n    let erd = elementResizeDetectorMaker();\r\n\r\n    const divMain = document.createElement('div');\r\n    divMain.style = `width: ${width}; height: 100%; top: 0; cursor:move; position: absolute; background: transparent;`;\r\n    parent.appendChild(divMain);\r\n\r\n    erd.listenTo(parent, function(element) {\r\n      let width = element.clientWidth;\r\n      divMain.style.width = width;\r\n    });\r\n\r\n    const divLeft = document.createElement('div');\r\n    divLeft.style = `width: 50%; height: 100%; float:left; top: 0; background: transparent;`;\r\n    divMain.appendChild(divLeft);\r\n\r\n    const divRight = document.createElement('div');\r\n    divRight.style = `width: 50%; height: 100%; float:left; top: 0; background: transparent;`;\r\n    divMain.appendChild(divRight);\r\n\r\n    ReactDOM.render(crtDraggable(columnId, 'LEFT', columnNam), divLeft);\r\n    ReactDOM.render(crtDraggable(columnId, 'RIGHT', columnNam), divRight);\r\n  }\r\n\r\n  const setHeaderEach = async (columnId, columnNam, width) => {\r\n    await gfc_sleep(200);        \r\n    \r\n    const header = gridRef.current.gridInst.el.querySelectorAll('div.tui-grid-header-area');   \r\n\r\n    header.forEach(e => {\r\n      const each = e.querySelectorAll('th.tui-grid-cell.tui-grid-cell-header');\r\n      each.forEach(e => {\r\n        if(e.dataset.columnName === columnId){\r\n          setHeader(columnId, columnNam, width, e);\r\n          return;\r\n        }\r\n      })\r\n    })\r\n  }\r\n  //#endregion\r\n\r\n  //#region 컬럼헤더 드래그\r\n  const crtDraggable = (columnId, LR, columnNam) => {\r\n    \r\n    let drg = <Draggable axis='x'\r\n                         handle={'.handle_' + LR}\r\n                         position={{x:0, y:0}}\r\n                         scale={1}\r\n                              \r\n                         onStop={(e1, e2) => {\r\n                           const fromId = e2.node.dataset.id;\r\n                           const toId = e1.target.dataset.id;\r\n                           const lr = e1.target.dataset.lr;\r\n\r\n                           if(fromId !== undefined){\r\n                             if(toId !== undefined){\r\n                               \r\n                               if(fromId !== toId){\r\n                                 const fromIndex = columns.findIndex(e => e.name === fromId);\r\n                                 let toIndex = columns.findIndex(e => e.name === toId);\r\n                                 if(lr === 'RIGHT') {\r\n                                   toIndex = toIndex + 1;\r\n                                 }\r\n      \r\n                                 const from = columns[fromIndex];\r\n                                 columns.splice(toIndex, 0, from);\r\n\r\n                                 if(fromIndex < toIndex){\r\n                                   for(let i = 0; i < columns.length; i++){\r\n                                     if(columns[i].name === from.name){\r\n                                       columns.splice(i, 1);\r\n                                       break;\r\n                                     }\r\n                                   }\r\n                                 }else{\r\n                                  for(let i = columns.length - 1; i >= 0; i--){\r\n                                    if(columns[i].name === from.name){\r\n                                      columns.splice(i, 1);\r\n                                      break;\r\n                                    }\r\n                                  }\r\n                                 }\r\n                                 \r\n                                 gridRef.current.getInstance().setColumns(columns);\r\n                               }\r\n                             }\r\n                          }\r\n                    }}\r\n                  >\r\n                  <div data-id={columnId} data-nam={columnNam} data-lr={LR} className={'handle_' + LR} style={{width:'99%', height:'100%'}} />\r\n                </Draggable>;\r\n    return drg;\r\n  }\r\n  //#endregion\r\n\r\n  //#region 컬럼 틀고정(해제)\r\n  const fixedFrame = (id, parent) => {\r\n    if(id === '_number') return;\r\n\r\n    let index = columns.findIndex(e => e.name === id);\r\n    \r\n    let nam = '틀고정';\r\n    if(frozenCount > 0){\r\n      if(frozenCount > index) nam = '틀고정해제';\r\n    }\r\n\r\n    const contextFixedUl = document.createElement('li');\r\n    contextFixedUl.innerHTML = gfc_getAtt(nam);\r\n    contextFixedUl.style = 'margin-top: 5px;';\r\n    contextFixedUl.onclick = e => {\r\n      //틀고정 해제인경우\r\n      if(frozenCount > index){\r\n        //1. 해당컬럼 확인\r\n        const from = columns[index];\r\n\r\n        //1-1. 기존컬럼삭제\r\n        columns.splice(index, 1); \r\n\r\n        //2. 틀고정 설정을 한다.\r\n        setFrozenCount(frozenCount - 1);\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n\r\n        //2-1. 컬럼이동\r\n        columns.splice(frozenCount, 0, from);\r\n        gridRef.current.getInstance().setColumns(columns);\r\n        \r\n        setHeaderEach(from.name, from.header, from.width);\r\n      }else{\r\n        //1. 해당컬럼 확인\r\n        const from = columns[index];\r\n\r\n        //1-1. 기존컬럼삭제\r\n        columns.splice(index, 1);\r\n\r\n        //2. 틀고정 설정을 한다.\r\n        setFrozenCount(frozenCount + 1);\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n\r\n        //2-1. 컬럼이동\r\n        columns.splice(frozenCount - 1, 0, from);\r\n        gridRef.current.getInstance().setColumns(columns);\r\n      }\r\n    }\r\n    \r\n    parent.appendChild(contextFixedUl);\r\n  }\r\n  //#endregion\r\n\r\n  //#region 컬럼숨김(해제)\r\n  const columnVisible = (id, parent) => {\r\n    if(id === '_number') return;\r\n    \r\n    const contextVisible = document.createElement('li');\r\n    contextVisible.innerHTML = gfc_getAtt('숨기기');\r\n    contextVisible.style = 'margin-top: 5px;';\r\n    contextVisible.onclick = () => {\r\n      const index = columns.findIndex(e => e.name === id);\r\n\r\n      //컬럼순서 때문에 숨김처리시 제일뒤로 보낸다.\r\n      const from = columns[index];\r\n\r\n      columns.splice(index, 1);\r\n      columns.splice(columns.length, 0, from);\r\n\r\n      gridRef.current.getInstance().hideColumn(id);\r\n      from.hidden = true;\r\n      gridRef.current.getInstance().setColumns(columns);\r\n\r\n      if(frozenCount > index){\r\n        setFrozenCount(frozenCount - 1);\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n      }\r\n    }\r\n\r\n    parent.appendChild(contextVisible);\r\n\r\n    const hide = columns.filter(e => e.hidden);\r\n\r\n    if(hide.length > 0){\r\n\r\n      const contextShow = document.createElement('li');\r\n      contextShow.innerHTML = gfc_getAtt('숨기기 취소');\r\n      contextShow.style = 'margin-top: 5px;';\r\n\r\n      const contextShowUl = document.createElement('ul');\r\n      contextShowUl.style = 'margin-top: 5px;';\r\n      contextShow.appendChild(contextShowUl);\r\n\r\n      const onShow = (id, parentId) => {\r\n        \r\n        const index = columns.findIndex(e => e.name === id);\r\n        const parentIndex = columns.findIndex(e => e.name === parentId);\r\n        const from = columns[index];\r\n\r\n        columns.splice(index, 1);\r\n        columns.splice(frozenCount === 0 ? parentIndex + 1 : frozenCount, 0, from);\r\n\r\n        gridRef.current.getInstance().showColumn(id);\r\n        from.hidden = false;\r\n        gridRef.current.getInstance().setColumns(columns);\r\n\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n        setHeaderEach(from.name, from.header, from.width);\r\n      }\r\n\r\n      for(let idx in hide){\r\n\r\n        const contextShowUlLi = document.createElement('li');\r\n        contextShowUlLi.innerHTML = gfc_getAtt(hide[idx].header);\r\n        contextShowUlLi.style = 'margin-top: 5px;';\r\n        contextShowUlLi.onclick = (e) => onShow(hide[idx].name, id);\r\n        contextShowUl.appendChild(contextShowUlLi);\r\n        \r\n        parent.appendChild(contextShow);\r\n      }\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region 그리드초기화\r\n  const resetGrid = (parent) => {\r\n\r\n    const contextInit = document.createElement('li');\r\n    contextInit.innerHTML = gfc_getAtt('설정초기화');\r\n    contextInit.onclick = () =>{\r\n\r\n      const CRTCHR_NO = gfs_getStoreValue('USER_REDUCER', 'USER_ID');\r\n      const PGM_ID    = props.pgm;\r\n      const GRID_ID   = props.id;\r\n\r\n      getCallSP_Mysql(\r\n        [{SP           : 'SP_PGM_GRID',\r\n          ROWSTATUS    : 'D',\r\n          PGM_ID,\r\n          GRID_ID,\r\n          GRID_COL_NAM : '',\r\n          HIDE_YN      : '',\r\n          LOCK_YN      : '',\r\n          WIDTH        : 0,\r\n          SEQ          : 0,\r\n          CRTCHR_NO\r\n        }]\r\n      ).then(\r\n        e => {\r\n          gridRef.current.getInstance().setColumns(props.columns);\r\n          gridRef.current.getInstance().setFrozenColumnCount(props.frozenCount);\r\n\r\n          if(e.data.result){\r\n  \r\n          }else{\r\n            if(e.data.MSG_CODE !== 'NO')\r\n              gfc_getMultiLang('dup', '그리드 설정시 오류가 발생했습니다. > ' + props.pgm + ', ' + props.id);\r\n          }\r\n        }\r\n      )\r\n    };\r\n\r\n    parent.appendChild(contextInit);\r\n  }\r\n  //#endregion\r\n\r\n  //#region 그리드 설정저장\r\n  const saveGrid = (parent) => {\r\n\r\n    const contextSave = document.createElement('li');\r\n    contextSave.innerHTML = gfc_getAtt('설정저장');\r\n    contextSave.style = 'margin-top: 5px;';\r\n\r\n    contextSave.onclick = () =>{\r\n\r\n      const CRTCHR_NO = gfs_getStoreValue('USER_REDUCER', 'USER_ID');\r\n      const PGM_ID    = props.pgm;\r\n      const GRID_ID   = props.id;\r\n      \r\n      let seq = 1;\r\n      const param = [];\r\n      columns.forEach(e => {\r\n        const GRID_COL_NAM = e.name;\r\n        const HIDE_YN      = e.hidden ? 'Y' : 'N';\r\n        const LOCK_YN      = frozenCount >= seq ? 'Y' : 'N';\r\n        const WIDTH        = e.width;\r\n        \r\n        param[seq - 1] = {SP           : 'SP_PGM_GRID',\r\n                          ROWSTATUS    : 'I',\r\n                          PGM_ID,\r\n                          GRID_ID,\r\n                          GRID_COL_NAM,\r\n                          HIDE_YN,\r\n                          LOCK_YN,\r\n                          WIDTH,\r\n                          SEQ          : seq,\r\n                          CRTCHR_NO\r\n                        }\r\n\r\n        seq = seq + 1;\r\n      })\r\n\r\n      getCallSP_Mysql(\r\n        param\r\n      ).then(\r\n        e => {\r\n          // console.log(e)\r\n          // gridRef.current.getInstance().setColumns(props.columns);\r\n          // gridRef.current.getInstance().setFrozenColumnCount(props.frozenCount);\r\n\r\n          if(e.data.result){\r\n            gfc_getMultiLang('OK', '저장되었습니다. > ' + props.pgm + ', ' + props.id);\r\n          }else{\r\n            gfc_getMultiLang('dup', '그리드 설정시 오류가 발생했습니다. > ' + props.pgm + ', ' + props.id);\r\n          }\r\n        }\r\n      )\r\n    };\r\n\r\n    parent.appendChild(contextSave);\r\n  }\r\n  //#endregion\r\n\r\n  const gridRef = useRef(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { width, height, ref } = useResizeDetector({onResize});\r\n\r\n  useEffect(() => {\r\n    if(gfg_getGrid(props.pgm, props.id) !== undefined){\r\n      gfc_getMultiLang('dup', '그리드 아이디 중복입니다. > ' + props.pgm + ', ' + props.id);\r\n      return \r\n    }\r\n\r\n    gridRef.current.getInstance().on('focusChange', (e) => {\r\n      if(e.rowKey === e.prevRowKey)\r\n        return false;\r\n      else{\r\n        // gridRef.current.getInstance().setSelectionRange({\r\n        //   start: [e.rowKey, 0],\r\n        //   end: [e.rowKey, gridRef.current.getInstance().getColumns().length - 1]\r\n        // });\r\n\r\n        if(props.selectionChange !== undefined)\r\n          props.selectionChange(gridRef.current.getInstance().getRow(e.rowKey));\r\n      }\r\n    })\r\n\r\n    gridRef.current.getInstance().on('click', (e) => {\r\n      if(e.targetType === 'columnHeader'){\r\n        if(props.headerClick !== undefined){\r\n          props.headerClick(e);\r\n        }\r\n      }\r\n    })\r\n\r\n    gridRef.current.getInstance().on('afterChange', (e) => {\r\n      if(props.afterChange !== undefined)\r\n        props.afterChange(e.changes[0]);\r\n    })\r\n\r\n    gridRef.current.getInstance().on('dblclick', (e) => {\r\n      if(props.dblclick !== undefined){\r\n        if(e.targetType !== 'etc'){\r\n          props.dblclick(e.columnName);\r\n        }\r\n      }\r\n    })\r\n        \r\n    gfs_dispatch(props.pgm, 'INITGRID', \r\n      ({\r\n        Grid:{id  : props.id,\r\n              Grid: gridRef.current.getInstance()}\r\n      })\r\n    );\r\n\r\n    return() => {\r\n      gfs_dispatch(props.pgm, 'CLEARGRID', \r\n        ({\r\n          id: props.id\r\n        })\r\n      );\r\n    }\r\n\r\n    // const CRTCHR_NO = gfs_getStoreValue('USER_REDUCER', 'USER_ID');\r\n    // const PGM_ID    = props.pgm;\r\n    // const GRID_ID   = props.id;\r\n\r\n    // getCallSP_Mysql(\r\n    //   [{SP           : 'SP_PGM_GRID',\r\n    //     ROWSTATUS    : 'R',\r\n    //     PGM_ID,\r\n    //     GRID_ID,\r\n    //     GRID_COL_NAM : '',\r\n    //     HIDE_YN      : '',\r\n    //     LOCK_YN      : '',\r\n    //     WIDTH        : 0,\r\n    //     SEQ          : 0,\r\n    //     CRTCHR_NO\r\n    //   }]\r\n    // ).then(\r\n    //   e => {\r\n       \r\n    //     const header = gridRef.current.gridInst.el.querySelectorAll('div.tui-grid-header-area');   \r\n    \r\n    //     for(let idx = 0; idx < header.length; idx++){\r\n    //       header[idx].addEventListener('contextmenu', e => {\r\n    //         let id = e.target.dataset.id;\r\n    //         let nam = e.target.dataset.nam;\r\n    \r\n    //         if(id === undefined){\r\n    //           id = e.target.dataset.columnName;\r\n    //         }\r\n    \r\n    //         if(nam === undefined){\r\n    //           nam = columns.find(e => e.name === id);\r\n    //           if(nam !== undefined){\r\n    //             nam = nam.header;\r\n    //           }\r\n    //         }\r\n    \r\n    //         if(nam === undefined) return;\r\n    \r\n    //         e.preventDefault()\r\n            \r\n    //         const contextDiv = document.createElement('div');\r\n    //         contextDiv.id = props.pgm + '_' + props.id + '_contextmenu';\r\n    //         contextDiv.style = 'position:fixed;width:150px; background: #fff;box-shadow:1px 1px 5px 0 rgba(0, 0, 0, 0.54)';\r\n    \r\n    //         const fDiv = document.getElementById(contextDiv.id);\r\n    //         if(fDiv !== null){\r\n    //           document.body.removeChild(fDiv);\r\n    //         }\r\n    \r\n    //         document.addEventListener('click', () => {\r\n    //           const fDiv = document.getElementById(contextDiv.id);\r\n    //           if(fDiv !== null){\r\n    //             document.body.removeChild(fDiv);\r\n    //           }\r\n    //         }); \r\n    //         document.body.appendChild(contextDiv);\r\n            \r\n    //         const contextChild = document.createElement('input');\r\n    //         contextChild.style = 'width:148px; height:30; text-align:center; margin: 1 0 0 1';\r\n    //         contextChild.value = nam;\r\n    //         contextDiv.appendChild(contextChild);\r\n    \r\n    //         const contextUl = document.createElement('ul');\r\n    //         contextUl.style = 'width:148px; font-size:13;margin-top: 3px;';\r\n    //         contextDiv.appendChild(contextUl); \r\n    \r\n    //         //설정 초기화\r\n    //         resetGrid(contextUl);\r\n    \r\n    //         //설정 저장\r\n    //         saveGrid(contextUl);\r\n    \r\n    //         //틀고정\r\n    //         fixedFrame(id, contextUl);\r\n    \r\n    //         //숨김\r\n    //         columnVisible(id, contextUl);\r\n            \r\n    //         if(e.which === 3){\r\n    //           let x = e.pageX + 'px'; // 현재 마우스의 X좌표\r\n    //           let y = e.pageY + 'px'; // 현재 마우스의 Y좌표\r\n    //           contextDiv.style.left = x;\r\n    //           contextDiv.style.top = y;\r\n    //         }\r\n    //       });\r\n          \r\n    //       const each = header[idx].querySelectorAll('th.tui-grid-cell.tui-grid-cell-header');\r\n          \r\n    //       for(let j = 0; j < each.length; j++){\r\n    //         const columnId  = each[j].dataset.columnName;\r\n    //         const columnNam = each[j].innerText;\r\n    //         setHeader(columnId, columnNam, each[j].clientWidth, each[j]);\r\n    //       }\r\n    //     }\r\n\r\n    //     if(e.data.length > 0){\r\n    //       let frozen = 0;\r\n\r\n    //       e.data.forEach(e => {\r\n    //         const index = columns.findIndex(e1 => e1.name === e.GRID_COL_NAM);\r\n    //         const from = columns[index];\r\n\r\n    //         from.width  = e.WIDTH * 1;\r\n    //         from.hidden = e.HIDE_YN === 'N' ? false : true;\r\n\r\n    //         if(e.SEQ - 1 !== index){\r\n              \r\n    //           columns.splice(index, 1);\r\n    //           columns.splice(e.SEQ - 1, 0, from);\r\n    //           gridRef.current.getInstance().setColumns(columns);\r\n    //         }\r\n\r\n    //         if(e.LOCK_YN === 'Y') {\r\n    //           frozen = frozen + 1;\r\n    //         }\r\n    //       })\r\n\r\n    //       gridRef.current.getInstance().setFrozenColumnCount(frozen);\r\n    //       setFrozenCount(frozen);\r\n    //     }\r\n\r\n    //     if(e.data.result){\r\n\r\n    //     }else{\r\n    //       if(e.data.MSG_CODE !== 'NO')\r\n    //         gfc_getMultiLang('dup', '그리드 설정시 오류가 발생했습니다. > ' + props.pgm + ', ' + props.id);\r\n    //     }\r\n    //   }\r\n    // )    \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <> \r\n      <div ref={ref} style={{marginLeft: '8px', width:'calc(100% - 17px)', height: 'calc(100% - 10px)'}}>\r\n      {/* <div ref={ref} style={{width:'calc(100% - 10px)', height: 'calc(100% - 10px)', marginLeft: '5px', marginTop: '5px'}}> */}\r\n        \r\n        <Grid header        = {props.colHeader}\r\n              selectionUnit = 'row'\r\n              minRowHeight  = {props.rowHeight < 34 ? 34 : props.rowHeight}\r\n              rowHeight     = {props.rowHeight < 34 ? 34 : props.rowHeight}\r\n              bodyHeight    = 'fitToParent'\r\n              rowHeaders    = {props.rowHeaders !== null ? props.rowHeaders : undefined}\r\n              scrollX       = {true}\r\n\r\n              columns       = {props.columns}\r\n              columnOptions = {{\r\n                frozenCount: props.frozenCount\r\n              }}\r\n\r\n              ref           = {gridRef}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nRtnGrid.propTypes = {\r\n  pgm        : PropTypes.string.isRequired,\r\n  id         : PropTypes.string.isRequired,\r\n  columns    : PropTypes.array.isRequired,\r\n  colHeader  : PropTypes.object,\r\n  rowHeight  : PropTypes.number,\r\n  rowHeader  : PropTypes.array,\r\n  frozenCount: PropTypes.number\r\n};\r\n\r\nRtnGrid.defaultProps = {\r\n  colHeader  :{\r\n    height:32\r\n  },\r\n  rowHeight  :34,\r\n  rowHeaders : [{ type: 'rowNum', width: 50 }],\r\n  frozenCount: 0\r\n};\r\n\r\nexport default RtnGrid;","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\TextArea.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\DetailDiv.js",[],["622","623"],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\SearchDiv.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\DateTime.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Number.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Popup.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\DateTime.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\Number.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Layout\\Layout.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Popup\\PopupFrame.js",["624"],"D:\\Project\\01.YK\\react\\src\\Program\\POPUP\\PopupTest.js",["625"],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\TextArea.js",[],"D:\\Project\\01.YK\\react\\src\\db\\Oracle\\Oracle.js",[],"D:\\Project\\01.YK\\react\\src\\db\\Oracle\\OracleServer.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Checkbox.js",["626","627"],"import { gfg_getRow, gfg_setValue } from '../../../Method/Grid';\r\n/**\r\n * name : 컬럼명\r\n * \r\n * header : 헤더명\r\n * \r\n * width(100) : Width\r\n * \r\n * color : 폰트색상\r\n * \r\n * fontSize : 폰트크기\r\n * \r\n * onRender: {(value, el, rows)}\r\n * \r\n * readOnly(true): 리드온리\r\n * \r\n * align(center | left(기본) | right) : 좌우정렬\r\n * \r\n * valign(top | middle(기본) | bottom) : 상하정렬\r\n * \r\n * resizable(true) : 컬럼넓이 조정여부\r\n * \r\n * password(false) : 비밀번호여부\r\n */\r\nexport const Checkbox = (props) => {\r\n  const name      = props.name;\r\n  const header    = props.header;\r\n  const width     = props.width !== undefined ? props.width : '100%';\r\n  const color     = props.color !== undefined ? props.color : 'black';\r\n  const fontSize  = props.fontSize !== undefined ? props.fontSize : '13';\r\n  const password  = props.password !== undefined ? props.password : false;\r\n  const align     = props.align !== undefined ? props.align : 'left';\r\n  const valign    = props.valign !== undefined ? props.valign : 'middle';\r\n  const resizable = props.resizable !== undefined ? props.resizable : true;\r\n  const readOnly = props.readOnly !== undefined ? props.readOnly : true;\r\n\r\n  const rtn = {name,\r\n               header,\r\n               width,\r\n               color,\r\n               fontSize,\r\n               align,\r\n               valign,\r\n               resizable,\r\n              //  filter:{\r\n              //    type: 'text',\r\n              //    operator: 'OR'\r\n              //  }\r\n              }\r\n\r\n  // if(!readOnly){\r\n    // rtn.editor = {\r\n    //   type   : CheckboxEditor,\r\n    //   options: {\r\n    //     align : props.align,\r\n    //     valign: props.valign\r\n    //   }\r\n    // }\r\n\r\n    // rtn.renderer = {\r\n    //   type   : CheckboxRenderer,\r\n    //   options: {\r\n    //     align : props.align,\r\n    //     valign: props.valign\r\n    //   }\r\n    // }\r\n  // }\r\n  \r\n  rtn.editor = {\r\n    type   : CheckboxEditor,\r\n    options: {\r\n      password,\r\n      align : props.align,\r\n      valign: props.valign,\r\n      onRender: props.onRender,\r\n      readOnly,\r\n      color,\r\n      fontSize\r\n    }\r\n  }\r\n\r\n  rtn.renderer = {\r\n    type   : CheckboxRenderer,\r\n    options: {\r\n      password,\r\n      align : props.align,\r\n      valign: props.valign,\r\n      onRender: props.onRender,\r\n      readOnly,\r\n      color,\r\n      fontSize\r\n    }\r\n  }\r\n\r\n  return rtn;\r\n}\r\n\r\nclass CheckboxEditor {\r\n  constructor(props) {\r\n    const option = props.columnInfo.renderer.options;\r\n    const el = document.createElement('input');\r\n    el.type = 'checkbox';\r\n    el.addEventListener('click', e => {\r\n      // const value = e.target.checked ? 'on' : 'off';\r\n      // el.value = value;\r\n      // gfg_setValue(props.grid, props.columnInfo.name, value);\r\n      if(e.target.checked){\r\n        el.value = true;\r\n        gfg_setValue(props.grid, props.columnInfo.name, true);\r\n      }else{\r\n        el.value = props.value;\r\n        gfg_setValue(props.grid, props.columnInfo.name, props.value);\r\n      }\r\n    })\r\n    el.setAttribute('style', `height: 20px; \r\n                              width : 30px;\r\n                              margin-left: 5px;\r\n                              margin-top: 9px;\r\n                              text-align: center;\r\n                              vertical-align:middle;`);\r\n\r\n    if(option['readOnly']) el.readOnly = true;\r\n\r\n    if(option['onRender'] !== undefined){\r\n      const onRender = option.onRender;\r\n      const rows = gfg_getRow(props.grid, props.rowKey);\r\n      onRender(props.value, el, rows);\r\n    }\r\n\r\n    this.el = el;\r\n  }\r\n\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n\r\n  getValue() {\r\n    // console.log(this.props.grid.store.data.rawData[0].COP_CD)\r\n    // this.props.grid.setValue(0, 'SAP_CD', '10')\r\n    return this.el.value;\r\n  }\r\n\r\n  mounted() {\r\n    this.el.select();\r\n  }\r\n}\r\n\r\nclass CheckboxRenderer {\r\n  constructor(props) {\r\n    const el = document.createElement('input');\r\n    el.type = 'checkbox';\r\n    el.addEventListener('click', e => {\r\n      // const value = e.target.checked ? 'on' : 'off';\r\n      // el.value = value;\r\n      // gfg_setValue(props.grid, props.columnInfo.name, value);\r\n      if(e.target.checked){\r\n        el.value = true;\r\n        gfg_setValue(props.grid, props.columnInfo.name, true);\r\n      }else{\r\n        el.value = props.value;\r\n        gfg_setValue(props.grid, props.columnInfo.name, props.value);\r\n      }\r\n    })\r\n\r\n    this.el = el;\r\n    this.render(props);\r\n  }\r\n\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n\r\n  render(props) {\r\n    // store.subscribe((e1, e2) => console.log(store.getState()))\r\n\r\n    const option = props.columnInfo.renderer.options;\r\n    // console.log(option)\r\n    const orgData = props.grid.dataManager.getOriginData();\r\n    let org = orgData.length <= props.rowKey ? '' : props.grid.dataManager.getOriginData()[props.rowKey][props.columnInfo.name];\r\n    if(org === null) org = '';\r\n\r\n    let backGround = 'white';\r\n\r\n    const value = props.value;\r\n\r\n    if(value === true || value === 'true' || value === 'Y' || value === 'y' || value === '1' || value === 1){\r\n      this.el.checked = true;\r\n    }else{\r\n      this.el.checked = false;\r\n    }\r\n\r\n    this.el.setAttribute('style', `height: 20px; \r\n                                   width : 30px;\r\n                                   vertical-align:middle;\r\n    `);\r\n                                  //  width:calc(100% - 5px); \r\n                                  //  padding: 0px 5px 0px 5px;\r\n                                  //  text-align:${option['align']}; \r\n                                  //  vertical-align:${option['valign']}; \r\n                                   \r\n                                  //  `)\r\n\r\n    // let value = String((props.value === null || props.value === undefined) ? '' : props.value);\r\n\r\n    // this.el.value = String((props.value === null || props.value === undefined) ? '' : props.value);\r\n    // this.el.value = value\r\n  }\r\n}","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Detailspan.js",["628"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfc_setNumberFormat } from '../../../Method/Comm';\r\n\r\nfunction Detailspan(props) {\r\n  const value = useSelector((e) => {\r\n    if(props.flag === 1){\r\n      return e[props.reducer].DETAIL_SCALE;\r\n    }else if(props.flag === 2){\r\n      return e[props.reducer].DETAIL_CARNO;\r\n    }else if(props.flag === 3){\r\n      return e[props.reducer].DETAIL_WEIGHT;\r\n    }else if(props.flag === 4){\r\n      return e[props.reducer].DETAIL_DATE;\r\n    }\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  return (\r\n    props.flag !== 3 ? value : gfc_setNumberFormat(value, '0,0', '0R')\r\n  );\r\n}\r\n\r\nDetailspan.defaultProps = {\r\n  fontSize: '30',\r\n  margin: '0 0 8px 15px'\r\n}\r\n\r\nexport default Detailspan;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Mainspan.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Botspan.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\TabList.js",["629","630"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfc_addClass, gfc_removeClass, gfc_hasClass } from '../../../Method/Comm';\r\nimport { gfo_getCombo } from '../../../Method/Component';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\n\r\nconst TabList = (props) => {\r\n  const value = useSelector((e) => {\r\n    return e[props.reducer].CHIT_INFO;\r\n  }, (p, n) => {\r\n    return p.scaleNumb === n.scaleNumb;\r\n  });\r\n\r\n\r\n  const tabButton = (tabIndex,type) => {\r\n\r\n    let tabList = [`tab1_${type}`,`tab2_${type}`,`tab3_${type}`,`tab4_${type}`]\r\n    let contentList = [`content1_${type}`,`content2_${type}`,`content3_${type}`,`content4_${type}`]\r\n    let btnList = [`btn1_${type}`,`btn2_${type}`,`btn3_${type}`,`btn4_${type}`]\r\n    let tabMaxIndex = 4;\r\n    for(let i = 0; i < tabMaxIndex; i++){\r\n      if(i === tabIndex){\r\n        if(gfc_hasClass(document.getElementById(tabList[i]),'on') === false){\r\n          gfc_addClass(document.getElementById(tabList[i]),'on');\r\n          gfc_addClass(document.getElementById(contentList[i]),'on');\r\n\r\n          const btnElement = document.getElementById(btnList[i]);\r\n          if(btnElement !== null) gfc_addClass(btnElement,'on');\r\n\r\n          const car_info = document.getElementById('car_info');\r\n          if(i === 0){\r\n            car_info.style.paddingBottom = '90px';\r\n          }else if(i === 1){\r\n            if(gfs_getStoreValue('INSP_PROC_MAIN', 'CHIT_INFO').chit !== 'N'){\r\n              car_info.style.paddingBottom = '10px';\r\n            }else{\r\n              car_info.style.paddingBottom = '90px';\r\n            }\r\n          }else{\r\n            car_info.style.paddingBottom = '10px';\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        gfc_removeClass(document.getElementById(tabList[i]),'on');\r\n        gfc_removeClass(document.getElementById(contentList[i]),'on');\r\n        \r\n        const btnElement = document.getElementById(btnList[i]);\r\n        if(btnElement !== null) gfc_removeClass(btnElement,'on');\r\n\r\n        // if(props.pgm === 'INSP_PROC'){\r\n        //   const detail_grade1 = gfo_getCombo(props.pgm, 'detail_grade1').getLabel(); //고철등급\r\n        //   gfs_dispatch(props.reducer, 'CHIT_INFO_ITEM_FLAG', {\r\n        //     itemFlag : detail_grade1\r\n        //   });\r\n        // }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id={props.pgm}>\r\n      <div className='tab_list'>\r\n        <button type='button' id={`tab1_${props.pgm}`} className='tab on' onClick={() => tabButton(0, props.pgm)}>검수입력</button>\r\n        <button type='button' id={`tab2_${props.pgm}`} className='tab' onClick={() => tabButton(1, props.pgm)}>\r\n          {value.chit !== 'N' && <span className='doc'>메모있음</span> } \r\n          계량표\r\n        </button>\r\n        <button type='button' id={`tab3_${props.pgm}`} className='tab' onClick={() => tabButton(2, props.pgm)}>배차정보</button>\r\n        <button type='button' id={`tab4_${props.pgm}`} className='tab' onClick={() => tabButton(3, props.pgm)}>출발보고</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabList;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\TabList copy.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\CAMR_SETTING\\CAMR_SETTING.js",["631","632"],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Chit\\Chit.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\Common\\Chit\\ChitMemo.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\RecImage.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\CompleteBtn.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\TabList.js",["633","634"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfc_addClass, gfc_removeClass, gfc_hasClass } from '../../../Method/Comm';\r\nimport { gfo_getCombo } from '../../../Method/Component';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\n\r\nconst TabList = (props) => {\r\n  const value = useSelector((e) => {\r\n    return e[props.reducer].CHIT_INFO;\r\n  }, (p, n) => {\r\n    return p.scaleNumb === n.scaleNumb;\r\n  });\r\n\r\n\r\n  const tabButton = (tabIndex,type) => {\r\n\r\n    let tabList = [`tab1_${type}`,`tab2_${type}`]\r\n    let contentList = [`content1_${type}`,`content2_${type}`]\r\n    let btnList = [`btn1_${type}`,`btn2_${type}`]\r\n    let tabMaxIndex = 2;\r\n    for(let i = 0; i < tabMaxIndex; i++){\r\n      if(i === tabIndex){\r\n        if(gfc_hasClass(document.getElementById(tabList[i]),'on') === false){\r\n          gfc_addClass(document.getElementById(tabList[i]),'on');\r\n          gfc_addClass(document.getElementById(contentList[i]),'on');\r\n\r\n          const btnElement = document.getElementById(btnList[i]);\r\n          if(btnElement !== null) gfc_addClass(btnElement,'on');\r\n\r\n          const car_info = document.getElementById('car_info');\r\n          if(i === 0){\r\n            car_info.style.paddingBottom = '90px';\r\n          }else if(i === 1){\r\n            if(gfs_getStoreValue('DISP_PROC_MAIN', 'CHIT_INFO').chit !== 'N'){\r\n              car_info.style.paddingBottom = '10px';\r\n            }else{\r\n              car_info.style.paddingBottom = '90px';\r\n            }\r\n          }else{\r\n            car_info.style.paddingBottom = '10px';\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        gfc_removeClass(document.getElementById(tabList[i]),'on');\r\n        gfc_removeClass(document.getElementById(contentList[i]),'on');\r\n        \r\n        const btnElement = document.getElementById(btnList[i]);\r\n          if(btnElement !== null) gfc_removeClass(btnElement,'on');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id={props.pgm}>\r\n      <div className='tab_list type2'>\r\n        <button type='button' id={`tab1_${props.pgm}`} className='tab on' onClick={() => tabButton(0, props.pgm)}>검수입력</button>\r\n        <button type='button' id={`tab2_${props.pgm}`} className='tab' onClick={() => tabButton(1, props.pgm)}>\r\n          {value.chit !== 'N' && <span className='doc'>메모있음</span> } \r\n          계량표\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabList;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\ENTR_PROC\\ENTR_PROC.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\CompleteBtn.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\DISP_PROC.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\DISP_PROC\\RecImageDtl.js",["635"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfs_subscribe, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { gfc_showMask, gfc_hideMask } from '../../../Method/Comm';\r\nimport axios from 'axios';\r\nimport { getDynamicSql_Oracle } from '../../../db/Oracle/Oracle';\r\nimport ReactHlsPlayer from 'react-hls-player';\r\n\r\nfunction RecImageDtl(props) {\r\n  \r\n  let name = '';\r\n  const movieRef = useRef();\r\n\r\n  const value = useSelector((e) => {\r\n    return e.DISP_PROC_MAIN.GRID_SCALE;\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const callOracle = async(file, fn, param) => {\r\n    let result = await getDynamicSql_Oracle(\r\n      file,\r\n      fn,\r\n      param\r\n    ); \r\n\r\n    return result;\r\n  }\r\n\r\n  const movieDown = () => {\r\n    gfc_showMask();\r\n    const host = `http://10.10.10.136:3003/`;\r\n    const option = {\r\n      url   : host,\r\n      method: 'POST',\r\n      responseType: \"arraybuffer\",\r\n      // headers: {\r\n      //   'Access-Control-Allow-Origin': '*'\r\n      // },\r\n      data: {\r\n        scaleNumb: value,\r\n        Name     : cameraName\r\n      },\r\n    };\r\n  \r\n    axios(option)\r\n      .then(res => {\r\n        gfc_hideMask();\r\n        const url = window.URL.createObjectURL(\r\n          new Blob([res.data], {type: 'application/mp4'})\r\n        );\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', `${value}.mp4`);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      })\r\n      .catch(err => {\r\n        gfc_hideMask();\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  // const movieDown = () => {\r\n  //   gfc_showMask();\r\n  //   const host = `http://10.10.10.136:3003/`;\r\n  //   const option = {\r\n  //     url   : host,\r\n  //     method: 'POST',\r\n  //     // headers: {\r\n  //     //   'Access-Control-Allow-Origin': '*'\r\n  //     // },\r\n  //     data: {\r\n  //       scaleNumb: value,\r\n  //       Name     : cameraName\r\n  //     },\r\n  //     responseType: 'blob'\r\n  //   };\r\n  \r\n  //   axios(option)\r\n  //     .then(res => {\r\n  //       gfc_hideMask();\r\n  //       const url = window.URL\r\n  //             .createObjectURL(new Blob([res.data]));\r\n  //       const link = document.createElement('a');\r\n  //       link.href = url;\r\n  //       link.setAttribute('download', `${value}.mp4`);\r\n  //       document.body.appendChild(link);\r\n  //       link.click();\r\n  //       document.body.removeChild(link);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       gfc_hideMask();\r\n  //       console.log(err);\r\n  //     })\r\n  // }\r\n\r\n  const [playUrl, setPlayUrl] = useState('');\r\n  const [cameraName, setCameraName] = useState('');\r\n\r\n  useEffect(() => { \r\n    if(value !== ''){\r\n      callOracle(\r\n        'Common/Common',\r\n        'ZM_IMS_VIDEO_SELECT',\r\n        [{\r\n          scaleNumb: value,\r\n          seq      : props.seq\r\n        }]\r\n      ).then(e => {\r\n        if(e.data.rows.length > 0){\r\n          setCameraName(e.data.rows[0][5]);\r\n          setPlayUrl(`http://10.10.10.136:3003/${value}/${encodeURIComponent(cameraName)}/${value}.m3u8`);\r\n        }\r\n      }).catch(e => {\r\n        console.log('DISP_PROC>' + e);\r\n      })\r\n    }\r\n  }, [cameraName, props.seq, value])\r\n\r\n  const onActiveWindow = () => {\r\n    const isActive = gfs_getStoreValue('MASK_REDUCER', 'ON_ACTIVE');\r\n    const isPlay = movieRef.current.paused;\r\n\r\n    if(isActive.active){\r\n      if(isPlay === false){\r\n        movieRef.current.play();\r\n      }\r\n    }else{\r\n      if(isPlay){\r\n        movieRef.current.pause();\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    gfs_subscribe(onActiveWindow);\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div \r\n        style={{width:'100%', height:'100%'}} \r\n        className='player-wrapper'>\r\n          <ReactHlsPlayer\r\n            playerRef={movieRef}\r\n            src={playUrl}\r\n            autoPlay={false}\r\n            controls={true}\r\n            width='100%'\r\n            height='100%'\r\n            muted='muted'\r\n            onLoadedData={e => e.target.play()}\r\n            hlsConfig={{\r\n              autoStartLoad: true,\r\n              startPosition: -1,\r\n              debug: false\r\n            }}\r\n          />\r\n      </div>\r\n\r\n      <div className='file_download' onClick={() => movieDown()}></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImage.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\CompleteBtn.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy 2.js",["636","637","638","639","640","641","642","643","644","645"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, MILESTONE_LIVE } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { gfc_addClass, gfc_removeClass, gfc_hasClass } from '../../../Method/Comm';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\n\r\nfunction RecImageDtl(props) {\r\n  \r\n  const movieRef = useRef();\r\n  const prgRef = useRef();\r\n\r\n  const handleDuration = (duration) => {\r\n    prgRef.current.max = duration;\r\n  }\r\n  const handleSeekMouseDown = e => {\r\n    // prgRef.current.dataset.seeking = 'true';\r\n  }\r\n  const handleSeekMouseUp = e => {\r\n    // const value = prgRef.current.value;\r\n    \r\n    // movieRef.current.seekTo(5);\r\n    // prgRef.current.dataset.seeking = 'false';\r\n\r\n    const aa = movieRef.current.currentTime;\r\n    movieRef.current.currentTime += 0.5;\r\n    console.log(movieRef.current.currentTime);\r\n  }\r\n  const handleSeekChange = e => {\r\n    // this.setState({ played: parseFloat(e.target.value) })\r\n    // movieRef.current.currentTime += 0.5;\r\n  }\r\n  const  handleProgress = state => {\r\n    // // We only want to update time slider if we are not currently seeking\r\n    // if (!state.seeking) {\r\n    //   setState(e)\r\n    // }\r\n    // console.log(state);\r\n    \r\n    // if(prgRef.current.dataset.seeking === 'false')\r\n    //   prgRef.current.value = state.playedSeconds;\r\n  }\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const value = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN.GRID_SCALE;\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n  \r\n  const playToggle = (_play) => {\r\n    var menu = document.getElementById(_play);\r\n    if(gfc_hasClass(menu,'play')){\r\n      gfc_removeClass(menu,'play')\r\n    }else{\r\n      gfc_addClass(menu,'play')\r\n    }\r\n  }\r\n\r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_HIST_MAIN', props.cam, obj);\r\n  }\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  useEffect(() => { \r\n    if(value !== ''){\r\n      gfc_showMask();\r\n\r\n      // movieRef.current.get(0).stop();\r\n      // movieRef.current.get(0).stop();\r\n      movieRef.current.src = '';\r\n\r\n      MILESTONE({\r\n        reqAddr : 'Replay',\r\n        device  : props.device,\r\n        scaleNo : value,\r\n        cameraName: props.Name}).then(e => {\r\n          if(e.data === '0'){\r\n            var req = new XMLHttpRequest();\r\n            req.open('GET', `http://10.10.10.136:3003/${value}.mkv?scaleNumb=${value}&cameraName=${props.Name}`, true);\r\n            req.responseType = 'blob';\r\n        \r\n            req.onload = function() {\r\n              // Onload is triggered even on 404\r\n              // so we need to check the status code\r\n              if (this.status === 200) {\r\n                  var videoBlob = this.response;\r\n                  var vid = URL.createObjectURL(videoBlob); // IE10+\r\n                  // Video is now downloaded\r\n                  // and we can set it as source on the video element\r\n                  movieRef.current.src = vid;\r\n              }\r\n            }\r\n            req.onerror = function() {\r\n              gfc_hideMask();\r\n            }\r\n        \r\n            req.send();\r\n          }else{\r\n            gfc_hideMask();\r\n          }\r\n        })\r\n    }\r\n  }, [props.device, props.Name, value])\r\n\r\n  const img = <>\r\n                <div style={{width:'100%', height:'100%'}}>\r\n                  <video \r\n                    ref={movieRef} \r\n                    width='100%' \r\n                    height='100%' \r\n                    autoPlay \r\n\r\n                    onPlaying={e => {\r\n                      gfc_hideMask();\r\n                    }}\r\n                    \r\n                    onSeekingCapture={e => console.log(e)}\r\n\r\n                    style={{objectFit:'fill'}}>\r\n                    <source type='video/mp4' />\r\n                  </video> \r\n                </div>\r\n                <div className='viewer_range'>\r\n                  <div className='wp'>\r\n                    <button type='button' id='play1' className='play' onClick={() => playToggle('play1')}></button>\r\n                    <span className='time'>0:00 / 3:00 </span>\r\n                    <button type='button' className='download'></button>\r\n                  </div>\r\n                  <input  type='range' defaultValue={0} className='cctv_gauge'/> \r\n                </div>\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\INSP_HIST.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy 3.js",["646","647","648","649","650","651","652","653","654","655","656"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, MILESTONE_LIVE } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { gfc_addClass, gfc_removeClass, gfc_hasClass } from '../../../Method/Comm';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\n\r\nfunction RecImageDtl(props) {\r\n  \r\n  const movieRef = useRef();\r\n  const prgRef = useRef();\r\n\r\n  const handleDuration = (duration) => {\r\n    prgRef.current.max = duration;\r\n  }\r\n  const handleSeekMouseDown = e => {\r\n    // prgRef.current.dataset.seeking = 'true';\r\n  }\r\n  const handleSeekMouseUp = e => {\r\n    // const value = prgRef.current.value;\r\n    \r\n    // movieRef.current.seekTo(5);\r\n    // prgRef.current.dataset.seeking = 'false';\r\n\r\n    const aa = movieRef.current.currentTime;\r\n    movieRef.current.currentTime += 0.5;\r\n    console.log(movieRef.current.currentTime);\r\n  }\r\n  const handleSeekChange = e => {\r\n    // this.setState({ played: parseFloat(e.target.value) })\r\n    // movieRef.current.currentTime += 0.5;\r\n  }\r\n  const  handleProgress = state => {\r\n    // // We only want to update time slider if we are not currently seeking\r\n    // if (!state.seeking) {\r\n    //   setState(e)\r\n    // }\r\n    // console.log(state);\r\n    \r\n    // if(prgRef.current.dataset.seeking === 'false')\r\n    //   prgRef.current.value = state.playedSeconds;\r\n  }\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const value = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN.GRID_SCALE;\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n  \r\n  const playToggle = (_play) => {\r\n    var menu = document.getElementById(_play);\r\n    if(gfc_hasClass(menu,'play')){\r\n      gfc_removeClass(menu,'play')\r\n    }else{\r\n      gfc_addClass(menu,'play')\r\n    }\r\n  }\r\n\r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_HIST_MAIN', props.cam, obj);\r\n  }\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  useEffect(() => { \r\n    if(value !== ''){\r\n      gfc_showMask();\r\n\r\n      // movieRef.current.get(0).stop();\r\n      // movieRef.current.get(0).stop();\r\n      movieRef.current.src = '';\r\n\r\n      MILESTONE({\r\n        reqAddr : 'Replay',\r\n        device  : props.device,\r\n        scaleNo : value,\r\n        cameraName: props.Name}).then(e => {\r\n          if(e.data === '0'){\r\n            var req = new XMLHttpRequest();\r\n            req.open('GET', `http://10.10.10.136:3003/${value}.mkv?scaleNumb=${value}&cameraName=${props.Name}`, true);\r\n            req.responseType = 'blob';\r\n        \r\n            req.onload = function() {\r\n              // Onload is triggered even on 404\r\n              // so we need to check the status code\r\n              if (this.status === 200) {\r\n                  var videoBlob = this.response;\r\n                  var vid = URL.createObjectURL(videoBlob); // IE10+\r\n                  // Video is now downloaded\r\n                  // and we can set it as source on the video element\r\n                  movieRef.current.src = vid;\r\n              }\r\n            }\r\n            req.onerror = function() {\r\n              gfc_hideMask();\r\n            }\r\n        \r\n            req.send();\r\n          }else{\r\n            gfc_hideMask();\r\n          }\r\n        })\r\n    }\r\n  }, [props.device, props.Name, value])\r\n\r\n\r\n \r\n  const img = <>\r\n                <div style={{width:'100%', height:'100%'}}>\r\n                  <video \r\n                    id = 'asdfasdf'\r\n                    ref={movieRef} \r\n                    width='100%' \r\n                    height='100%' \r\n                    autoPlay \r\n                    controls\r\n\r\n                    onPlaying={e => {\r\n                      gfc_hideMask();\r\n                    }}\r\n\r\n                    style={{objectFit:'fill'}}>\r\n                    <source type='video/mp4' />\r\n                  </video> \r\n                </div>\r\n\r\n                {/* <div className='viewer_range'>\r\n                  <div className='wp'>\r\n                    <button type='button' id='play1' className='play' onClick={() => playToggle('play1')}></button>\r\n                    <span className='time'>0:00 / 3:00 </span>\r\n                    <button type='button' className='download'></button>\r\n                  </div>\r\n                  <input  type='range' defaultValue={0} className='cctv_gauge'/> \r\n                </div> */}\r\n\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\DispImg.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\DispInfo.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\CompleteBtn.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\Botspan.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy.js",["657","658","659","660","661","662","663"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, MILESTONE_LIVE } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nimport ReactPlayer from 'react-player'\r\n\r\nfunction RecImageDtl(props) {\r\n  const movieRef = useRef();\r\n  const prgRef = useRef();\r\n\r\n  const handleDuration = (duration) => {\r\n    prgRef.current.max = duration;\r\n  }\r\n  const handleSeekMouseDown = e => {\r\n    prgRef.current.dataset.seeking = 'true';\r\n  }\r\n  const handleSeekMouseUp = e => {\r\n    const value = prgRef.current.value;\r\n    // movieRef.current.pau\r\n    movieRef.current.seekTo(5);\r\n    prgRef.current.dataset.seeking = 'false';\r\n\r\n    console.log(movieRef.current);\r\n  }\r\n  const handleSeekChange = e => {\r\n    // this.setState({ played: parseFloat(e.target.value) })\r\n  }\r\n  const  handleProgress = state => {\r\n    // // We only want to update time slider if we are not currently seeking\r\n    // if (!state.seeking) {\r\n    //   setState(e)\r\n    // }\r\n    console.log(state);\r\n    \r\n    if(prgRef.current.dataset.seeking === 'false')\r\n      prgRef.current.value = state.playedSeconds;\r\n  }\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_HIST_MAIN', props.cam, obj);\r\n  }\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  useEffect(() => { \r\n    return() => {\r\n\r\n    }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen])\r\n\r\n  const img = <>\r\n                <div style={{width:'100%', height:'100%'}}>\r\n                  {/* <video controls autoPlay width='100%' height='100%'>\r\n                    <source src='http://10.10.10.136:3003/1.mp4' type='video/mp4' />\r\n                  </video> */}\r\n                  <ReactPlayer ref={movieRef} \r\n                    width='100%' \r\n                    height='100%' \r\n                    url='http://10.10.10.136:3003/1.mp4'\r\n                    \r\n                    controls\r\n                    playing \r\n                    muted\r\n                    \r\n                    onDuration={e => handleDuration(e)}\r\n                    onProgress={e => handleProgress(e)}\r\n                  />\r\n                  <input ref={prgRef} data-seeking={false} style={{width:'100%'}} defaultValue={0}\r\n                    type='range' min={0} step='any'\r\n                    // value={played}\r\n                    onMouseDown={e => handleSeekMouseDown(e)}\r\n                    onChange={e => handleSeekChange(e)}\r\n                    onMouseUp={e => handleSeekMouseUp(e)}\r\n                  />\r\n                </div>\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImage.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecTimer.js",["664","665","666"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport GifPlayer from 'react-gif-player';\r\nimport { MILESTONE } from '../../../WebReq/WebReq';\r\n\r\n// let interval;\r\n\r\nfunction RecTimer(props) {\r\n\r\n  const isRec = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.rec];\r\n  }, (p, n) => {\r\n    return p.rec === n.rec;\r\n  });\r\n\r\n  const time = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.rec];\r\n  }, (p, n) => {\r\n    return p.time === n.time;\r\n  });\r\n\r\n  useEffect(e => {\r\n\r\n    // setInterval(() => {\r\n    //   MILESTONE({\r\n    //     reqAddr: 'Status',\r\n    //     device: props.device\r\n    //   }).then(\r\n    //     e => {\r\n    //       const recYn = e.data.recYn;\r\n    //       const recDt = e.data.recDt;\r\n    //       const isRec = gfs_getStoreValue('INSP_PROC_MAIN', props.rec);\r\n\r\n    //       if(recYn === '0' || recYn === '2'){\r\n    //         if(isRec.rec === false){\r\n    //           gfs_dispatch('INSP_PROC_MAIN', `${props.rec}`, {rec: true, time: recDt});\r\n    //         }\r\n            \r\n    //         gfs_dispatch('INSP_PROC_MAIN', `${props.rec}_TIME`, {rec: true, time: recDt});\r\n    //       }else{\r\n    //         if(isRec.rec === true){\r\n    //           gfs_dispatch('INSP_PROC_MAIN', `${props.rec}`, {rec: false, time: '00:00'});\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   )\r\n\r\n    // }, 1000);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>   \r\n      {isRec.rec &&\r\n        <>\r\n          <div style={{float:'left', width:'40', height:'30', marginTop:'5'}}>\r\n            <GifPlayer height='30' width='30' gif={require('../../../Image/yk_rec02.gif').default} autoplay/>\r\n          </div>\r\n          <div style={{float:'left', width:'70', height:'30', marginTop:'5'}}>\r\n            <h2 style={{color:'white'}}>{time.time}</h2>\r\n          </div>\r\n        </>\r\n      }\r\n      {/* <button onClick={() => {\r\n                const img = document.getElementById(props.rec);\r\n                gfc_screenshot(img, 'capture.jpg');\r\n                \r\n              }}>client</button>\r\n      <button onClick={async () => {\r\n                const img = document.getElementById(props.rec);\r\n                // const result = await gfc_screenshot_srv(img, 'capture-test.png', 'C:\\\\Image');\r\n                const result = await gfc_screenshot_srv(img);\r\n\r\n                if(result.data !== null) gfc_getMultiLang('영상캡처에 실패했습니다.');\r\n                \r\n              }}>server</button> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default RecTimer;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\INSP_PROC.js",["667","668","669","670","671","672"],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\SHIP_PROC\\CompleteBtn.js",["673","674","675","676","677","678"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { gfs_getStoreValue, gfs_dispatch } from '../../../Method/Store';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_YK, gfc_chit_yn_YK, gfc_sleep } from '../../../Method/Comm';\r\nimport { gfo_getCombo } from '../../../Method/Component';\r\n\r\nimport { YK_WEB_REQ } from '../../../WebReq/WebReq';\r\nimport { gfg_getGrid, gfg_getModyfiedRow, gfg_getRow, gfg_setValue } from '../../../Method/Grid';\r\n\r\nconst CompleteBtn = (props) => {\r\n  const value = useSelector((e) => {\r\n    return e.SHIP_PROC_MAIN.CHIT_INFO;\r\n  }, (p, n) => {\r\n    return p.scaleNumb === n.scaleNumb;\r\n  });\r\n\r\n  //#region 검수등록\r\n  const onProcess = async() => {\r\n    const scaleNumb = gfs_getStoreValue('SHIP_PROC_MAIN', 'DETAIL_SCALE');\r\n\r\n    if(scaleNumb === ''){\r\n      alert('선택된 배차정보가 없습니다.');\r\n      return;\r\n    }\r\n\r\n    const grid = gfg_getGrid(props.pgm, 'main10');\r\n    let chkCnt = 0;\r\n    for(let i = 0; i < grid.getRowCount(); i++){\r\n      const column = gfg_getRow(grid, i);\r\n      if(column.chk === null) continue;\r\n\r\n      if(column.chk.toString() === 'true'){\r\n        chkCnt += 1;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(chkCnt === 0){\r\n      alert('선택된건이 없습니다.');\r\n      return;\r\n    }\r\n\r\n    gfc_showMask();\r\n\r\n    //#region 필수입력확인 및 변수세팅\r\n    const detail_grade1 = gfo_getCombo(props.pgm, 'detail_grade1'); //고철등급\r\n    if(detail_grade1.getValue() === null || detail_grade1.getValue() === ''){\r\n      alert('필수입력값이 없습니다. > 고철등급');\r\n\r\n      gfc_hideMask();\r\n      return;\r\n    }\r\n    const detail_grade2 = gfo_getCombo(props.pgm, 'detail_grade2'); //상세고철등급\r\n    if(detail_grade2.getValue() === null || detail_grade2.getValue() === ''){\r\n      alert('필수입력값이 없습니다. > 등급세부코드');\r\n\r\n      gfc_hideMask();\r\n      return;\r\n    }\r\n    const detail_subt = gfo_getCombo(props.pgm, 'detail_subt'); //감량중량\r\n    const detail_subt_leg = gfo_getCombo(props.pgm, 'detail_subt_leg'); //감량사유\r\n    if(detail_subt.getValue() !== null &&  detail_subt.getValue() !== '' &&  detail_subt.getValue() !== '0'){\r\n      if(detail_subt_leg.getValue() === null || detail_subt_leg.getValue() === ''){\r\n        alert('필수입력값이 없습니다. > 감량사유');\r\n  \r\n        gfc_hideMask();\r\n        return;\r\n      }\r\n    }\r\n\r\n    const detail_depr = gfo_getCombo(props.pgm, 'detail_depr'); //감가내역\r\n    const detail_depr2 = gfo_getCombo(props.pgm, 'detail_depr2'); //감가비율\r\n    if(detail_depr.getValue() !== null &&  detail_depr.getValue() !== ''){\r\n      if(detail_depr2.getValue() === null || detail_depr2.getValue() === ''){\r\n        alert('필수입력값이 없습니다. > 감가비율');\r\n  \r\n        gfc_hideMask();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // const detail_out = gfo_getCombo(props.pgm, 'detail_out'); //하차구역\r\n    // if(detail_out.getValue() === null){\r\n    //   alert('필수입력값이 없습니다. > 하차구역');\r\n    //   gfc_hideMask();\r\n    //   return;\r\n    // }\r\n    const detail_car = gfo_getCombo(props.pgm, 'detail_car'); //차종구분\r\n    if(detail_car.getValue() === null ||  detail_car.getValue() === ''){\r\n      alert('필수입력값이 없습니다. > 차종구분');\r\n\r\n      gfc_hideMask();\r\n      return;\r\n    }\r\n    const detail_rtn = gfo_getCombo(props.pgm, 'detail_rtn'); //반품구분\r\n    const detail_rtn2 = gfo_getCombo(props.pgm, 'detail_rtn2'); //반품구분사유\r\n    if(detail_rtn !== null && detail_rtn.getValue() !== ''){\r\n      if(detail_rtn2.getValue() === null || detail_rtn2.getValue() === ''){\r\n        alert('필수입력값이 없습니다. > 반품구분사유');\r\n  \r\n        gfc_hideMask();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // const detail_warning = gfo_getCombo(props.pgm, 'detail_warning'); //경고\r\n    \r\n    //#endregion\r\n\r\n    \r\n\r\n    for(let i = 0; i < grid.getRowCount(); i++){\r\n      const column = gfg_getRow(grid, i);\r\n      if(column.chk === null) continue;\r\n\r\n      if(column.chk.toString() === 'true'){\r\n        const msg = `dScaleNumb=${scaleNumb}&` + //검수번호(계근번호)\r\n                    // `dWorker=${gfs_getStoreValue('USER_REDUCER', 'USER_ID')}&` + //검수자(ERP ID)\r\n                    `dWorker=1989&` + //검수자(ERP ID)\r\n                    `dWorkerName=${gfs_getStoreValue('USER_REDUCER', 'USER_NAM')}&` + //검수자 이름\r\n                    `dOutageReasonCode=${detail_subt_leg.getValue() === null ? '' : detail_subt_leg.getValue()}&` + //감량사유\r\n                    `dOutageWeightCode=${detail_subt.getValue() === null ? '' : detail_subt.getValue()}&` + //감량중량\r\n                    `dScrapGradeCode=${detail_grade1.getValue()}&` + //등급코드\r\n                    `dScrapGradeItemCode=${detail_grade2.getValue()}&` + //등급아이템\r\n                    `dTallyHistoryCode=${detail_depr.getValue() === null ? '' : detail_depr.getValue()}&` + //감가내역\r\n                    \r\n                    `dTallyRatio=${detail_depr2.getValue()}&` + //감가비율???\r\n                    \r\n                    // `dScrapAreaCode=${detail_out.getValue()}&` + //하차구역(섹터), 옥내는E001고정\r\n                    `dScrapAreaCode=E001&` + //하차구역(섹터), 옥내는E001고정\r\n                    `dReturnDivisionCode=${detail_rtn.getValue() === null ? '' : detail_rtn.getValue()}&` + //반품구분\r\n                    `dReturnHistoryCode=${detail_rtn2.getValue() === null ? '' : detail_rtn2.getValue()}&` + //반품구분사유\r\n                    \r\n                    `dOutageReasonEtcEdit=&` + //기타의견???\r\n\r\n                    `dCarTypeCode=${detail_car.getValue()}&` +\r\n                    // `dWarning=${detail_warning.getValue() === null ? '' : detail_warning.getValue()}&` +\r\n                    `dWarning=&` +\r\n                    `dRain=0`;\r\n\r\n        const Data = await YK_WEB_REQ(`tally_process_erp_procedure.jsp?${msg}`);\r\n        console.log(Data);\r\n      }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    const pgm = gfs_getStoreValue('WINDOWFRAME_REDUCER', 'windowState').filter(e => e.programId === 'SHIP_PROC');\r\n    pgm[0].Retrieve();\r\n\r\n    gfc_hideMask();\r\n  }\r\n  //#endregion\r\n\r\n  //#region 계량표저장\r\n  // const onScaleChit = async() => {\r\n  //   const img = document.getElementById(`content2_${props.pgm}`);\r\n  //   const scaleNumb = gfs_getStoreValue('SHIP_PROC_MAIN', 'CHIT_INFO');\r\n\r\n  //   if(scaleNumb.scaleNumb === ''){\r\n  //     alert('선택된 배차정보가 없습니다.');\r\n  //     return;\r\n  //   }\r\n\r\n  //   gfc_showMask();\r\n\r\n  //   const memo = gfs_getStoreValue('SHIP_PROC_MAIN', 'CHIT_MEMO').trim();\r\n  //   if(memo.length === 0){\r\n  //     if(window.confirm('계량표의 내용이 없습니다. 저장하시겠습니까?') === false){\r\n  //       gfc_hideMask();\r\n  //       return;\r\n  //     }\r\n  //   }\r\n\r\n  //   //다른쪽에서 저장된 계량표가 있는지 한번더 확인한다.\r\n  //   const chitYn = await gfc_chit_yn_YK(scaleNumb.scaleNumb);\r\n  //   if(chitYn.data !== 'N'){\r\n  //     alert('이미처리된 계량표 입니다. 재조회 후 확인바랍니다.');\r\n  //     gfc_hideMask();\r\n  //     return;\r\n  //   }\r\n\r\n  //   const result = await gfc_screenshot_srv_YK(img, scaleNumb.scaleNumb);\r\n    \r\n  //   if(result.data === 'Y'){\r\n  //     const chitYn = await gfc_chit_yn_YK(scaleNumb.scaleNumb);\r\n  //     gfs_dispatch('SHIP_PROC_MAIN', 'CHIT_INFO', {\r\n  //       chit     : chitYn.data\r\n  //     });\r\n  //   }else{\r\n  //     alert('계량표 저장에 실패 했습니다.')\r\n  //   }\r\n    \r\n  //   gfc_hideMask();\r\n  // }\r\n  //#endregion\r\n\r\n  return (\r\n    <div className='complete_btn'>\r\n      <button type='button' id={`btn1_${props.pgm}`} onClick={e => onProcess()} className='on'><span>등록완료</span></button>\r\n      {/* <button type='button' id={`btn2_${props.pgm}`} onClick={e => onProcess()}><span>등록완료</span></button> */}\r\n      <button style={{display: value.chit !== 'N' && 'none' }} type='button' id={`btn2_${props.pgm}`} onClick={e => onProcess()}><span>등록완료</span></button>\r\n      <button style={{display:'none'}} id={`btn3_${props.pgm}`}></button>\r\n      <button style={{display:'none'}} id={`btn4_${props.pgm}`}></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompleteBtn;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\SHIP_PROC\\SHIP_PROC.js",["679","680","681","682","683","684","685","686","687","688","689"],"//#region import\r\nimport React, { Component } from 'react';\r\n\r\nimport Input from '../../../Component/Control/Input';\r\n\r\nimport { gfc_initPgm, gfc_showMask, gfc_hideMask, gfc_chit_yn_YK, gfc_sleep } from '../../../Method/Comm';\r\nimport { gfs_getStoreValue, gfs_injectAsyncReducer, gfs_dispatch, gfs_subscribe } from '../../../Method/Store';\r\nimport { gfo_getCombo, gfo_getInput, gfo_getTextarea } from '../../../Method/Component';\r\nimport { gfg_getGrid, gfg_getRow, gfg_setSelectRow, gfg_setValue } from '../../../Method/Grid';\r\n\r\nimport Grid from '../../../Component/Grid/Grid';\r\nimport { Input as columnInput } from '../../../Component/Grid/Column/Input';\r\nimport { Image as columnImage } from '../../../Component/Grid/Column/Image';\r\nimport { Combobox as columnCombobox }  from '../../../Component/Grid/Column/Combobox';\r\nimport { TextArea as columnTextArea } from '../../../Component/Grid/Column/TextArea';\r\nimport { Number as columnNumber } from '../../../Component/Grid/Column/Number';\r\nimport { Checkbox as columnCheckbox } from '../../../Component/Grid/Column/Checkbox';\r\n\r\nimport Combobox from '../../../Component/Control/Combobox';\r\n\r\n// import Mainspan from './Mainspan';\r\nimport Detailspan from '../Common/Detailspan';\r\nimport Botspan from '../Common/Botspan';\r\nimport CompleteBtn from './CompleteBtn';\r\n\r\nimport { YK_WEB_REQ } from '../../../WebReq/WebReq';\r\nimport { TOKEN, MILESTONE } from '../../../WebReq/WebReq';\r\n//#endregion\r\n\r\nclass SHIP_PROC extends Component {\r\n\r\n  state = {\r\n    wait_list: [],\r\n    device: []\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    gfc_initPgm(props.pgm, props.nam, this)\r\n\r\n    //#region 리듀서\r\n    const SHIP_PROC_MAIN = (nowState, action) => {\r\n\r\n      if(action.reducer !== 'SHIP_PROC_MAIN') {\r\n        return {\r\n          MAIN_WAIT    : nowState === undefined ? 0 : nowState.MAIN_WAIT,\r\n          MAIN_TOTAL   : nowState === undefined ? 0 : nowState.MAIN_TOTAL,\r\n          MAIN_WEIGHT  : nowState === undefined ? 0 : nowState.MAIN_WEIGHT,\r\n          BOT_TOTAL    : nowState === undefined ? 0 : nowState.BOT_TOTAL,\r\n          PROC_WAIT    : nowState === undefined ? 0 : nowState.PROC_WAIT,\r\n          DEPT_WAIT    : nowState === undefined ? 0 : nowState.DEPT_WAIT,\r\n          ENTR_WAIT    : nowState === undefined ? 0 : nowState.ENTR_WAIT,\r\n \r\n          DETAIL_SCALE : nowState === undefined ? '' : nowState.DETAIL_SCALE,\r\n          DETAIL_CARNO : nowState === undefined ? '' : nowState.DETAIL_CARNO,\r\n          DETAIL_WEIGHT: nowState === undefined ? '' : nowState.DETAIL_WEIGHT,\r\n          DETAIL_DATE  : nowState === undefined ? '' : nowState.DETAIL_DATE,\r\n\r\n          GRID_SCALE   : nowState === undefined ? '' : nowState.GRID_SCALE,\r\n\r\n          STD_CAM_IMG  : nowState === undefined ? null : nowState.STD_CAM_IMG,\r\n          DUM_CAM_IMG  : nowState === undefined ? null : nowState.DUM_CAM_IMG,\r\n\r\n          STD_CAM_OPEN : nowState === undefined ? false : nowState.STD_CAM_OPEN,\r\n          DUM_CAM_OPEN : nowState === undefined ? false : nowState.DUM_CAM_OPEN,\r\n\r\n          STD_CAM_FOCUS: nowState === undefined ? false : nowState.STD_CAM_FOCUS,\r\n          DUM_CAM_FOCUS: nowState === undefined ? false : nowState.DUM_CAM_FOCUS,\r\n\r\n          STD_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.STD_CAM_REC,\r\n          DUM_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.DUM_CAM_REC,\r\n\r\n          CHIT_MEMO    : nowState === undefined ? '' : nowState.CHIT_MEMO,\r\n          \r\n          CHIT_INFO    : nowState === undefined ? {\r\n                                                    date     : '',\r\n                                                    scaleNumb: '',\r\n                                                    carNumb  : '',\r\n                                                    vender   : '',\r\n                                                    itemFlag : '',\r\n                                                    Wgt      : '',\r\n                                                    loc      : '',\r\n                                                    user     : '',\r\n                                                    chit     : 'N',\r\n                                                  } : nowState.CHIT_INFO\r\n        };\r\n      }\r\n\r\n      if(action.type === 'MAIN_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WAIT : action.MAIN_WAIT\r\n        })\r\n      }else if(action.type === 'MAIN_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_TOTAL : action.MAIN_TOTAL\r\n        })\r\n      }else if(action.type === 'MAIN_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WEIGHT : action.MAIN_WEIGHT\r\n        })\r\n      }else if(action.type === 'BOT_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          BOT_TOTAL : action.BOT_TOTAL\r\n        })\r\n      }else if(action.type === 'PROC_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          PROC_WAIT : action.PROC_WAIT\r\n        })\r\n      }else if(action.type === 'DEPT_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DEPT_WAIT : action.DEPT_WAIT\r\n        })\r\n      }else if(action.type === 'ENTR_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          ENTR_WAIT : action.ENTR_WAIT\r\n        })\r\n      }else if(action.type === 'DETAIL_SCALE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_SCALE : action.DETAIL_SCALE\r\n        })\r\n      }else if(action.type === 'GRID_SCALE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          GRID_SCALE : action.GRID_SCALE\r\n        })\r\n      }else if(action.type === 'DETAIL_CARNO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_CARNO : action.DETAIL_CARNO\r\n        })\r\n      }else if(action.type === 'DETAIL_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_WEIGHT : action.DETAIL_WEIGHT\r\n        })\r\n      }else if(action.type === 'DETAIL_DATE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_DATE : action.DETAIL_DATE\r\n        })\r\n      }else if(action.type === 'STD_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_IMG : action.STD_CAM_IMG\r\n        })\r\n      }else if(action.type === 'DUM_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_IMG : action.DUM_CAM_IMG\r\n        })\r\n      }else if(action.type === 'STD_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_OPEN : action.STD_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'DUM_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_OPEN : action.DUM_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'STD_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_FOCUS : action.STD_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'DUM_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_FOCUS : action.DUM_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.STD_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.DUM_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec     : nowState.STD_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec     : nowState.DUM_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO_ITEM_FLAG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     :  nowState.CHIT_INFO.date,\r\n            scaleNumb:  nowState.CHIT_INFO.scaleNumb,\r\n            carNumb  :  nowState.CHIT_INFO.carNumb,\r\n            vender   :  nowState.CHIT_INFO.vender,\r\n            itemFlag :  action.itemFlag,\r\n            Wgt      :  nowState.CHIT_INFO.Wgt,\r\n            loc      :  nowState.CHIT_INFO.loc,\r\n            user     :  nowState.CHIT_INFO.user,\r\n            chit     :  nowState.CHIT_INFO.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     : action.date,\r\n            scaleNumb: action.scaleNumb,\r\n            carNumb  : action.carNumb,\r\n            vender   : action.vender,\r\n            itemFlag : action.itemFlag,\r\n            Wgt      : action.Wgt,\r\n            loc      : action.loc,\r\n            user     : action.user,\r\n            chit     : action.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_MEMO'){\r\n        return Object.assign({}, nowState, {\r\n          CHIT_MEMO : action.CHIT_MEMO\r\n        })\r\n      }\r\n    }\r\n\r\n    gfs_injectAsyncReducer('SHIP_PROC_MAIN', SHIP_PROC_MAIN);\r\n    //#endregion\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n  }\r\n\r\n  Retrieve = async () => {\r\n\r\n    gfc_showMask();\r\n\r\n    const mainData = await YK_WEB_REQ(`tally_ship_wait.jsp`);\r\n    const main = mainData.data.dataSend;\r\n    const grid = gfg_getGrid(this.props.pgm, 'main10');\r\n    grid.clear();\r\n    \r\n    if(main){\r\n      \r\n      grid.resetData(main);\r\n      gfs_dispatch('SHIP_PROC_MAIN', 'BOT_TOTAL', {BOT_TOTAL: main.length});\r\n      \r\n      await gfc_sleep(100);\r\n\r\n      gfg_setSelectRow(grid);\r\n    }else{\r\n      gfs_dispatch('SHIP_PROC_MAIN', 'BOT_TOTAL', {BOT_TOTAL: 0});\r\n    }\r\n\r\n    gfc_hideMask();\r\n  }\r\n\r\n\r\n  onSelectChange = async (e) => {\r\n    if(e === null) return;\r\n\r\n    gfs_dispatch('SHIP_PROC_MAIN', 'DETAIL_SCALE', {DETAIL_SCALE: e.scaleNumb});\r\n    gfs_dispatch('SHIP_PROC_MAIN', 'DETAIL_CARNO', {DETAIL_CARNO: e.vendorname});\r\n    gfs_dispatch('SHIP_PROC_MAIN', 'DETAIL_WEIGHT', {DETAIL_WEIGHT: e.netweight});\r\n    gfs_dispatch('SHIP_PROC_MAIN', 'DETAIL_DATE', {DETAIL_DATE: e.deliverydate});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='win_body' style={{borderRadius:'0px', borderWidth:'0px 1px 0px 1px'}}>\r\n        <div className='car_manager type2' >\r\n          <div style={{paddingBottom:'0'}} className='car_list'>\r\n            <div className='search_line'>\r\n              <div className='wp' >\r\n                <div style={{position:'absolute', left:0, top:0, width:'124px', height:'42px', fontSize:'16px'}}>\r\n                  <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'search_tp'\r\n                            value   = 'code'\r\n                            display = 'name'\r\n                            width   = {124}\r\n                            height  = {42}\r\n                            emptyRow\r\n                            data    = {[{\r\n                              code: '1',\r\n                              name: '계근번호'\r\n                            },{\r\n                              code: '2',\r\n                              name: '차량번호'\r\n                            },{\r\n                              code: '3',\r\n                              name: '등급'\r\n                            },{\r\n                              code: '4',\r\n                              name: '업체'\r\n                            }]}\r\n                  />\r\n                </div>\r\n                <Input pgm         = {this.props.pgm}\r\n                       id          = 'search_txt'\r\n                       height      = '42'\r\n                       placeHolder = '검색어를 입력하세요'\r\n                       paddingLeft = '14'\r\n                       width       = '100%'\r\n                       type        = 'textarea'\r\n                       readOnly\r\n                      //  padding-bottom:2px; padding-left:14px; border:none; font-size:22px;\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='grid'>\r\n              <div className='wp'>\r\n                <div style={{width:'100%', height:'100%', overflow:'auto'}}>\r\n                  <Grid pgm={this.props.pgm}\r\n                        id ='main10'\r\n                        selectionChange={(e) => this.onSelectChange(e)}\r\n                        headerClick={(e) => {\r\n                          if(e.columnName === 'chk'){\r\n                            const grid = gfg_getGrid(this.props.pgm, 'main10');\r\n                            if(grid.gridEl.dataset.checked === undefined){\r\n                              grid.gridEl.dataset.checked = true;\r\n                            }else if(grid.gridEl.dataset.checked === 'true'){\r\n                              grid.gridEl.dataset.checked = false;\r\n                            }else{\r\n                              grid.gridEl.dataset.checked = true;\r\n                            }\r\n    \r\n                            for(let i = 0; i < grid.getRowCount(); i++){\r\n                              gfg_setValue(grid, 'chk', grid.gridEl.dataset.checked, i);\r\n                            }\r\n                          }\r\n                        }}\r\n                        rowHeight={41}\r\n                        rowHeaders= {[{ type: 'rowNum', width: 40 }]}\r\n                        columns={[\r\n                          columnCheckbox({\r\n                            name: 'chk',\r\n                            header: '선택',\r\n                            width : 50,\r\n                            readOnly: true,\r\n                            align : 'center',\r\n                            type: 'checkbox'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'scaleNumb',\r\n                            header: '계근번호',\r\n                            width : 150,\r\n                            readOnly: true,\r\n                            color : '#0063A9',\r\n                            align : 'center',\r\n                            fontSize: '18'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'vendorname',\r\n                            header: '업체명',\r\n                            width : 300,\r\n                            readOnly: true,\r\n                            align : 'left',\r\n                            fontSize: '18'\r\n                          }),\r\n                          columnNumber({\r\n                            name    : 'netweight', \r\n                            header  : '무게(KG)', \r\n                            width   : 150, \r\n                            readOnly: false,\r\n                            fontSize: '18'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'deliverydate',\r\n                            header: '입차일자',\r\n                            width : 220,\r\n                            readOnly: true,\r\n                            align : 'center',\r\n                            fontSize: '18'\r\n                          })\r\n                        ]}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='grid_info'>\r\n                <span className='title'>전체차량</span><Botspan reducer='SHIP_PROC_MAIN' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{paddingBottom:'90px', paddingTop:'160px'}} className='car_info'>\r\n            <div className='title'><span>계근번호</span><Detailspan flag={1}  reducer='SHIP_PROC_MAIN'/></div>\r\n            <div className='detail'>\r\n              <ul>\r\n                <li><span className='t'>Vender</span><Detailspan flag={2}  reducer='SHIP_PROC_MAIN'/></li>\r\n                <li><span className='t'>무게(KG)</span><Detailspan flag={3} reducer='SHIP_PROC_MAIN' /></li>\r\n                <li><span className='t'>입차시간</span><Detailspan flag={4}  reducer='SHIP_PROC_MAIN'/></li> \r\n              </ul>\r\n            </div>\r\n\r\n\r\n            <div className='tab_content' id='tabMain'>\r\n              <div className='input_list on' id={`content1_${this.props.pgm}`}>\r\n                <ul>\r\n                  <li>\r\n                    <h5>등급책정</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Combobox pgm     = {this.props.pgm}\r\n                                id      = 'detail_grade1'\r\n                                value   = 'itemCode'\r\n                                display = 'item'\r\n                                placeholder = '고철등급 검색'\r\n                                height  = {42}\r\n                                etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P005', {})}\r\n                                onChange = {async (e) => {\r\n                                  const combo = gfo_getCombo(this.props.pgm, 'detail_grade2');\r\n                                  combo.setValue(null);\r\n\r\n                                  if(e !== undefined && e.value !== ''){\r\n                                    await combo.onReset({etcData:  YK_WEB_REQ(`tally_process_pop.jsp?division=${e.value}`, {})});\r\n                                    combo.setDisabled(false);\r\n                                  }else{\r\n                                    combo.setDisabled(true);\r\n                                  }\r\n                                }}\r\n                      />\r\n                    </div>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                              id      = 'detail_grade2'\r\n                              value   = 'itemCode'\r\n                              display = 'item'\r\n                              isDisabled\r\n                    />\r\n                  </li>\r\n                  <li>\r\n                    <h5>감량중량</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'detail_subt'\r\n                            value   = 'itemCode'\r\n                            display = 'item'\r\n                            placeholder = '감량중량 검색(KG)'\r\n                            etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P535', {})}\r\n                            onChange = {async (e) => {\r\n                              const combo = gfo_getCombo(this.props.pgm, 'detail_subt_leg');\r\n                              combo.setValue(null);\r\n\r\n                              if(e === undefined) return;\r\n\r\n                              if(e.value === '0'){\r\n                                combo.setDisabled(true);\r\n                              }else{\r\n                                await combo.onReset({etcData:  YK_WEB_REQ(`tally_process_pop.jsp?division=${e.value}`, {})});\r\n                                combo.setDisabled(false);\r\n                              }\r\n                            }}\r\n                      />\r\n                    </div>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_subt_leg'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '감량사유 검색'\r\n                          etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P620', {})}\r\n                          isDisabled\r\n                    /> \r\n                  </li>\r\n                  <li>\r\n                    <h5>감가내역</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'detail_depr'\r\n                            value   = 'itemCode'\r\n                            display = 'item'\r\n                            placeholder = '감가내역 검색'\r\n                            etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P130', {})}\r\n                            emptyRow\r\n                            onChange = {async (e) => {\r\n                              const combo = gfo_getCombo(this.props.pgm, 'detail_depr2');\r\n                              combo.setValue(null);\r\n\r\n                              if(e === undefined) return;\r\n\r\n                              if(e !== undefined && e.value !== ''){\r\n                                combo.setDisabled(false);\r\n                              }else{\r\n                                combo.setDisabled(true);\r\n                              }\r\n                            }}\r\n                      />\r\n                    </div>\r\n                    <Combobox pgm = {this.props.pgm}\r\n                          id      = 'detail_depr2'\r\n                          value   = 'code'\r\n                          display = 'name'\r\n                          placeholder = '감가비율'\r\n                          isDisabled\r\n                          data    = {[{\r\n                            'code': '10',\r\n                            'name': '10%'\r\n                          },{\r\n                            'code': '20',\r\n                            'name': '20%'\r\n                          },{\r\n                            'code': '30',\r\n                            'name': '30%'\r\n                          },{\r\n                            'code': '40',\r\n                            'name': '40%'\r\n                          },{\r\n                            'code': '50',\r\n                            'name': '50%'\r\n                          },{\r\n                            'code': '60',\r\n                            'name': '60%'\r\n                          },{\r\n                            'code': '70',\r\n                            'name': '70%'\r\n                          },{\r\n                            'code': '80',\r\n                            'name': '80%'\r\n                          },{\r\n                            'code': '90',\r\n                            'name': '90%'\r\n                          },{\r\n                            'code': '100',\r\n                            'name': '100%'\r\n                          }]}\r\n                          // emptyRow\r\n                    />\r\n                  </li>\r\n                  {/* <li>\r\n                    <h5>하차구역</h5>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_out'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '하차구역 검색(SECTOR)'\r\n                          data    = ''\r\n                          onFocus = {ComboCreate => {\r\n                            YK_WEB_REQ('tally_process_pop.jsp?division=P530', {})\r\n                              .then(res => {\r\n                                ComboCreate({data   : res.data.dataSend,\r\n                                            value  : 'itemCode',\r\n                                            display: 'item'});\r\n                              })\r\n                          }}\r\n                  />\r\n                  </li> */}\r\n                  <li>\r\n                    <h5>차종구분</h5>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_car'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '차종선택'\r\n                          etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P700', {})}\r\n                  />\r\n                  </li>\r\n                  <li>\r\n                    <h5>반품구분</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'detail_rtn'\r\n                            value   = 'itemCode'\r\n                            display = 'item'\r\n                            placeholder = '일부,전량 선택'\r\n                            etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P110', {})}\r\n                            emptyRow\r\n                            onChange = {e => {\r\n                              const combo = gfo_getCombo(this.props.pgm, 'detail_rtn2');\r\n                              combo.setValue(null);\r\n\r\n                              if(e === undefined) return;\r\n\r\n                              if(e.value === ''){\r\n                                combo.setDisabled(true);\r\n                              }else{\r\n                                combo.setDisabled(false);\r\n                              }\r\n                              // combo.onReset({etcData:  YK_WEB_REQ(`tally_process_pop.jsp?division=${e.value}`, {})});\r\n                            }}\r\n                    />\r\n                  </div>\r\n                  <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'detail_rtn2'\r\n                            value   = 'itemCode'\r\n                            display = 'item'\r\n                            etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P120', {})}\r\n                            isDisabled\r\n                    />\r\n                  </li>\r\n                  {/* <li>\r\n                    <h5>경고</h5>\r\n                    <Combobox pgm = {this.props.pgm}\r\n                          id      = 'detail_warning'\r\n                          value   = 'code'\r\n                          display = 'name'\r\n                          placeholder = '경고'\r\n                          data    = {[{\r\n                            'code': 'Y',\r\n                            'name': '경고'\r\n                          }]}\r\n                          emptyRow\r\n                    />\r\n                  </li> */}\r\n                </ul>\r\n              </div>\r\n\r\n\r\n              \r\n            </div>\r\n            \r\n            <CompleteBtn pgm={this.props.pgm}/>\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SHIP_PROC;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImage copy.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_HIST\\RecImageDtl copy 4.js",["690","691","692","693","694","695","696","697","698"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, MILESTONE_LIVE } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_subscribe, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { gfc_addClass, gfc_removeClass, gfc_hasClass, gfc_lpad } from '../../../Method/Comm';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nimport ReactPlayer from 'react-player'\r\nimport { throttle } from 'lodash';\r\nimport axios from 'axios';\r\nimport ReactHlsPlayer from 'react-hls-player';\r\n\r\nfunction RecImageDtl(props) {\r\n  \r\n  const movieRef = useRef();\r\n  const prgRef = useRef();\r\n  const timeRef = useRef();\r\n  const btnRef = useRef();\r\n\r\n  let isSeek = false;\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const value = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN.GRID_SCALE;\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const activeWindow = useSelector((e) => {\r\n    return e.WINDOWFRAME_REDUCER.activeWindow;\r\n  }, (p, n) => {\r\n    return p.programId === n.programId;\r\n  });\r\n\r\n  const movieDown = () => {\r\n\r\n    axios({\r\n      url: `http://10.10.10.136:3003/${value}.mp4?scaleNumb=${value}&cameraName=${props.Name}&stream=N`,\r\n      method: 'GET',\r\n      responseType: 'blob'\r\n    })\r\n      .then((response) => {\r\n            const url = window.URL\r\n                  .createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', `${value}.mp4`);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n      }).catch(e => console.log(e))\r\n\r\n    // MILESTONE({\r\n    //   reqAddr : 'Download',\r\n    //   device  : props.device,\r\n    //   scaleNo : value,\r\n    //   cameraName: props.Name}).then(e => {\r\n    //     if(e.data === '0'){\r\n    //       axios({\r\n    //         url: `http://10.10.10.136:3003/${value}.mp4?scaleNumb=${value}&cameraName=${props.Name}&stream=N`,\r\n    //         method: 'GET',\r\n    //         responseType: 'blob'\r\n    //       })\r\n    //         .then((response) => {\r\n    //               const url = window.URL\r\n    //                     .createObjectURL(new Blob([response.data]));\r\n    //               const link = document.createElement('a');\r\n    //               link.href = url;\r\n    //               link.setAttribute('download', 'image.avi');\r\n    //               document.body.appendChild(link);\r\n    //               link.click();\r\n    //               document.body.removeChild(link);\r\n    //         }).catch(e => console.log(e))\r\n    //     }else{\r\n    //       alert('파일저장에 실패 했습니다.')\r\n    //     }\r\n    //   })\r\n  }\r\n  \r\n  const playToggle = (_play) => {\r\n    var menu = document.getElementById(_play);\r\n    if(gfc_hasClass(menu,'play')){\r\n      gfc_removeClass(menu,'play')\r\n      movieRef.current.player.player.play();\r\n    }else{\r\n      gfc_addClass(menu,'play');\r\n      movieRef.current.player.player.pause();\r\n    }\r\n  }\r\n\r\n  if(activeWindow.programId === 'INSP_HIST'){\r\n    window.onkeydown = e => onKeyDown(e);\r\n  //   if(window.onkeydown === null){\r\n  //     window.onkeydown = e => onKeyDown(e);\r\n  //   }\r\n  // }else{\r\n  //   if(window.onkeydown !== null){\r\n  //     window.onkeydown = null;\r\n  //   }\r\n  }\r\n\r\n  const onKeyDown = (e) => {\r\n    e.stopPropagation();\r\n\r\n    const STD_CAM_FOCUS = gfs_getStoreValue('INSP_HIST_MAIN', 'STD_CAM_FOCUS');\r\n    const DUM_CAM_FOCUS = gfs_getStoreValue('INSP_HIST_MAIN', 'DUM_CAM_FOCUS');\r\n    \r\n    if(STD_CAM_FOCUS || DUM_CAM_FOCUS){\r\n      debounceKeyDown(e, STD_CAM_FOCUS ? 'STD_CAM_FOCUS' : 'DUM_CAM_FOCUS');\r\n    }\r\n  }\r\n  \r\n  const debounceKeyDown = throttle((e, owner) => {\r\n    let move = '';\r\n    if(e.keyCode === 37) move = 'left';\r\n    else if(e.keyCode === 39) move = 'right';\r\n\r\n    if(move !== ''){\r\n      if(owner === props.focus){\r\n        let curTime;\r\n        if(move === 'left'){\r\n          curTime = movieRef.current.getCurrentTime() - 5;\r\n        }else{\r\n          curTime = movieRef.current.getCurrentTime() + 5;\r\n        }\r\n\r\n        const loadedSeconds = movieRef.current.player.prevLoaded;\r\n\r\n        const totalMin = gfc_lpad(parseInt((loadedSeconds%3600)/60), 2, '0');\r\n        const totalSec = gfc_lpad(parseInt(loadedSeconds%60), 2, '0');\r\n\r\n        const curMin = gfc_lpad(parseInt((curTime%3600)/60), 2, '0');\r\n        const curSec = gfc_lpad(parseInt(curTime%60), 2, '0');\r\n\r\n        timeRef.current.textContent = `${curMin}:${curSec} / ${totalMin}:${totalSec}`;\r\n\r\n        movieRef.current.seekTo(curTime);\r\n      }\r\n    }\r\n  }, 300);\r\n\r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_HIST_MAIN', props.cam, obj);\r\n  }\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  const [playUrl, setPlayUrl] = useState('');\r\n\r\n  // useEffect(() => { \r\n  //   if(value !== ''){\r\n  //     gfc_showMask();\r\n  //     setPlayUrl('');\r\n\r\n  //     var req = new XMLHttpRequest();\r\n  //     req.open('GET', `http://10.10.10.136:3003/${value}.mp4?scaleNumb=${value}&cameraName=${props.Name}&stream=Y`, true);\r\n  //     req.responseType = 'blob';\r\n  \r\n  //     req.onload = function() {\r\n  //       // Onload is triggered even on 404\r\n  //       // so we need to check the status code\r\n  //       if (this.status === 200) {\r\n  //           var videoBlob = this.response;\r\n  //           var vid = URL.createObjectURL(videoBlob); // IE10+\r\n  //           // Video is now downloaded\r\n  //           // and we can set it as source on the video element\r\n             \r\n  //           // movieRef.current.src = vid;\r\n  //           setPlayUrl(vid);\r\n  //       }\r\n  //     }\r\n  //     req.onerror = function() {\r\n  //       gfc_hideMask();\r\n  //     }\r\n  \r\n  //     req.send();\r\n  //   }\r\n  // }, [props.device, props.Name, value])\r\n\r\n  useEffect(() => { \r\n    if(value !== ''){\r\n      // gfc_showMask();\r\n      setPlayUrl(`http://10.10.10.136:3003/${value}.m3u8?scaleNumb=${value}&cameraName=${props.Name}&stream=Y`);\r\n      // setPlayUrl(`http://10.10.10.136:3003/${value}/${props.Name}/${value}.m3u8`);\r\n\r\n      // var req = new XMLHttpRequest();\r\n      // req.open('GET', `http://10.10.10.136:3003/${value}.mp4?scaleNumb=${value}&cameraName=${props.Name}&stream=Y`, true);\r\n      // req.responseType = 'blob';\r\n  \r\n      // req.onload = function() {\r\n      //   // Onload is triggered even on 404\r\n      //   // so we need to check the status code\r\n      //   if (this.status === 200) {\r\n      //       var videoBlob = this.response;\r\n      //       var vid = URL.createObjectURL(videoBlob); // IE10+\r\n      //       // Video is now downloaded\r\n      //       // and we can set it as source on the video element\r\n             \r\n      //       // movieRef.current.src = vid;\r\n      //       setPlayUrl(vid);\r\n      //   }\r\n      // }\r\n    }\r\n  }, [props.device, props.Name, value])\r\n \r\n  const img = <>\r\n                <div \r\n                  style={{width:'100%', height:'100%'}} \r\n                  className='player-wrapper'>\r\n\r\n                  <ReactHlsPlayer\r\n                      src={playUrl}\r\n                      // src={`http://10.10.10.136:3003/${value}.m3u8?scaleNumb=${value}&cameraName=${props.Name}&stream=Y`}\r\n                      // src={`http://10.10.10.136:3003/${value}.mp4?scaleNumb=${value}&cameraName=${props.Name}&stream=Y`}\r\n                      autoPlay={false}\r\n                      controls={true}\r\n                      width=\"100%\"\r\n                      height=\"auto\"\r\n                      muted=\"muted\"\r\n                    />\r\n\r\n\r\n                  {/* <ReactPlayer \r\n                    ref={movieRef} \r\n                    className='react-player'\r\n                    width='100%' \r\n                    height='100%' \r\n                    onKeyPress={e => console.log(e)}\r\n                    \r\n                    // controls\r\n                    playing \r\n                    muted \r\n                    \r\n                    url={playUrl} \r\n\r\n                    \r\n                    onError={e => {\r\n                      if(e.target.error.code === 3){\r\n                        console.log(e.target);\r\n                        const curTime = movieRef.current.getCurrentTime() + 1;\r\n                        movieRef.current.seekTo(curTime);\r\n                        e.target.play();\r\n                      }else{\r\n                        btnRef.current.style = 'display:none;';\r\n                        gfc_hideMask();\r\n                      }\r\n                    }}\r\n\r\n                    onDuration={e => {\r\n                      btnRef.current.style = 'display:block;';\r\n                      prgRef.current.max = e;\r\n                    }}\r\n\r\n                    onPlay={e => {\r\n                      gfc_hideMask();\r\n                    }}\r\n\r\n                    onProgress={e => {\r\n                      if(isSeek) return;\r\n\r\n                      const totalMin = gfc_lpad(parseInt((e.loadedSeconds%3600)/60), 2, '0');\r\n                      const totalSec = gfc_lpad(parseInt(e.loadedSeconds%60), 2, '0');\r\n\r\n                      const curMin = gfc_lpad(parseInt((e.playedSeconds%3600)/60), 2, '0');\r\n                      const curSec = gfc_lpad(parseInt(e.playedSeconds%60), 2, '0');\r\n\r\n                      prgRef.current.value = e.playedSeconds;\r\n                      timeRef.current.textContent = `${curMin}:${curSec} / ${totalMin}:${totalSec}`;\r\n                    }}\r\n                  />  */}\r\n                </div>\r\n\r\n                <div className='viewer_range'>\r\n                  <div className='wp'>\r\n                    <button type='button' id='play1' onClick={() => playToggle('play1')}></button>\r\n                    <span className='time' ref={timeRef}>00:00 / 00:00 </span>\r\n                    <button \r\n                      ref={btnRef}\r\n                      type='button' \r\n                      className='download' \r\n                      onClick={() => movieDown()}></button>\r\n                  </div>\r\n                  <input \r\n                    onMouseDown={e => isSeek = true}\r\n                    onMouseUp={e => {\r\n                      movieRef.current.seekTo(e.target.value);\r\n                      isSeek = false;\r\n                    }}\r\n                    ref={prgRef} \r\n                    type='range' \r\n                    min={0} \r\n                    defaultValue={0} \r\n                    className='cctv_gauge'/> \r\n                </div>\r\n\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  // gfc_showMask();\r\n                  // gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                  //   e => {\r\n                  //     gfc_hideMask();\r\n                  //     if(e.data.Result !== 'OK'){\r\n                  //       alert('파일저장에 실패 했습니다.');\r\n                  //     } \r\n                  //   }\r\n                  // )\r\n                }}>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\INSP_CFRM.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\RecImage.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\RecImageDtl.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CFRM\\TabList.js",["699","700"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfc_addClass, gfc_removeClass, gfc_hasClass } from '../../../Method/Comm';\r\nimport { gfo_getCombo } from '../../../Method/Component';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\n\r\nconst TabList = (props) => {\r\n  const value = useSelector((e) => {\r\n    return e[props.reducer].CHIT_INFO;\r\n  }, (p, n) => {\r\n    return p.scaleNumb === n.scaleNumb;\r\n  });\r\n\r\n\r\n  const tabButton = (tabIndex,type) => {\r\n\r\n    let tabList = [`tab1_${type}`,`tab2_${type}`]\r\n    let contentList = [`content1_${type}`,`content2_${type}`]\r\n    let btnList = [`btn1_${type}`,`btn2_${type}`]\r\n    let tabMaxIndex = 2;\r\n    for(let i = 0; i < tabMaxIndex; i++){\r\n      if(i === tabIndex){\r\n        if(gfc_hasClass(document.getElementById(tabList[i]),'on') === false){\r\n          gfc_addClass(document.getElementById(tabList[i]),'on');\r\n          gfc_addClass(document.getElementById(contentList[i]),'on');\r\n\r\n          const btnElement = document.getElementById(btnList[i]);\r\n          if(btnElement !== null) gfc_addClass(btnElement,'on');\r\n\r\n          const car_info = document.getElementById('car_info');\r\n          if(i === 0){\r\n            car_info.style.paddingBottom = '90px';\r\n          }else if(i === 1){\r\n            if(gfs_getStoreValue('DISP_PROC_MAIN', 'CHIT_INFO').chit !== 'N'){\r\n              car_info.style.paddingBottom = '10px';\r\n            }else{\r\n              car_info.style.paddingBottom = '90px';\r\n            }\r\n          }else{\r\n            car_info.style.paddingBottom = '10px';\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        gfc_removeClass(document.getElementById(tabList[i]),'on');\r\n        gfc_removeClass(document.getElementById(contentList[i]),'on');\r\n        \r\n        const btnElement = document.getElementById(btnList[i]);\r\n          if(btnElement !== null) gfc_removeClass(btnElement,'on');\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id={props.pgm}>\r\n      <div className='tab_list type2'>\r\n        <button type='button' id={`tab1_${props.pgm}`} className='tab on' onClick={() => tabButton(0, props.pgm)}>검수입력</button>\r\n        <button type='button' id={`tab2_${props.pgm}`} className='tab' onClick={() => tabButton(1, props.pgm)}>\r\n          {value.chit !== 'N' && <span className='doc'>메모있음</span> } \r\n          계량증명서\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabList;","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Checkbox.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\CompleteBtn.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\RecImage.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\RecImageDtl.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\TabList.js",["701","702"],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_CANC\\INSP_CANC.js",["703"],"//#region import\r\nimport React, { Component } from 'react';\r\n\r\nimport Input from '../../../Component/Control/Input';\r\n\r\nimport { gfc_initPgm, gfc_showMask, gfc_hideMask, gfc_chit_yn_YK, gfc_sleep } from '../../../Method/Comm';\r\nimport { gfs_getStoreValue, gfs_injectAsyncReducer, gfs_dispatch, gfs_subscribe } from '../../../Method/Store';\r\nimport { gfo_getCombo, gfo_getInput } from '../../../Method/Component';\r\nimport { gfg_getGrid, gfg_setSelectRow, gfg_setValue } from '../../../Method/Grid';\r\nimport { getDynamicSql_Oracle } from '../../../db/Oracle/Oracle';\r\n\r\nimport Grid from '../../../Component/Grid/Grid';\r\nimport { Input as columnInput } from '../../../Component/Grid/Column/Input';\r\nimport { TextArea as columnTextArea } from '../../../Component/Grid/Column/TextArea';\r\nimport { Checkbox as columnCheckbox } from '../../../Component/Grid/Column/Checkbox';\r\n\r\nimport Combobox from '../../../Component/Control/Combobox';\r\n\r\n// import Mainspan from './Mainspan';\r\nimport Detailspan from '../Common/Detailspan';\r\nimport Botspan from '../Common/Botspan';\r\nimport Chit from '../Common/Chit/Chit';\r\nimport CompleteBtn from './CompleteBtn';\r\nimport TabList from './TabList';\r\nimport RecImage from './RecImage';\r\n\r\nimport { YK_WEB_REQ } from '../../../WebReq/WebReq';\r\nimport { TOKEN } from '../../../WebReq/WebReq';\r\n//#endregion\r\n\r\nclass INSP_CANC extends Component {\r\n\r\n  state = {\r\n    wait_list: [],\r\n    scaleNumb: ''\r\n  }\r\n\r\n  onTabChg = async() => {\r\n\r\n  }\r\n\r\n  //#region onActiveWindow 스토어 subscribe로 실행됨.\r\n  onActiveWindow = () => {\r\n    const activeWindow = gfs_getStoreValue('WINDOWFRAME_REDUCER', 'activeWindow');\r\n    if(activeWindow.programId === 'INSP_CANC'){\r\n      this.onTabChg();\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#endregion\r\n\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    gfc_initPgm(props.pgm, props.nam, this)\r\n\r\n    //#region 리듀서\r\n    const INSP_CANC_MAIN = (nowState, action) => {\r\n\r\n      if(action.reducer !== 'INSP_CANC_MAIN') {\r\n        return {\r\n          MAIN_WAIT    : nowState === undefined ? 0 : nowState.MAIN_WAIT,\r\n          MAIN_TOTAL   : nowState === undefined ? 0 : nowState.MAIN_TOTAL,\r\n          MAIN_WEIGHT  : nowState === undefined ? 0 : nowState.MAIN_WEIGHT,\r\n          BOT_TOTAL    : nowState === undefined ? 0 : nowState.BOT_TOTAL,\r\n          PROC_WAIT    : nowState === undefined ? 0 : nowState.PROC_WAIT,\r\n          DEPT_WAIT    : nowState === undefined ? 0 : nowState.DEPT_WAIT,\r\n          ENTR_WAIT    : nowState === undefined ? 0 : nowState.ENTR_WAIT,\r\n \r\n          DETAIL_SCALE : nowState === undefined ? '' : nowState.DETAIL_SCALE,\r\n          DETAIL_CARNO : nowState === undefined ? '' : nowState.DETAIL_CARNO,\r\n          DETAIL_WEIGHT: nowState === undefined ? '' : nowState.DETAIL_WEIGHT,\r\n          DETAIL_DATE  : nowState === undefined ? '' : nowState.DETAIL_DATE,\r\n\r\n          GRID_SCALE   : nowState === undefined ? '' : nowState.GRID_SCALE,\r\n\r\n          STD_CAM_IMG  : nowState === undefined ? null : nowState.STD_CAM_IMG,\r\n          DUM_CAM_IMG  : nowState === undefined ? null : nowState.DUM_CAM_IMG,\r\n\r\n          STD_CAM_OPEN : nowState === undefined ? false : nowState.STD_CAM_OPEN,\r\n          DUM_CAM_OPEN : nowState === undefined ? false : nowState.DUM_CAM_OPEN,\r\n\r\n          STD_CAM_FOCUS: nowState === undefined ? false : nowState.STD_CAM_FOCUS,\r\n          DUM_CAM_FOCUS: nowState === undefined ? false : nowState.DUM_CAM_FOCUS,\r\n\r\n          STD_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.STD_CAM_REC,\r\n          DUM_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.DUM_CAM_REC,\r\n\r\n          CHIT_MEMO    : nowState === undefined ? '' : nowState.CHIT_MEMO,\r\n          \r\n          CHIT_INFO    : nowState === undefined ? {\r\n                                                    date     : '',\r\n                                                    scaleNumb: '',\r\n                                                    carNumb  : '',\r\n                                                    vender   : '',\r\n                                                    itemFlag : '',\r\n                                                    Wgt      : '',\r\n                                                    loc      : '',\r\n                                                    user     : '',\r\n                                                    chit     : 'N',\r\n                                                  } : nowState.CHIT_INFO\r\n        };\r\n      }\r\n\r\n      if(action.type === 'MAIN_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WAIT : action.MAIN_WAIT\r\n        })\r\n      }else if(action.type === 'MAIN_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_TOTAL : action.MAIN_TOTAL\r\n        })\r\n      }else if(action.type === 'MAIN_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WEIGHT : action.MAIN_WEIGHT\r\n        })\r\n      }else if(action.type === 'BOT_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          BOT_TOTAL : action.BOT_TOTAL\r\n        })\r\n      }else if(action.type === 'PROC_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          PROC_WAIT : action.PROC_WAIT\r\n        })\r\n      }else if(action.type === 'DEPT_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DEPT_WAIT : action.DEPT_WAIT\r\n        })\r\n      }else if(action.type === 'ENTR_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          ENTR_WAIT : action.ENTR_WAIT\r\n        })\r\n      }else if(action.type === 'DETAIL_SCALE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_SCALE : action.DETAIL_SCALE\r\n        })\r\n      }else if(action.type === 'GRID_SCALE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          GRID_SCALE : action.GRID_SCALE\r\n        })\r\n      }else if(action.type === 'DETAIL_CARNO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_CARNO : action.DETAIL_CARNO\r\n        })\r\n      }else if(action.type === 'DETAIL_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_WEIGHT : action.DETAIL_WEIGHT\r\n        })\r\n      }else if(action.type === 'DETAIL_DATE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_DATE : action.DETAIL_DATE\r\n        })\r\n      }else if(action.type === 'STD_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_IMG : action.STD_CAM_IMG\r\n        })\r\n      }else if(action.type === 'DUM_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_IMG : action.DUM_CAM_IMG\r\n        })\r\n      }else if(action.type === 'STD_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_OPEN : action.STD_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'DUM_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_OPEN : action.DUM_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'STD_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_FOCUS : action.STD_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'DUM_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_FOCUS : action.DUM_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.STD_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.DUM_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec     : nowState.STD_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec     : nowState.DUM_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO_ITEM_FLAG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     :  nowState.CHIT_INFO.date,\r\n            scaleNumb:  nowState.CHIT_INFO.scaleNumb,\r\n            carNumb  :  nowState.CHIT_INFO.carNumb,\r\n            vender   :  nowState.CHIT_INFO.vender,\r\n            itemFlag :  action.itemFlag,\r\n            Wgt      :  nowState.CHIT_INFO.Wgt,\r\n            loc      :  nowState.CHIT_INFO.loc,\r\n            user     :  nowState.CHIT_INFO.user,\r\n            chit     :  nowState.CHIT_INFO.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     : action.date,\r\n            scaleNumb: action.scaleNumb,\r\n            carNumb  : action.carNumb,\r\n            vender   : action.vender,\r\n            itemFlag : action.itemFlag,\r\n            Wgt      : action.Wgt,\r\n            loc      : action.loc,\r\n            user     : action.user,\r\n            chit     : action.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_MEMO'){\r\n        return Object.assign({}, nowState, {\r\n          CHIT_MEMO : action.CHIT_MEMO\r\n        })\r\n      }\r\n    }\r\n\r\n    gfs_injectAsyncReducer('INSP_CANC_MAIN', INSP_CANC_MAIN);\r\n    gfs_subscribe(this.onActiveWindow);\r\n    //#endregion\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n  }\r\n\r\n  Retrieve = async () => {\r\n\r\n    gfc_showMask();\r\n\r\n    const mainData = await YK_WEB_REQ('tally_approve_cancel.jsp');\r\n    const main = mainData.data.dataSend;\r\n    const grid = gfg_getGrid(this.props.pgm, 'main10');\r\n    grid.clear();\r\n\r\n    gfo_getInput(this.props.pgm, 'pre_item_grade').setValue(''); //사전등급\r\n    gfo_getInput(this.props.pgm, 'iron_grade').setValue('');   //고철등급\r\n    gfo_getInput(this.props.pgm, 'iron_grade_item_name').setValue('');   //상세고철등급\r\n    gfo_getInput(this.props.pgm, 'reduce_wgt').setValue('');     //감량중량\r\n    gfo_getInput(this.props.pgm, 'reduce_name').setValue(''); //감량사유\r\n    gfo_getCombo(this.props.pgm, 'return_code').setValue('');      //반품구분\r\n    gfo_getInput(this.props.pgm, 'return_gubun_name').setValue('');     //반품구분사유\r\n    gfo_getCombo(this.props.pgm, 'return_reason').setValue('');      //취소사유\r\n    gfo_getInput(this.props.pgm, 'return_reason_desc').setValue('');     //취소사유\r\n\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_SCALE', {DETAIL_SCALE: ''});\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_CARNO', {DETAIL_CARNO: ''});\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_WEIGHT', {DETAIL_WEIGHT: ''});\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_DATE', {DETAIL_DATE: ''});\r\n\r\n    gfs_dispatch('INSP_CANC_MAIN', 'GRID_SCALE', {GRID_SCALE: ''});\r\n\r\n    //계량증명서 여부 확인.\r\n    gfs_dispatch('INSP_CANC_MAIN', 'CHIT_INFO', {\r\n      chit     : 'N'\r\n    });\r\n\r\n    if(main){\r\n      grid.resetData(main);\r\n      gfs_dispatch('INSP_CANC_MAIN', 'BOT_TOTAL', {BOT_TOTAL: main.length});\r\n      \r\n      await gfc_sleep(100);\r\n\r\n      gfg_setSelectRow(grid);\r\n    }else{\r\n      gfs_dispatch('INSP_CANC_MAIN', 'BOT_TOTAL', {BOT_TOTAL: 0});\r\n    }\r\n\r\n    gfc_hideMask();\r\n  }\r\n\r\n\r\n  onSelectChange = async (e) => {\r\n    if(e === null) return;\r\n\r\n    gfo_getInput(this.props.pgm, 'pre_item_grade').setValue(e.pre_item_grade); //사전등급\r\n    gfo_getInput(this.props.pgm, 'iron_grade').setValue(e.iron_grade);   //고철등급\r\n    gfo_getInput(this.props.pgm, 'iron_grade_item_name').setValue(e.iron_grade_item_name);   //상세고철등급\r\n    gfo_getInput(this.props.pgm, 'reduce_wgt').setValue(e.reduce_wgt);     //감량중량\r\n    gfo_getInput(this.props.pgm, 'reduce_name').setValue(e.reduce_name); //감량사유\r\n    gfo_getCombo(this.props.pgm, 'return_code').setValue(e.return_gubun);      //반품구분\r\n    gfo_getInput(this.props.pgm, 'return_gubun_name').setValue(e.return_gubun_name);     //반품구분사유\r\n\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_SCALE', {DETAIL_SCALE: e.scaleNumb});\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_CARNO', {DETAIL_CARNO: e.vehicle_no});\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_WEIGHT', {DETAIL_WEIGHT: e.net_weight});\r\n    gfs_dispatch('INSP_CANC_MAIN', 'DETAIL_DATE', {DETAIL_DATE: e.delivery_date});\r\n\r\n    gfs_dispatch('INSP_CANC_MAIN', 'GRID_SCALE', {GRID_SCALE: e.scaleNumb});\r\n\r\n    //계량증명서 여부 확인.\r\n    const chitYn = await gfc_chit_yn_YK(e.scaleNumb);\r\n    gfs_dispatch('INSP_CANC_MAIN', 'CHIT_INFO', {\r\n      chit     : chitYn.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='win_body' style={{borderRadius:'0px', borderWidth:'0px 1px 0px 1px'}}>\r\n        <div className='car_manager' >\r\n          <div style={{paddingBottom:'0'}} className='car_list'>\r\n            <div className='search_line'>\r\n              <div className='wp' >\r\n                <div style={{position:'absolute', left:0, top:0, width:'124px', height:'42px', fontSize:'16px'}}>\r\n                  <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'search_tp'\r\n                            value   = 'code'\r\n                            display = 'name'\r\n                            width   = {124}\r\n                            height  = {42}\r\n                            emptyRow\r\n                            data    = {[{\r\n                              code: '1',\r\n                              name: '계근번호'\r\n                            },{\r\n                              code: '2',\r\n                              name: '차량번호'\r\n                            },{\r\n                              code: '3',\r\n                              name: '등급'\r\n                            },{\r\n                              code: '4',\r\n                              name: '업체'\r\n                            }]}\r\n                  />\r\n                </div>\r\n                <Input pgm         = {this.props.pgm}\r\n                       id          = 'search_txt'\r\n                       height      = '42'\r\n                       placeHolder = '검색어를 입력하세요'\r\n                       paddingLeft = '14'\r\n                       width       = '100%'\r\n                       type        = 'textarea'\r\n                       readOnly\r\n                      //  padding-bottom:2px; padding-left:14px; border:none; font-size:22px;\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='grid'>\r\n              <div className='wp'>\r\n                <div style={{width:'100%', height:'100%', overflow:'auto'}}>\r\n                  <Grid pgm={this.props.pgm}\r\n                        id ='main10'\r\n                        selectionChange={(e) => this.onSelectChange(e)}\r\n                        rowHeight={46}\r\n                        rowHeaders= {[{ type: 'rowNum', width: 40 }]}\r\n                        headerClick={(e) => {\r\n                          if(e.columnName === 'chk'){\r\n                            const grid = gfg_getGrid(this.props.pgm, 'main10');\r\n                            if(grid.gridEl.dataset.checked === undefined){\r\n                              grid.gridEl.dataset.checked = true;\r\n                            }else if(grid.gridEl.dataset.checked === 'true'){\r\n                              grid.gridEl.dataset.checked = false;\r\n                            }else{\r\n                              grid.gridEl.dataset.checked = true;\r\n                            }\r\n    \r\n                            for(let i = 0; i < grid.getRowCount(); i++){\r\n                              gfg_setValue(grid, 'chk', grid.gridEl.dataset.checked, i);\r\n                            }\r\n                          }\r\n                        }}\r\n                        columns={[\r\n                          columnCheckbox({\r\n                            name: 'chk',\r\n                            header: '선택',\r\n                            width : 50,\r\n                            readOnly: true,\r\n                            align : 'center',\r\n                            type: 'checkbox'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'scaleNumb',\r\n                            header: '계근번호',\r\n                            width : 120,\r\n                            readOnly: true,\r\n                            color : '#0063A9',\r\n                            align : 'center'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'vehicle_no',\r\n                            header: '차량번호',\r\n                            width : 110,\r\n                            readOnly: true,\r\n                            align : 'center'\r\n                          }),   \r\n                          columnInput({\r\n                            name: 'pre_item_grade',\r\n                            header: '사전등급',\r\n                            width : 135,\r\n                            readOnly: true,\r\n                            align : 'center'\r\n                          }),   \r\n                          columnInput({\r\n                            name: 'iron_grade',\r\n                            header: '등급',\r\n                            width : 135,\r\n                            readOnly: true,\r\n                            align : 'center'\r\n                          }),    \r\n                          columnInput({\r\n                            name: 'iron_grade_item_name',\r\n                            header: '상세등급',\r\n                            width : 135,\r\n                            readOnly: true,\r\n                            align : 'left'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'reduce_name',\r\n                            header: '감량사유',\r\n                            width : 180,\r\n                            readOnly: true,\r\n                            align : 'left'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'reduce_wgt',\r\n                            header: '감량',\r\n                            width : 80,\r\n                            readOnly: true,\r\n                            align : 'right'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'return_gubun_name',\r\n                            header: '반품내용',\r\n                            width : 200,\r\n                            readOnly: true,\r\n                            align : 'left'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'inspector',\r\n                            header: '검수자',\r\n                            width : 100,\r\n                            readOnly: true,\r\n                            align : 'center'\r\n                          }),  \r\n                          columnTextArea({\r\n                            name  : 'delivery_date',\r\n                            header: '출차시간',\r\n                            width : 80,\r\n                            height: 38,\r\n                            // paddingTop: ''\r\n                            readOnly: true,\r\n                            valign:'middle',\r\n                            format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                            time  : 'HH:mm'\r\n                          }),\r\n                          columnTextArea({\r\n                            name: 'vendor_name',\r\n                            header: 'Vendor',\r\n                            width : 200,\r\n                            height: 38,\r\n                            readOnly: true,\r\n                            align : 'left'\r\n                          })\r\n                        ]}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='grid_info'>\r\n                <span className='title'>전체차량</span><Botspan reducer='INSP_CANC_MAIN' />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='car_info'>\r\n            <div className='title'><span>계근번호</span><Detailspan flag={1}  reducer='INSP_CANC_MAIN'/></div>\r\n            <div className='detail'>\r\n              <ul>\r\n                <li><span className='t'>차량번호</span><Detailspan flag={2}  reducer='INSP_CANC_MAIN'/></li>\r\n                <li><span className='t'>총중량(KG)</span><Detailspan flag={3} reducer='INSP_CANC_MAIN' /></li>\r\n                <li><span className='t'>출차시간</span><Detailspan flag={4}  reducer='INSP_CANC_MAIN'/></li> \r\n              </ul>\r\n            </div>\r\n\r\n            <TabList pgm={this.props.pgm} id={this.props.id} reducer='INSP_CANC_MAIN'/>\r\n\r\n            <div className='tab_content' id='tabMain'>\r\n              <div className='input_list on' id={`content1_${this.props.pgm}`}>\r\n                <ul>\r\n                  <li>\r\n                    <h5>취소사유</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <div style={{marginBottom:'5px'}}>\r\n                        <Combobox pgm     = {this.props.pgm}\r\n                              id      = 'return_reason'\r\n                              value   = 'CODEID'\r\n                              display = 'KORFNM'\r\n                              oracleData = {getDynamicSql_Oracle(\r\n                                 'Common/Common',\r\n                                 'INSP_CANC_REASON',\r\n                                 {}, {})}\r\n                        />\r\n                      </div>\r\n                      <Input pgm     = {this.props.pgm}\r\n                             id      = 'return_reason_desc'\r\n                             width   = '100%'\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                  <li>\r\n                    <h5>사전등급</h5>\r\n                      <Input pgm     = {this.props.pgm}\r\n                             id      = 'pre_item_grade'\r\n                             width   = '100%'\r\n                             disabled\r\n                      />\r\n                  </li>\r\n                  <li>\r\n                    <h5>등급</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Input pgm     = {this.props.pgm}\r\n                             id      = 'iron_grade'\r\n                             width   = '100%'\r\n                             disabled\r\n                      />\r\n                    </div>\r\n                    <Input pgm     = {this.props.pgm}\r\n                            id      = 'iron_grade_item_name'\r\n                            width   = '100%'\r\n                            disabled\r\n                    />\r\n                  </li>\r\n                  <li>\r\n                    <h5>감량중량</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Input pgm     = {this.props.pgm}\r\n                              id      = 'reduce_wgt'\r\n                              width   = '100%'\r\n                              disabled\r\n                      />\r\n                    </div>\r\n                    <Input pgm     = {this.props.pgm}\r\n                            id      = 'reduce_name'\r\n                            width   = '100%'\r\n                            disabled\r\n                    />\r\n                  </li>\r\n                  {/* <li>\r\n                    <h5>하차구역</h5>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_out'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '하차구역 검색(SECTOR)'\r\n                          data    = ''\r\n                          onFocus = {ComboCreate => {\r\n                            YK_WEB_REQ('tally_process_pop.jsp?division=P530', {})\r\n                              .then(res => {\r\n                                ComboCreate({data   : res.data.dataSend,\r\n                                            value  : 'itemCode',\r\n                                            display: 'item'});\r\n                              })\r\n                          }}\r\n                  />\r\n                  </li> */}\r\n                  <li>\r\n                    <h5>반품내용</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <div style={{marginBottom:'5px'}}>\r\n                        <Combobox pgm     = {this.props.pgm}\r\n                              id      = 'return_code'\r\n                              value   = 'itemCode'\r\n                              display = 'item'\r\n                              isDisabled\r\n                              etcData = {YK_WEB_REQ('tally_process_pop.jsp?division=P110', {})}\r\n                        />\r\n                      </div>\r\n                      <Input pgm     = {this.props.pgm}\r\n                              id      = 'return_gubun_name'\r\n                              width   = '100%'\r\n                              disabled\r\n                      />\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <Chit pgm={this.props.pgm} id={'chit_memo'} reducer='INSP_CANC_MAIN'/>\r\n              \r\n            </div>\r\n            <CompleteBtn pgm={this.props.pgm}/>\r\n          </div>\r\n            <div className='cctv_viewer'>\r\n              <h4>녹화영상</h4>\r\n              <div className='cctv_list'>\r\n                <RecImage \r\n                  seq   = {1}\r\n                  cam   = 'STD_CAM_OPEN' \r\n                  focus = 'STD_CAM_FOCUS' \r\n                  rec   = 'STD_CAM_REC' \r\n                  image = 'STD_CAM_IMG'/> \r\n                <RecImage\r\n                  seq   = {2}\r\n                  cam   = 'DUM_CAM_OPEN' \r\n                  focus = 'DUM_CAM_FOCUS' \r\n                  rec   = 'DUM_CAM_REC' \r\n                  image = 'DUM_CAM_IMG'/> \r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default INSP_CANC;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImage copy 2.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy 2.js",["704","705","706","707","708"],"import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, RTSP } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nconst jsmpeg = require('jsmpeg');\r\n\r\nfunction RecImageDtl(props) {\r\n  const imageRef = useRef();\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n  \r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_PROC_MAIN', props.cam, obj);\r\n  }\r\n\r\n  const start = async() => {\r\n      MILESTONE({\r\n        reqAddr: 'CONNECT',\r\n        device : props.device\r\n      });\r\n\r\n      let conText = imageRef.current.getContext('2d');\r\n      let img = new Image();\r\n      img.onload = () => {\r\n       conText.drawImage(img, 0, 0, imageRef.current.width, imageRef.current.height);\r\n      }\r\n\r\n      setInterval(() => {\r\n        MILESTONE({\r\n          reqAddr: 'LIVE',\r\n          device : props.device\r\n        }).then(e => {\r\n            img.src = e.data;\r\n        })\r\n      }, 30);\r\n  }\r\n\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  // var client = null;\r\n  // var canvas = null;\r\n  // const setRtsp = () => {\r\n\r\n  //   client = new WebSocket(`ws://10.10.10.136:${props.rtspPort}`);\r\n  //   canvas = imageRef.current;\r\n  //   new jsmpeg(client, {\r\n  //     canvas \r\n  //   });\r\n  // }\r\n\r\n  useEffect(() => { \r\n    start();\r\n    // RTSP({reqAddr: 'RTSPStart',\r\n    //       device: props.device,\r\n    //       streamUrl: props.rtspUrl,\r\n    //       port: props.rtspPort\r\n    //     }).then(e => {\r\n    //       if(e.data === 'OK'){\r\n    //         setRtsp();\r\n    //       }\r\n    //     })\r\n\r\n    // return() => {\r\n    //   client.close();\r\n    // }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  // const debounceOnClick = throttle((e, ptz) => {\r\n  //   TOKEN({}).then(e => {\r\n\r\n  //     MILESTONE({reqAddr: 'PTZ',\r\n  //     device: props.device,\r\n  //     ptz})\r\n  //   })\r\n\r\n  // }, 1000);\r\n\r\n  const debounceOnClick = (e, ptz) => {\r\n    MILESTONE({reqAddr: 'PTZ',\r\n    device: props.device,\r\n    ptz})\r\n\r\n  };\r\n\r\n  const onClick = (e, ptz) => {\r\n    e.stopPropagation();\r\n    debounceOnClick(e, ptz);\r\n  }\r\n\r\n  const img = <>\r\n                {/* rtsp://admin:admin13579@10.10.136.112:554/video1+audio1  */}\r\n\r\n                <canvas \r\n                  ref={imageRef} \r\n                  style={{width:'100%', height:'100%'}}\r\n                  onDoubleClick={e => {\r\n                    setModalIsOpen(true);\r\n                  }}\r\n                />\r\n\r\n                {/* <img style={{height:'100%', width:'100%'}} alt='yk_image' \r\n                    ref={imageRef}\r\n                    onDoubleClick={e => {\r\n                      setModalIsOpen(true);\r\n                    }}>\r\n                </img> */}\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                  {/* <a href='#!' className='server'></a> */}\r\n                </div>\r\n                <div className=\"direction\">\r\n                <button type='' className='left' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'left')}}>왼쪽</button>\r\n                  <button type='' className='top' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'up')}}>위쪽</button>\r\n                  <button type='' className='down' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'down')}}>아래</button>\r\n                  <button type='' className='right' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'right')}}>오른쪽</button>\r\n                </div>\r\n                <div className={isOpen === true ? 'controller on' : 'controller'}>\r\n                    <button type='' className='plus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomin')}}>확대</button>\r\n                    <button type='' className='minus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomout')}}>축소</button>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl.js",["709"],"D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy.js",["710","711","712","713","714"],"import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, RTSP } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport RecTimer from './RecTimer';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nimport { loadPlayer } from 'rtsp-relay/browser';\r\nimport ScriptTag from 'react-script-tag';\r\n\r\nconst jsmpeg = require('jsmpeg');\r\n\r\nfunction RecImageDtl(props) {\r\n  <>\r\n    {/* <ScriptTag src=\"Configuration?callback=UpdateSettings\"></ScriptTag> */}\r\n    {/* <ScriptTag src=\"./Web/js/settings.js\" type=\"text/javascript\"></ScriptTag> */}\r\n    {/* <ScriptTag src=\"./Web/js/lang/en-US.js\" id=\"lang-source\"></ScriptTag>\r\n    <ScriptTag src=\"./Web/js/main.min.js\"></ScriptTag>\r\n    <ScriptTag src='./Web/js/modules/ModuleLoader.js'/> */}\r\n    <ScriptTag src='./Web/js/modules/sdkLoader.js'/>\r\n  </>\r\n\r\n  const imageRef = useRef();\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n  \r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_PROC_MAIN', props.cam, obj);\r\n  }\r\n\r\n  const start = async() => {\r\n      MILESTONE({reqAddr: 'CONNECT',\r\n                 device : props.device})\r\n  }\r\n\r\n  const style={\r\n    overlay: { \r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  var client = null;\r\n  var canvas = null;\r\n  const setRtsp = () => {\r\n\r\n    client = new WebSocket(`ws://10.10.10.136:${props.rtspPort}`);\r\n    canvas = imageRef.current;\r\n    new jsmpeg(client, {\r\n      canvas \r\n    });\r\n  }\r\n\r\n  useEffect(() => { \r\n    start();\r\n    loadPlayer({\r\n      url: `ws://10.10.10.136:3000/RTSPStart`,\r\n      canvas: imageRef.current,\r\n    \r\n      // optional\r\n      onDisconnect: () => console.log('Connection lost!'),\r\n    });\r\n\r\n    // RTSP({reqAddr: 'RTSPStart',\r\n    //       device: props.device,\r\n    //       streamUrl: props.rtspUrl,\r\n    //       port: props.rtspPort\r\n    //     }).then(e => {\r\n    //       if(e.data === 'OK'){\r\n    //         setRtsp();\r\n    //       }\r\n    //     })\r\n\r\n    // return() => {\r\n    //   client.close();\r\n    // }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen])\r\n\r\n  // const debounceOnClick = throttle((e, ptz) => {\r\n  //   TOKEN({}).then(e => {\r\n\r\n  //     MILESTONE({reqAddr: 'PTZ',\r\n  //     device: props.device,\r\n  //     ptz})\r\n  //   })\r\n\r\n  // }, 1000);\r\n\r\n  const debounceOnClick = (e, ptz) => {\r\n    MILESTONE({reqAddr: 'PTZ',\r\n    device: props.device,\r\n    ptz})\r\n\r\n  };\r\n\r\n  const onClick = (e, ptz) => {\r\n    e.stopPropagation();\r\n    debounceOnClick(e, ptz);\r\n  }\r\n\r\n  const img = <>\r\n                <div style={{position:'absolute'}}>\r\n                  <RecTimer device={props.device} rec={props.rec} car={props.car} />\r\n                </div>\r\n                {/* rtsp://admin:admin13579@10.10.136.112:554/video1+audio1  */}\r\n\r\n                <canvas \r\n                  ref={imageRef} \r\n                  style={{width:'100%', height:'100%'}}\r\n                  onDoubleClick={e => {\r\n                    setModalIsOpen(true);\r\n                  }}\r\n                  \r\n                />\r\n\r\n                {/* <img style={{height:'100%', width:'100%'}} alt='yk_image' \r\n                    ref={imageRef}\r\n                    onDoubleClick={e => {\r\n                      setModalIsOpen(true);\r\n                    }}>\r\n                </img> */}\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                  {/* <a href='#!' className='server'></a> */}\r\n                </div>\r\n                <div className=\"direction\">\r\n                <button type='' className='left' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'left')}}>왼쪽</button>\r\n                  <button type='' className='top' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'up')}}>위쪽</button>\r\n                  <button type='' className='down' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'down')}}>아래</button>\r\n                  <button type='' className='right' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'right')}}>오른쪽</button>\r\n                </div>\r\n                <div className={isOpen === true ? 'controller on' : 'controller'}>\r\n                    <button type='' className='plus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomin')}}>확대</button>\r\n                    <button type='' className='minus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomout')}}>축소</button>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy 3.js",["715","716","717","718"],"import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, RTSP } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport RecTimer from './RecTimer';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nimport ScriptTag from 'react-script-tag';\r\n\r\nconst jsmpeg = require('jsmpeg');\r\n\r\nfunction RecImageDtl(props) {\r\n  const imageRef = useRef();\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n  \r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_PROC_MAIN', props.cam, obj);\r\n  }\r\n\r\n  const start = async() => {\r\n      MILESTONE({reqAddr: 'CONNECT',\r\n                 device : props.device})\r\n  }\r\n\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  var client = null;\r\n  var canvas = null;\r\n  const setRtsp = () => {\r\n\r\n    client = new WebSocket(`ws://10.10.10.136:${props.rtspPort}`);\r\n    canvas = imageRef.current;\r\n    new jsmpeg(client, {\r\n      canvas \r\n    });\r\n  }\r\n\r\n  useEffect(() => { \r\n    start();\r\n    RTSP({reqAddr: 'RTSPStart',\r\n          device: props.device,\r\n          streamUrl: props.rtspUrl,\r\n          port: props.rtspPort\r\n        }).then(e => {\r\n          if(e.data === 'OK'){\r\n            setRtsp();\r\n          }\r\n        })\r\n\r\n    return() => {\r\n      client.close();\r\n    }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen])\r\n\r\n  // const debounceOnClick = throttle((e, ptz) => {\r\n  //   TOKEN({}).then(e => {\r\n\r\n  //     MILESTONE({reqAddr: 'PTZ',\r\n  //     device: props.device,\r\n  //     ptz})\r\n  //   })\r\n\r\n  // }, 1000);\r\n\r\n  const debounceOnClick = (e, ptz) => {\r\n    MILESTONE({reqAddr: 'PTZ',\r\n    device: props.device,\r\n    ptz})\r\n\r\n  };\r\n\r\n  const onClick = (e, ptz) => {\r\n    e.stopPropagation();\r\n    debounceOnClick(e, ptz);\r\n  }\r\n\r\n  const img = <>\r\n                <div style={{position:'absolute'}}>\r\n                  <RecTimer device={props.device} rec={props.rec} car={props.car} />\r\n                </div>\r\n                {/* rtsp://admin:admin13579@10.10.136.112:554/video1+audio1  */}\r\n\r\n                <canvas \r\n                  ref={imageRef} \r\n                  style={{width:'100%', height:'100%'}}\r\n                  onDoubleClick={e => {\r\n                    setModalIsOpen(true);\r\n                  }}\r\n                  \r\n                />\r\n\r\n                {/* <img style={{height:'100%', width:'100%'}} alt='yk_image' \r\n                    ref={imageRef}\r\n                    onDoubleClick={e => {\r\n                      setModalIsOpen(true);\r\n                    }}>\r\n                </img> */}\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                  {/* <a href='#!' className='server'></a> */}\r\n                </div>\r\n                <div className=\"direction\">\r\n                <button type='' className='left' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'left')}}>왼쪽</button>\r\n                  <button type='' className='top' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'up')}}>위쪽</button>\r\n                  <button type='' className='down' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'down')}}>아래</button>\r\n                  <button type='' className='right' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'right')}}>오른쪽</button>\r\n                </div>\r\n                <div className={isOpen === true ? 'controller on' : 'controller'}>\r\n                    <button type='' className='plus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomin')}}>확대</button>\r\n                    <button type='' className='minus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomout')}}>축소</button>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\IMS\\INSP_PROC\\RecImageDtl copy 4.js",["719","720","721","722","723","724"],"import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, RTSP } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport RecTimer from './RecTimer';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nimport { loadPlayer } from 'rtsp-relay/browser';\r\nimport ScriptTag from 'react-script-tag';\r\n\r\nconst jsmpeg = require('jsmpeg');\r\n\r\nfunction RecImageDtl(props) {\r\n  <>\r\n    {/* <ScriptTag src='./Web/XPMobileSDK/Samples/lib/js/sdkLoader.js' />\r\n    <ScriptTag src=\"./Web/XPMobileSDK/Samples/lib/js/application.js\" />\r\n    <ScriptTag src=\"./Web/XPMobileSDK/Samples/lib/js/loginManager.js\"/> */}\r\n    {/* <ScriptTag src=\"Configuration?callback=UpdateSettings\"></ScriptTag> */}\r\n    {/* <ScriptTag src=\"./Web/js/settings.js\" type=\"text/javascript\"></ScriptTag> */}\r\n    {/* <ScriptTag src=\"./Web/js/lang/en-US.js\" id=\"lang-source\"></ScriptTag>\r\n    <ScriptTag src=\"./Web/js/main.min.js\"></ScriptTag>\r\n    <ScriptTag src='./Web/js/modules/ModuleLoader.js'/> */}\r\n  </>\r\n\r\n  const imageRef = useRef();\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n  \r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_PROC_MAIN', props.cam, obj);\r\n  }\r\n\r\n  const start = async() => {\r\n      MILESTONE({reqAddr: 'CONNECT',\r\n                 device : props.device})\r\n  }\r\n\r\n  const style={\r\n    overlay: { \r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  var client = null;\r\n  var canvas = null;\r\n  const setRtsp = () => {\r\n\r\n    client = new WebSocket(`ws://10.10.10.136:${props.rtspPort}`);\r\n    canvas = imageRef.current;\r\n    new jsmpeg(client, {\r\n      canvas \r\n    });\r\n  }\r\n\r\n  useEffect(() => { \r\n    start();\r\n    loadPlayer({\r\n      url: `ws://10.10.10.136:3000/RTSPStart`,\r\n      canvas: imageRef.current,\r\n    \r\n      // optional\r\n      onDisconnect: () => console.log('Connection lost!'),\r\n    });\r\n\r\n    // RTSP({reqAddr: 'RTSPStart',\r\n    //       device: props.device,\r\n    //       streamUrl: props.rtspUrl,\r\n    //       port: props.rtspPort\r\n    //     }).then(e => {\r\n    //       if(e.data === 'OK'){\r\n    //         setRtsp();\r\n    //       }\r\n    //     })\r\n\r\n    // return() => {\r\n    //   client.close();\r\n    // }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen])\r\n\r\n  // const debounceOnClick = throttle((e, ptz) => {\r\n  //   TOKEN({}).then(e => {\r\n\r\n  //     MILESTONE({reqAddr: 'PTZ',\r\n  //     device: props.device,\r\n  //     ptz})\r\n  //   })\r\n\r\n  // }, 1000);\r\n\r\n  const debounceOnClick = (e, ptz) => {\r\n    MILESTONE({reqAddr: 'PTZ',\r\n    device: props.device,\r\n    ptz})\r\n\r\n  };\r\n\r\n  const onClick = (e, ptz) => {\r\n    e.stopPropagation();\r\n    debounceOnClick(e, ptz);\r\n  }\r\n\r\n  const img = <>\r\n                <div style={{position:'absolute'}}>\r\n                  <RecTimer device={props.device} rec={props.rec} car={props.car} />\r\n                </div>\r\n                {/* rtsp://admin:admin13579@10.10.136.112:554/video1+audio1  */}\r\n\r\n                <canvas \r\n                  ref={imageRef} \r\n                  style={{width:'100%', height:'100%'}}\r\n                  onDoubleClick={e => {\r\n                    setModalIsOpen(true);\r\n                  }}\r\n                  \r\n                />\r\n\r\n                {/* <img style={{height:'100%', width:'100%'}} alt='yk_image' \r\n                    ref={imageRef}\r\n                    onDoubleClick={e => {\r\n                      setModalIsOpen(true);\r\n                    }}>\r\n                </img> */}\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                  {/* <a href='#!' className='server'></a> */}\r\n                </div>\r\n                <div className=\"direction\">\r\n                <button type='' className='left' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'left')}}>왼쪽</button>\r\n                  <button type='' className='top' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'up')}}>위쪽</button>\r\n                  <button type='' className='down' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'down')}}>아래</button>\r\n                  <button type='' className='right' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'right')}}>오른쪽</button>\r\n                </div>\r\n                <div className={isOpen === true ? 'controller on' : 'controller'}>\r\n                    <button type='' className='plus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomin')}}>확대</button>\r\n                    <button type='' className='minus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomout')}}>축소</button>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;",{"ruleId":"725","replacedBy":"726"},{"ruleId":"727","replacedBy":"728"},{"ruleId":"729","severity":1,"message":"730","line":9,"column":31,"nodeType":"731","messageId":"732","endLine":9,"endColumn":56},{"ruleId":"729","severity":1,"message":"733","line":10,"column":28,"nodeType":"731","messageId":"732","endLine":10,"endColumn":44},{"ruleId":"729","severity":1,"message":"734","line":125,"column":7,"nodeType":"731","messageId":"732","endLine":125,"endColumn":15},{"ruleId":"729","severity":1,"message":"735","line":15,"column":9,"nodeType":"731","messageId":"732","endLine":15,"endColumn":16},{"ruleId":"729","severity":1,"message":"736","line":1,"column":8,"nodeType":"731","messageId":"732","endLine":1,"endColumn":13},{"ruleId":"729","severity":1,"message":"737","line":6,"column":38,"nodeType":"731","messageId":"732","endLine":6,"endColumn":50},{"ruleId":"729","severity":1,"message":"738","line":24,"column":8,"nodeType":"731","messageId":"732","endLine":24,"endColumn":13},{"ruleId":"729","severity":1,"message":"739","line":12,"column":9,"nodeType":"731","messageId":"732","endLine":12,"endColumn":17},{"ruleId":"729","severity":1,"message":"740","line":15,"column":9,"nodeType":"731","messageId":"732","endLine":15,"endColumn":18},{"ruleId":"729","severity":1,"message":"741","line":6,"column":27,"nodeType":"731","messageId":"732","endLine":6,"endColumn":39},{"ruleId":"729","severity":1,"message":"742","line":8,"column":10,"nodeType":"731","messageId":"732","endLine":8,"endColumn":23},{"ruleId":"725","replacedBy":"743"},{"ruleId":"727","replacedBy":"744"},{"ruleId":"729","severity":1,"message":"735","line":171,"column":9,"nodeType":"731","messageId":"732","endLine":171,"endColumn":16},{"ruleId":"729","severity":1,"message":"733","line":6,"column":28,"nodeType":"731","messageId":"732","endLine":6,"endColumn":44},{"ruleId":"729","severity":1,"message":"745","line":7,"column":27,"nodeType":"731","messageId":"732","endLine":7,"endColumn":44},{"ruleId":"729","severity":1,"message":"741","line":7,"column":46,"nodeType":"731","messageId":"732","endLine":7,"endColumn":58},{"ruleId":"729","severity":1,"message":"736","line":1,"column":8,"nodeType":"731","messageId":"732","endLine":1,"endColumn":13},{"ruleId":"729","severity":1,"message":"746","line":5,"column":10,"nodeType":"731","messageId":"732","endLine":5,"endColumn":29},{"ruleId":"729","severity":1,"message":"747","line":1,"column":10,"nodeType":"731","messageId":"732","endLine":1,"endColumn":20},{"ruleId":"729","severity":1,"message":"748","line":207,"column":11,"nodeType":"731","messageId":"732","endLine":207,"endColumn":17},{"ruleId":"729","severity":1,"message":"749","line":258,"column":15,"nodeType":"731","messageId":"732","endLine":258,"endColumn":23},{"ruleId":"729","severity":1,"message":"750","line":259,"column":15,"nodeType":"731","messageId":"732","endLine":259,"endColumn":19},{"ruleId":"729","severity":1,"message":"751","line":147,"column":9,"nodeType":"731","messageId":"732","endLine":147,"endColumn":19},{"ruleId":"729","severity":1,"message":"752","line":200,"column":9,"nodeType":"731","messageId":"732","endLine":200,"endColumn":22},{"ruleId":"729","severity":1,"message":"753","line":271,"column":9,"nodeType":"731","messageId":"732","endLine":271,"endColumn":18},{"ruleId":"729","severity":1,"message":"754","line":313,"column":9,"nodeType":"731","messageId":"732","endLine":313,"endColumn":17},{"ruleId":"725","replacedBy":"755"},{"ruleId":"727","replacedBy":"756"},{"ruleId":"729","severity":1,"message":"741","line":6,"column":27,"nodeType":"731","messageId":"732","endLine":6,"endColumn":39},{"ruleId":"729","severity":1,"message":"742","line":8,"column":10,"nodeType":"731","messageId":"732","endLine":8,"endColumn":23},{"ruleId":"729","severity":1,"message":"757","line":176,"column":11,"nodeType":"731","messageId":"732","endLine":176,"endColumn":17},{"ruleId":"729","severity":1,"message":"758","line":182,"column":9,"nodeType":"731","messageId":"732","endLine":182,"endColumn":19},{"ruleId":"729","severity":1,"message":"736","line":1,"column":8,"nodeType":"731","messageId":"732","endLine":1,"endColumn":13},{"ruleId":"729","severity":1,"message":"759","line":4,"column":10,"nodeType":"731","messageId":"732","endLine":4,"endColumn":22},{"ruleId":"729","severity":1,"message":"741","line":5,"column":10,"nodeType":"731","messageId":"732","endLine":5,"endColumn":22},{"ruleId":"729","severity":1,"message":"760","line":6,"column":51,"nodeType":"731","messageId":"732","endLine":6,"endColumn":60},{"ruleId":"729","severity":1,"message":"761","line":8,"column":23,"nodeType":"731","messageId":"732","endLine":8,"endColumn":39},{"ruleId":"729","severity":1,"message":"759","line":4,"column":10,"nodeType":"731","messageId":"732","endLine":4,"endColumn":22},{"ruleId":"729","severity":1,"message":"741","line":5,"column":10,"nodeType":"731","messageId":"732","endLine":5,"endColumn":22},{"ruleId":"729","severity":1,"message":"762","line":11,"column":7,"nodeType":"731","messageId":"732","endLine":11,"endColumn":11},{"ruleId":"729","severity":1,"message":"763","line":1,"column":36,"nodeType":"731","messageId":"732","endLine":1,"endColumn":44},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"765","line":3,"column":28,"nodeType":"731","messageId":"732","endLine":3,"endColumn":42},{"ruleId":"729","severity":1,"message":"745","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":41},{"ruleId":"729","severity":1,"message":"766","line":14,"column":9,"nodeType":"731","messageId":"732","endLine":14,"endColumn":23},{"ruleId":"729","severity":1,"message":"767","line":17,"column":9,"nodeType":"731","messageId":"732","endLine":17,"endColumn":28},{"ruleId":"729","severity":1,"message":"768","line":20,"column":9,"nodeType":"731","messageId":"732","endLine":20,"endColumn":26},{"ruleId":"729","severity":1,"message":"769","line":26,"column":11,"nodeType":"731","messageId":"732","endLine":26,"endColumn":13},{"ruleId":"729","severity":1,"message":"770","line":30,"column":9,"nodeType":"731","messageId":"732","endLine":30,"endColumn":25},{"ruleId":"729","severity":1,"message":"771","line":34,"column":10,"nodeType":"731","messageId":"732","endLine":34,"endColumn":24},{"ruleId":"729","severity":1,"message":"763","line":1,"column":36,"nodeType":"731","messageId":"732","endLine":1,"endColumn":44},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"765","line":3,"column":28,"nodeType":"731","messageId":"732","endLine":3,"endColumn":42},{"ruleId":"729","severity":1,"message":"745","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":41},{"ruleId":"729","severity":1,"message":"766","line":14,"column":9,"nodeType":"731","messageId":"732","endLine":14,"endColumn":23},{"ruleId":"729","severity":1,"message":"767","line":17,"column":9,"nodeType":"731","messageId":"732","endLine":17,"endColumn":28},{"ruleId":"729","severity":1,"message":"768","line":20,"column":9,"nodeType":"731","messageId":"732","endLine":20,"endColumn":26},{"ruleId":"729","severity":1,"message":"769","line":26,"column":11,"nodeType":"731","messageId":"732","endLine":26,"endColumn":13},{"ruleId":"729","severity":1,"message":"770","line":30,"column":9,"nodeType":"731","messageId":"732","endLine":30,"endColumn":25},{"ruleId":"729","severity":1,"message":"771","line":34,"column":10,"nodeType":"731","messageId":"732","endLine":34,"endColumn":24},{"ruleId":"729","severity":1,"message":"772","line":57,"column":9,"nodeType":"731","messageId":"732","endLine":57,"endColumn":19},{"ruleId":"729","severity":1,"message":"763","line":1,"column":36,"nodeType":"731","messageId":"732","endLine":1,"endColumn":44},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"773","line":3,"column":17,"nodeType":"731","messageId":"732","endLine":3,"endColumn":26},{"ruleId":"729","severity":1,"message":"765","line":3,"column":28,"nodeType":"731","messageId":"732","endLine":3,"endColumn":42},{"ruleId":"729","severity":1,"message":"745","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":41},{"ruleId":"729","severity":1,"message":"774","line":6,"column":10,"nodeType":"731","messageId":"732","endLine":6,"endColumn":18},{"ruleId":"729","severity":1,"message":"775","line":21,"column":11,"nodeType":"731","messageId":"732","endLine":21,"endColumn":16},{"ruleId":"729","severity":1,"message":"741","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":22},{"ruleId":"729","severity":1,"message":"745","line":3,"column":24,"nodeType":"731","messageId":"732","endLine":3,"endColumn":41},{"ruleId":"729","severity":1,"message":"773","line":5,"column":10,"nodeType":"731","messageId":"732","endLine":5,"endColumn":19},{"ruleId":"729","severity":1,"message":"776","line":3,"column":8,"nodeType":"731","messageId":"732","endLine":3,"endColumn":13},{"ruleId":"729","severity":1,"message":"777","line":8,"column":82,"nodeType":"731","messageId":"732","endLine":8,"endColumn":97},{"ruleId":"729","severity":1,"message":"778","line":9,"column":38,"nodeType":"731","messageId":"732","endLine":9,"endColumn":53},{"ruleId":"729","severity":1,"message":"779","line":16,"column":22,"nodeType":"731","messageId":"732","endLine":16,"endColumn":36},{"ruleId":"729","severity":1,"message":"780","line":33,"column":41,"nodeType":"731","messageId":"732","endLine":33,"endColumn":56},{"ruleId":"729","severity":1,"message":"774","line":35,"column":10,"nodeType":"731","messageId":"732","endLine":35,"endColumn":18},{"ruleId":"729","severity":1,"message":"741","line":4,"column":29,"nodeType":"731","messageId":"732","endLine":4,"endColumn":41},{"ruleId":"729","severity":1,"message":"781","line":5,"column":38,"nodeType":"731","messageId":"732","endLine":5,"endColumn":59},{"ruleId":"729","severity":1,"message":"782","line":5,"column":61,"nodeType":"731","messageId":"732","endLine":5,"endColumn":75},{"ruleId":"729","severity":1,"message":"760","line":5,"column":77,"nodeType":"731","messageId":"732","endLine":5,"endColumn":86},{"ruleId":"729","severity":1,"message":"783","line":9,"column":23,"nodeType":"731","messageId":"732","endLine":9,"endColumn":41},{"ruleId":"729","severity":1,"message":"737","line":9,"column":55,"nodeType":"731","messageId":"732","endLine":9,"endColumn":67},{"ruleId":"729","severity":1,"message":"782","line":6,"column":51,"nodeType":"731","messageId":"732","endLine":6,"endColumn":65},{"ruleId":"729","severity":1,"message":"745","line":7,"column":10,"nodeType":"731","messageId":"732","endLine":7,"endColumn":27},{"ruleId":"729","severity":1,"message":"784","line":7,"column":67,"nodeType":"731","messageId":"732","endLine":7,"endColumn":80},{"ruleId":"729","severity":1,"message":"785","line":8,"column":24,"nodeType":"731","messageId":"732","endLine":8,"endColumn":36},{"ruleId":"729","severity":1,"message":"778","line":8,"column":38,"nodeType":"731","messageId":"732","endLine":8,"endColumn":53},{"ruleId":"729","severity":1,"message":"747","line":9,"column":23,"nodeType":"731","messageId":"732","endLine":9,"endColumn":33},{"ruleId":"729","severity":1,"message":"786","line":13,"column":19,"nodeType":"731","messageId":"732","endLine":13,"endColumn":30},{"ruleId":"729","severity":1,"message":"779","line":14,"column":22,"nodeType":"731","messageId":"732","endLine":14,"endColumn":36},{"ruleId":"729","severity":1,"message":"787","line":15,"column":22,"nodeType":"731","messageId":"732","endLine":15,"endColumn":36},{"ruleId":"729","severity":1,"message":"764","line":27,"column":10,"nodeType":"731","messageId":"732","endLine":27,"endColumn":15},{"ruleId":"729","severity":1,"message":"773","line":27,"column":17,"nodeType":"731","messageId":"732","endLine":27,"endColumn":26},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"773","line":3,"column":17,"nodeType":"731","messageId":"732","endLine":3,"endColumn":26},{"ruleId":"729","severity":1,"message":"765","line":3,"column":28,"nodeType":"731","messageId":"732","endLine":3,"endColumn":42},{"ruleId":"729","severity":1,"message":"784","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":37},{"ruleId":"729","severity":1,"message":"788","line":7,"column":10,"nodeType":"731","messageId":"732","endLine":7,"endColumn":22},{"ruleId":"729","severity":1,"message":"789","line":7,"column":24,"nodeType":"731","messageId":"732","endLine":7,"endColumn":36},{"ruleId":"729","severity":1,"message":"790","line":7,"column":38,"nodeType":"731","messageId":"732","endLine":7,"endColumn":71},{"ruleId":"729","severity":1,"message":"791","line":8,"column":8,"nodeType":"731","messageId":"732","endLine":8,"endColumn":19},{"ruleId":"729","severity":1,"message":"792","line":320,"column":23,"nodeType":"731","messageId":"732","endLine":320,"endColumn":29},{"ruleId":"729","severity":1,"message":"759","line":4,"column":10,"nodeType":"731","messageId":"732","endLine":4,"endColumn":22},{"ruleId":"729","severity":1,"message":"741","line":5,"column":10,"nodeType":"731","messageId":"732","endLine":5,"endColumn":22},{"ruleId":"729","severity":1,"message":"759","line":4,"column":10,"nodeType":"731","messageId":"732","endLine":4,"endColumn":22},{"ruleId":"729","severity":1,"message":"741","line":5,"column":10,"nodeType":"731","messageId":"732","endLine":5,"endColumn":22},{"ruleId":"729","severity":1,"message":"764","line":28,"column":10,"nodeType":"731","messageId":"732","endLine":28,"endColumn":15},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"793","line":3,"column":28,"nodeType":"731","messageId":"732","endLine":3,"endColumn":32},{"ruleId":"729","severity":1,"message":"745","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":41},{"ruleId":"729","severity":1,"message":"774","line":6,"column":10,"nodeType":"731","messageId":"732","endLine":6,"endColumn":18},{"ruleId":"729","severity":1,"message":"794","line":8,"column":7,"nodeType":"731","messageId":"732","endLine":8,"endColumn":13},{"ruleId":"795","severity":1,"message":"796","line":96,"column":6,"nodeType":"797","endLine":96,"endColumn":8,"suggestions":"798"},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"793","line":3,"column":28,"nodeType":"731","messageId":"732","endLine":3,"endColumn":32},{"ruleId":"729","severity":1,"message":"745","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":41},{"ruleId":"729","severity":1,"message":"774","line":7,"column":10,"nodeType":"731","messageId":"732","endLine":7,"endColumn":18},{"ruleId":"729","severity":1,"message":"799","line":74,"column":9,"nodeType":"731","messageId":"732","endLine":74,"endColumn":16},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"745","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":41},{"ruleId":"729","severity":1,"message":"774","line":7,"column":10,"nodeType":"731","messageId":"732","endLine":7,"endColumn":18},{"ruleId":"729","severity":1,"message":"800","line":9,"column":8,"nodeType":"731","messageId":"732","endLine":9,"endColumn":17},{"ruleId":"729","severity":1,"message":"764","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":15},{"ruleId":"729","severity":1,"message":"793","line":3,"column":28,"nodeType":"731","messageId":"732","endLine":3,"endColumn":32},{"ruleId":"729","severity":1,"message":"745","line":5,"column":24,"nodeType":"731","messageId":"732","endLine":5,"endColumn":41},{"ruleId":"729","severity":1,"message":"774","line":7,"column":10,"nodeType":"731","messageId":"732","endLine":7,"endColumn":18},{"ruleId":"729","severity":1,"message":"800","line":10,"column":8,"nodeType":"731","messageId":"732","endLine":10,"endColumn":17},{"ruleId":"729","severity":1,"message":"799","line":76,"column":9,"nodeType":"731","messageId":"732","endLine":76,"endColumn":16},"no-native-reassign",["801"],"no-negated-in-lhs",["802"],"no-unused-vars","'getDynamicSql_Mysql_async' is defined but never used.","Identifier","unusedVar","'getSessionCookie' is defined but never used.","'winClose' is assigned a value but never used.","'session' is assigned a value but never used.","'React' is defined but never used.","'gfg_setValue' is defined but never used.","'store' is defined but never used.","'dateList' is assigned a value but never used.","'valueList' is assigned a value but never used.","'gfs_dispatch' is defined but never used.","'gfp_openPopup' is defined but never used.",["801"],["802"],"'gfs_getStoreValue' is defined but never used.","'getDynamicSql_Mysql' is defined but never used.","'gfg_getRow' is defined but never used.","'onBlur' is assigned a value but never used.","'onRender' is assigned a value but never used.","'rows' is assigned a value but never used.","'fixedFrame' is assigned a value but never used.","'columnVisible' is assigned a value but never used.","'resetGrid' is assigned a value but never used.","'saveGrid' is assigned a value but never used.",["801"],["802"],"'option' is assigned a value but never used.","'backGround' is assigned a value but never used.","'gfo_getCombo' is defined but never used.","'gfc_sleep' is defined but never used.","'gfg_setSelectRow' is defined but never used.","'name' is assigned a value but never used.","'useState' is defined but never used.","'TOKEN' is defined but never used.","'MILESTONE_LIVE' is defined but never used.","'handleDuration' is assigned a value but never used.","'handleSeekMouseDown' is assigned a value but never used.","'handleSeekMouseUp' is assigned a value but never used.","'aa' is assigned a value but never used.","'handleSeekChange' is assigned a value but never used.","'handleProgress' is assigned a value but never used.","'playToggle' is assigned a value but never used.","'MILESTONE' is defined but never used.","'throttle' is defined but never used.","'value' is assigned a value but never used.","'axios' is defined but never used.","'gfs_PGM_REDUCER' is defined but never used.","'gfo_getTextarea' is defined but never used.","'columnCombobox' is defined but never used.","'YK_WEB_REQ_DISP' is defined but never used.","'gfc_screenshot_srv_YK' is defined but never used.","'gfc_chit_yn_YK' is defined but never used.","'gfg_getModyfiedRow' is defined but never used.","'gfs_subscribe' is defined but never used.","'gfo_getInput' is defined but never used.","'columnImage' is defined but never used.","'columnTextArea' is defined but never used.","'gfc_showMask' is defined but never used.","'gfc_hideMask' is defined but never used.","'gfc_screenshot_srv_from_milestone' is defined but never used.","'ReactPlayer' is defined but never used.","'isSeek' is assigned a value but never used.","'RTSP' is defined but never used.","'jsmpeg' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.","ArrayExpression",["803"],"'setRtsp' is assigned a value but never used.","'ScriptTag' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"804","fix":"805"},"Update the dependencies array to be: [start]",{"range":"806","text":"807"},[2274,2276],"[start]"]