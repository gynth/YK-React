[{"D:\\Project\\react\\src\\index.js":"1","D:\\Project\\react\\src\\Store\\Store.js":"2","D:\\Project\\react\\src\\App.js":"3","D:\\Project\\react\\src\\Login.js":"4","D:\\Project\\react\\src\\Home.js":"5","D:\\Project\\react\\src\\Cookies.js":"6","D:\\Project\\react\\src\\Method\\Store.js":"7","D:\\Project\\react\\src\\Program\\WindowFrame.js":"8","D:\\Project\\react\\src\\Component\\Control\\ExplainInput.js":"9","D:\\Project\\react\\src\\Component\\Control\\Button.js":"10","D:\\Project\\react\\src\\db\\Mysql\\Mysql.js":"11","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js":"12","D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabList.js":"13","D:\\Project\\react\\src\\db\\Mysql\\MysqlServer.js":"14","D:\\Project\\react\\src\\Method\\Comm.js":"15","D:\\Project\\react\\src\\Method\\Grid.js":"16","D:\\Project\\react\\src\\Program\\MES\\PgmTest.js":"17","D:\\Project\\react\\src\\JSON\\jsonControl.js":"18","D:\\Project\\react\\src\\Program\\MES\\Chart\\PgmTest2.js":"19","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js":"20","D:\\Project\\react\\src\\Program\\MES\\Menu.js":"21","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js":"22","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js":"23","D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js":"24","D:\\Project\\react\\src\\Component\\Control\\DetailDiv.js":"25","D:\\Project\\react\\src\\Component\\Control\\SearchDiv.js":"26","D:\\Project\\react\\src\\Method\\Popup.js":"27","D:\\Project\\react\\src\\Method\\Component.js":"28","D:\\Project\\react\\src\\Component\\Control\\Input.js":"29","D:\\Project\\react\\src\\Component\\Control\\Combobox.js":"30","D:\\Project\\react\\src\\Component\\Control\\DateTime.js":"31","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart1.js":"32","D:\\Project\\react\\src\\Component\\Control\\Number.js":"33","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart2.js":"34","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart3.js":"35","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js":"36","D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart4.js":"37","D:\\Project\\react\\src\\Component\\Grid\\Column\\Number.js":"38","D:\\Project\\react\\src\\Component\\Grid\\Column\\Input.js":"39","D:\\Project\\react\\src\\Component\\Grid\\Grid.js":"40","D:\\Project\\react\\src\\Component\\Layout\\Layout.js":"41","D:\\Project\\react\\src\\Component\\Grid\\Column\\DateTime.js":"42","D:\\Project\\react\\src\\Component\\Grid\\Column\\Combobox.js":"43","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js":"44","D:\\Project\\react\\src\\Component\\Popup\\PopupFrame.js":"45","D:\\Project\\react\\src\\Program\\POPUP\\PopupTest.js":"46","D:\\Project\\01.YK\\react\\src\\index.js":"47","D:\\Project\\01.YK\\react\\src\\Store\\Store.js":"48","D:\\Project\\01.YK\\react\\src\\App.js":"49","D:\\Project\\01.YK\\react\\src\\Home.js":"50","D:\\Project\\01.YK\\react\\src\\Login.js":"51","D:\\Project\\01.YK\\react\\src\\Cookies.js":"52","D:\\Project\\01.YK\\react\\src\\Program\\WindowFrame.js":"53","D:\\Project\\01.YK\\react\\src\\WebReq\\WebReq.js":"54","D:\\Project\\01.YK\\react\\src\\Method\\Store.js":"55","D:\\Project\\01.YK\\react\\src\\Method\\Component.js":"56","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Input.js":"57","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabList.js":"58","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js":"59","D:\\Project\\01.YK\\react\\src\\db\\Mysql\\Mysql.js":"60","D:\\Project\\01.YK\\react\\src\\db\\Mysql\\MysqlServer.js":"61","D:\\Project\\01.YK\\react\\src\\JSON\\jsonControl.js":"62","D:\\Project\\01.YK\\react\\src\\Program\\MES\\PgmTest.js":"63","D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\PgmTest2.js":"64","D:\\Project\\01.YK\\react\\src\\Program\\MES\\Menu.js":"65","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js":"66","D:\\Project\\01.YK\\react\\src\\Method\\Comm.js":"67","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js":"68","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js":"69","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js":"70","D:\\Project\\01.YK\\react\\src\\Method\\Grid.js":"71","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Combobox.js":"72","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Image.js":"73","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Input.js":"74","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Combobox.js":"75","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Grid.js":"76","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\TextArea.js":"77","D:\\Project\\01.YK\\react\\src\\Component\\Control\\DetailDiv.js":"78","D:\\Project\\01.YK\\react\\src\\Component\\Control\\SearchDiv.js":"79","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\DateTime.js":"80","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Number.js":"81","D:\\Project\\01.YK\\react\\src\\Method\\Popup.js":"82","D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart2.js":"83","D:\\Project\\01.YK\\react\\src\\Component\\Control\\DateTime.js":"84","D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart3.js":"85","D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart1.js":"86","D:\\Project\\01.YK\\react\\src\\Component\\Control\\Number.js":"87","D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart4.js":"88","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js":"89","D:\\Project\\01.YK\\react\\src\\Component\\Layout\\Layout.js":"90","D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js":"91","D:\\Project\\01.YK\\react\\src\\Component\\Popup\\PopupFrame.js":"92","D:\\Project\\01.YK\\react\\src\\Program\\POPUP\\PopupTest.js":"93","D:\\Project\\01.YK\\react\\src\\Component\\Control\\TextArea.js":"94","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\INSP_HIST.js":"95","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\CompleteBtn.js":"96","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\RecImage.js":"97","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\RecImageDtl.js":"98","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\TabList.js":"99","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\Botspan.js":"100","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\CompleteBtn.js":"101","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\RecImage.js":"102","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\INSP_PROC.js":"103","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\RecTimer.js":"104","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\RecImageDtl.js":"105","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Botspan.js":"106","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Detailspan.js":"107","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Mainspan.js":"108","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Chit.js":"109","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\TabList.js":"110","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\TabList copy.js":"111","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\RecImageDtl copy.js":"112"},{"size":280,"mtime":1623198507106,"results":"113","hashOfConfig":"114"},{"size":720,"mtime":1623198507098,"results":"115","hashOfConfig":"114"},{"size":423,"mtime":1623198506881,"results":"116","hashOfConfig":"114"},{"size":8922,"mtime":1624253274618,"results":"117","hashOfConfig":"114"},{"size":2339,"mtime":1623198789146,"results":"118","hashOfConfig":"114"},{"size":540,"mtime":1623198506986,"results":"119","hashOfConfig":"114"},{"size":23552,"mtime":1623287890068,"results":"120","hashOfConfig":"114"},{"size":8266,"mtime":1623287890068,"results":"121","hashOfConfig":"114"},{"size":2540,"mtime":1623198506898,"results":"122","hashOfConfig":"114"},{"size":2100,"mtime":1623198506882,"results":"123","hashOfConfig":"114"},{"size":6863,"mtime":1624253278354,"results":"124","hashOfConfig":"114"},{"size":4687,"mtime":1623198506975,"results":"125","hashOfConfig":"114"},{"size":3073,"mtime":1623287890068,"results":"126","hashOfConfig":"114"},{"size":1831,"mtime":1624251408048,"results":"127","hashOfConfig":"114"},{"size":3421,"mtime":1623198507062,"results":"128","hashOfConfig":"114"},{"size":2093,"mtime":1623287890068,"results":"129","hashOfConfig":"114"},{"size":18566,"mtime":1623894271533,"results":"130","hashOfConfig":"114"},{"size":1143,"mtime":1623198507057,"results":"131","hashOfConfig":"114"},{"size":6851,"mtime":1623198507076,"results":"132","hashOfConfig":"114"},{"size":1382,"mtime":1623198506974,"results":"133","hashOfConfig":"114"},{"size":24216,"mtime":1623894171987,"results":"134","hashOfConfig":"114"},{"size":1121,"mtime":1623198506969,"results":"135","hashOfConfig":"114"},{"size":474,"mtime":1623198506977,"results":"136","hashOfConfig":"114"},{"size":2132,"mtime":1623287890068,"results":"137","hashOfConfig":"114"},{"size":388,"mtime":1623198506891,"results":"138","hashOfConfig":"114"},{"size":255,"mtime":1623198506906,"results":"139","hashOfConfig":"114"},{"size":1224,"mtime":1623893479508,"results":"140","hashOfConfig":"114"},{"size":1819,"mtime":1623287890068,"results":"141","hashOfConfig":"114"},{"size":6965,"mtime":1623198506901,"results":"142","hashOfConfig":"114"},{"size":7293,"mtime":1623895218374,"results":"143","hashOfConfig":"114"},{"size":8663,"mtime":1623287890068,"results":"144","hashOfConfig":"114"},{"size":3372,"mtime":1623198507071,"results":"145","hashOfConfig":"114"},{"size":7848,"mtime":1623287890068,"results":"146","hashOfConfig":"114"},{"size":1917,"mtime":1623198507073,"results":"147","hashOfConfig":"114"},{"size":3131,"mtime":1623198507074,"results":"148","hashOfConfig":"114"},{"size":853,"mtime":1623198506971,"results":"149","hashOfConfig":"114"},{"size":2181,"mtime":1623198507075,"results":"150","hashOfConfig":"114"},{"size":4696,"mtime":1623287890068,"results":"151","hashOfConfig":"114"},{"size":5031,"mtime":1623198506933,"results":"152","hashOfConfig":"114"},{"size":19259,"mtime":1623287890068,"results":"153","hashOfConfig":"114"},{"size":3834,"mtime":1623198506966,"results":"154","hashOfConfig":"114"},{"size":4266,"mtime":1623287890068,"results":"155","hashOfConfig":"114"},{"size":10178,"mtime":1623892863583,"results":"156","hashOfConfig":"114"},{"size":1361,"mtime":1623198506972,"results":"157","hashOfConfig":"114"},{"size":4358,"mtime":1623835586251,"results":"158","hashOfConfig":"114"},{"size":1121,"mtime":1623198507093,"results":"159","hashOfConfig":"114"},{"size":280,"mtime":1627967732377,"results":"160","hashOfConfig":"161"},{"size":937,"mtime":1624503751437,"results":"162","hashOfConfig":"161"},{"size":488,"mtime":1625049228357,"results":"163","hashOfConfig":"161"},{"size":5157,"mtime":1628573920564,"results":"164","hashOfConfig":"161"},{"size":3966,"mtime":1626337001900,"results":"165","hashOfConfig":"161"},{"size":540,"mtime":1623198506986,"results":"166","hashOfConfig":"161"},{"size":8290,"mtime":1627871693251,"results":"167","hashOfConfig":"161"},{"size":2432,"mtime":1628065906516,"results":"168","hashOfConfig":"161"},{"size":25305,"mtime":1628506940872,"results":"169","hashOfConfig":"161"},{"size":2266,"mtime":1628497003143,"results":"170","hashOfConfig":"161"},{"size":7369,"mtime":1628506991807,"results":"171","hashOfConfig":"161"},{"size":3073,"mtime":1623287890068,"results":"172","hashOfConfig":"161"},{"size":3190,"mtime":1625016365814,"results":"173","hashOfConfig":"161"},{"size":6863,"mtime":1624253278354,"results":"174","hashOfConfig":"161"},{"size":1849,"mtime":1628065906517,"results":"175","hashOfConfig":"161"},{"size":1143,"mtime":1623198507057,"results":"176","hashOfConfig":"161"},{"size":18566,"mtime":1623894271533,"results":"177","hashOfConfig":"161"},{"size":6851,"mtime":1623198507076,"results":"178","hashOfConfig":"161"},{"size":24216,"mtime":1623894171987,"results":"179","hashOfConfig":"161"},{"size":2177,"mtime":1625013232145,"results":"180","hashOfConfig":"161"},{"size":7678,"mtime":1628232431155,"results":"181","hashOfConfig":"161"},{"size":1382,"mtime":1624581507523,"results":"182","hashOfConfig":"161"},{"size":1631,"mtime":1628574287273,"results":"183","hashOfConfig":"161"},{"size":474,"mtime":1623198506977,"results":"184","hashOfConfig":"161"},{"size":2093,"mtime":1623287890068,"results":"185","hashOfConfig":"161"},{"size":8289,"mtime":1628572608819,"results":"186","hashOfConfig":"161"},{"size":2637,"mtime":1625562576282,"results":"187","hashOfConfig":"161"},{"size":5609,"mtime":1625625628146,"results":"188","hashOfConfig":"161"},{"size":11494,"mtime":1625555827695,"results":"189","hashOfConfig":"161"},{"size":19993,"mtime":1628573043026,"results":"190","hashOfConfig":"161"},{"size":5181,"mtime":1628573250397,"results":"191","hashOfConfig":"161"},{"size":388,"mtime":1623198506891,"results":"192","hashOfConfig":"161"},{"size":255,"mtime":1623198506906,"results":"193","hashOfConfig":"161"},{"size":4727,"mtime":1625460225083,"results":"194","hashOfConfig":"161"},{"size":4696,"mtime":1623287890068,"results":"195","hashOfConfig":"161"},{"size":1224,"mtime":1623893479508,"results":"196","hashOfConfig":"161"},{"size":1917,"mtime":1623198507073,"results":"197","hashOfConfig":"161"},{"size":8663,"mtime":1623287890068,"results":"198","hashOfConfig":"161"},{"size":3131,"mtime":1623198507074,"results":"199","hashOfConfig":"161"},{"size":3372,"mtime":1623198507071,"results":"200","hashOfConfig":"161"},{"size":7848,"mtime":1623287890068,"results":"201","hashOfConfig":"161"},{"size":2181,"mtime":1623198507075,"results":"202","hashOfConfig":"161"},{"size":1569,"mtime":1628574290820,"results":"203","hashOfConfig":"161"},{"size":3834,"mtime":1623198506966,"results":"204","hashOfConfig":"161"},{"size":1356,"mtime":1628573909207,"results":"205","hashOfConfig":"161"},{"size":4358,"mtime":1623835586251,"results":"206","hashOfConfig":"161"},{"size":1121,"mtime":1623198507093,"results":"207","hashOfConfig":"161"},{"size":2346,"mtime":1628506351068,"results":"208","hashOfConfig":"161"},{"size":22194,"mtime":1628643548520,"results":"209","hashOfConfig":"161"},{"size":8099,"mtime":1628558996867,"results":"210","hashOfConfig":"161"},{"size":1275,"mtime":1628592776019,"results":"211","hashOfConfig":"161"},{"size":5221,"mtime":1628674059065,"results":"212","hashOfConfig":"161"},{"size":1910,"mtime":1628500864192,"results":"213","hashOfConfig":"161"},{"size":401,"mtime":1625628154746,"results":"214","hashOfConfig":"161"},{"size":8099,"mtime":1628558508471,"results":"215","hashOfConfig":"161"},{"size":1918,"mtime":1628503927656,"results":"216","hashOfConfig":"161"},{"size":40965,"mtime":1628640958081,"results":"217","hashOfConfig":"161"},{"size":2676,"mtime":1628503976176,"results":"218","hashOfConfig":"161"},{"size":6653,"mtime":1628503927656,"results":"219","hashOfConfig":"161"},{"size":401,"mtime":1628504220899,"results":"220","hashOfConfig":"161"},{"size":764,"mtime":1628504305297,"results":"221","hashOfConfig":"161"},{"size":1158,"mtime":1628504448953,"results":"222","hashOfConfig":"161"},{"size":3690,"mtime":1628592486247,"results":"223","hashOfConfig":"161"},{"size":2082,"mtime":1628583380457,"results":"224","hashOfConfig":"161"},{"size":2074,"mtime":1628556907887,"results":"225","hashOfConfig":"161"},{"size":4387,"mtime":1628652289046,"results":"226","hashOfConfig":"161"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},"1ai3dju",{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"229"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"229"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"229"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"229"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"229"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"229"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},"4k3ehh",{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"328"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"328"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"328"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"363"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"328"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"328"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"363"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"363"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"363"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"363"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"328"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"328"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"328"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"328"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"328"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"328"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"328"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"328"},"D:\\Project\\react\\src\\index.js",[],["473","474"],"D:\\Project\\react\\src\\Store\\Store.js",[],"D:\\Project\\react\\src\\App.js",[],"D:\\Project\\react\\src\\Login.js",["475","476","477"],"D:\\Project\\react\\src\\Home.js",["478"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport SideBarMenuMain from './Component/Menu/SideBarMenu/SideBarMenuMain';\r\nimport TabList from './Component/Menu/tabMenu/TabList';\r\nimport WindowFrame from './Program/WindowFrame';\r\n\r\nimport './Home.css';\r\nimport {getSessionCookie} from \"./Cookies\";\r\n// import {ExampleApp} from './Component/Popup/TestPopup'\r\n\r\nlet isSession = false;\r\n\r\nconst Home = (props) => {  \r\n  const session = getSessionCookie(\"session\");\r\n  const leftWindow = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n    return p.open === n.open;\r\n  });\r\n\r\n  const windowState = useSelector((e) => {\r\n    if(e.WINDOWFRAME_REDUCER === undefined) {\r\n      return null;\r\n    }else{\r\n      return e.WINDOWFRAME_REDUCER.windowState\r\n    }\r\n  }, (p, n) => {\r\n    return (p === null ? 0 : p.length) === (n === null ? 0 : n.length)\r\n  });\r\n\r\n  // const SideBarMenuState = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n  //   return JSON.stringify(p) === JSON.stringify(n);\r\n  // });\r\n\r\n  // const width = SideBarMenuState[0].width;\r\n\r\n  let width = 343; \r\n  if(leftWindow.open) width = 90;\r\n  // if (session === \"SUCCESS\")\r\n  // {\r\n    isSession = true;\r\n  // }\r\n  return (\r\n    \r\n    <React.Fragment>      \r\n      {isSession ?\r\n      <>\r\n        <div style={{display:'inline-block', height:'100%'}} >\r\n          <SideBarMenuMain />\r\n        </div>\r\n        \r\n        <div style={{display:'inline-block', paddingRight:'17px', transition:'all 0.2s ease-in-out', position:'absolute', left:width, right:0, height:'100%'}}>\r\n          <div style={{display:'flex', flexDirection:'column', height:'100vh'}}>\r\n            <div style={{height:80}}>\r\n              <TabList />\r\n            </div>\r\n            <div style={{flex:1, display:'flex'}}> \r\n              <div style={{float:'left', width:'100%', position:'relative', zIndex:0, overflow:'hidden'}}>\r\n                {windowState != null &&\r\n                  windowState.map(e => \r\n                    <WindowFrame key={e.programId} programId={e.programId} programNam={e.programNam}/>\r\n                  )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n      :\r\n        <div>LOGIN PLZZZ</div>\r\n      }\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;","D:\\Project\\react\\src\\Cookies.js",["479"],"import React from \"react\";\r\nimport * as Cookies from \"js-cookie\";\r\n\r\nexport const setSessionCookie = (key, value, expire) => {\r\n  console.log(key + \":\" + value);\r\n  Cookies.remove(key); // 원래 쿠키 삭제\r\n  Cookies.set(key, value, {expires : expire} ); // 키, 값,  만료일\r\n};\r\n\r\nexport const getSessionCookie = (key) => {\r\n  const sessionCookie = Cookies.get(key);\r\n\r\n  if (sessionCookie === undefined) {\r\n    return {};\r\n  } \r\n  else \r\n  {\r\n    console.log(\"sessionCookie : \" + sessionCookie)\r\n    return sessionCookie;\r\n  }\r\n};","D:\\Project\\react\\src\\Method\\Store.js",[],"D:\\Project\\react\\src\\Program\\WindowFrame.js",[],"D:\\Project\\react\\src\\Component\\Control\\ExplainInput.js",[],"D:\\Project\\react\\src\\Component\\Control\\Button.js",[],"D:\\Project\\react\\src\\db\\Mysql\\Mysql.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js",[],"D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabList.js",[],"D:\\Project\\react\\src\\db\\Mysql\\MysqlServer.js",[],"D:\\Project\\react\\src\\Method\\Comm.js",[],"D:\\Project\\react\\src\\Method\\Grid.js",[],"D:\\Project\\react\\src\\Program\\MES\\PgmTest.js",[],"D:\\Project\\react\\src\\JSON\\jsonControl.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\PgmTest2.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js",[],"D:\\Project\\react\\src\\Program\\MES\\Menu.js",["480","481"],"import React, { Component } from 'react';\r\nimport Grid from '../../Component/Grid/Grid';\r\nimport Layout from '../../Component/Layout/Layout';\r\n\r\nimport { gfc_initPgm, gfc_getAtt, gfc_getMultiLang } from '../../Method/Comm';\r\nimport { gfg_getGrid, gfg_appendRow, gfg_setValue, gfg_setSelectRow } from '../../Method/Grid';\r\nimport { gfo_getInput, gfo_getCombo, gfo_getDateTime, gfo_getNumber } from '../../Method/Component';\r\nimport { gfs_getStoreValue } from '../../Method/Store';\r\nimport { getCallSP_Mysql } from '../../db/Mysql/Mysql';\r\n\r\nimport { Number as columnNumber } from '../../Component/Grid/Column/Number';\r\nimport { Input as columnInput } from '../../Component/Grid/Column/Input';\r\nimport { DateTime as columnDateTime } from '../../Component/Grid/Column/DateTime';\r\nimport { Combobox as columnCombobox} from '../../Component/Grid/Column/Combobox';\r\n\r\nimport SearchDiv from '../../Component/Control/SearchDiv';\r\nimport DetailDiv from '../../Component/Control/DetailDiv';\r\n\r\nimport Input from '../../Component/Control/Input';\r\nimport Combobox from '../../Component/Control/Combobox';\r\nimport DateTime from '../../Component/Control/DateTime';\r\nimport Number from '../../Component/Control/Number';\r\n\r\nimport store from \"../../Store/Store.js\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        gfc_initPgm(props.pgm, props.nam, this);\r\n    }\r\n    Retrieve = () => {\r\n        const menu_id = gfo_getInput(this.props.pgm, 'search_menu_id').getValue();\r\n        const menu_nam = gfo_getInput(this.props.pgm, 'search_menu_nam').getValue();\r\n        const menu_use = gfo_getCombo(this.props.pgm, 'search_menu_use').getValue();                \r\n\r\n        getCallSP_Mysql(\r\n            [{SP        : 'SP_MENU_ED050',\r\n              ROWSTATUS : 'R',\r\n              COP_CD    : '10', \r\n              MENU_ID   : menu_id,\r\n              MENU_NAM  : menu_nam,\r\n              USE_YN    : menu_use,\r\n              MENU_LEVEL  : 0,\r\n              MENU_GRP_YN : '0',\r\n              UP_MENU_ID  : '',\r\n              PGM_ID      : '',\r\n              MENU_SEQ    : 0,\r\n              RETAUT_YN : '',\r\n              INSAUT_YN : '',\r\n              SAVAUT_YN : '',\r\n              DELAUT_YN : '',\r\n              PRNAUT_YN : '',\r\n              EXEAUT_YN : '',\r\n              APPAUT_YN : '',\r\n              XLSAUT_YN : '',\r\n              ETCAUT_YN : '',\r\n              UPDCHR_NO : '',\r\n            }]\r\n        ).then(\r\n            e=>{\r\n                const MSG_CODE = e.data.MSG_CODE;\r\n                const MSG_TEXT = e.data.MSG_TEXT;\r\n                if (e.data.result){\r\n                    const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n                    grid.resetData(e.data.data);\r\n                    gfg_setSelectRow(grid);\r\n                  }\r\n                  else{\r\n                  }                  \r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n            }\r\n        )\r\n    }\r\n\r\n    Insert = () => {\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        gfg_appendRow(grid, grid.getRowCount(), {}, 'MENU_NAM')\r\n    }\r\n    Save = () => {\r\n\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        getCallSP_Mysql(\r\n            [],\r\n            [{grid,\r\n              SP          : 'SP_MENU_ED050',\r\n              COP_CD    : '10',              \r\n              MENU_ID     : 'VARCHAR',\r\n              MENU_NAM    : 'VARCHAR',\r\n              USE_YN      : 'VARCHAR',\r\n              MENU_LEVEL  : 'DECIMAL',\r\n              MENU_GRP_YN : 'VARCHAR',\r\n              UP_MENU_ID  : 'VARCHAR',\r\n              PGM_ID      : 'VARCHAR',\r\n              MENU_SEQ    : 'INT',\r\n              RETAUT_YN : 'VARCHAR',\r\n              INSAUT_YN : 'VARCHAR',\r\n              SAVAUT_YN : 'VARCHAR',\r\n              DELAUT_YN : 'VARCHAR',\r\n              PRNAUT_YN : 'VARCHAR',\r\n              EXEAUT_YN : 'VARCHAR',\r\n              APPAUT_YN : 'VARCHAR',\r\n              XLSAUT_YN : 'VARCHAR',\r\n              ETCAUT_YN : 'VARCHAR',\r\n              UPDCHR_NO : 'VARCHAR'\r\n            }],\r\n            [{\r\n                UPDCHR_NO : gfs_getStoreValue('USER_REDUCER', 'USER_ID') //gfs_getStoreValue\r\n            }]\r\n        ).then(\r\n            e=>{\r\n                const MSG_CODE = e.data.MSG_CODE;\r\n                const MSG_TEXT = e.data.MSG_TEXT;\r\n                if (e.data.result){\r\n                    grid.resetOriginData()\r\n                    grid.restore();\r\n                  }\r\n                  else{\r\n                    const COL_NAM = e.data.COL_NAM;\r\n                    const ROW_KEY = e.data.ROW_KEY;\r\n          \r\n                    gfg_setSelectRow(grid, COL_NAM, ROW_KEY);\r\n                  }                  \r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n            }\r\n        )\r\n    }\r\n    Delete = () => {\r\n        const grid = gfg_getGrid(this.props.pgm, 'main50');\r\n        getCallSP_Mysql(\r\n            [],\r\n            [{grid,\r\n              SP          : 'SP_MENU_ED050',\r\n              COP_CD    : '10',              \r\n              MENU_ID     : 'VARCHAR',\r\n              MENU_NAM    : 'VARCHAR',\r\n              USE_YN      : 'VARCHAR',\r\n              MENU_LEVEL  : 'DECIMAL',\r\n              MENU_GRP_YN : 'VARCHAR',\r\n              UP_MENU_ID  : 'VARCHAR',\r\n              PGM_ID      : 'VARCHAR',\r\n              MENU_SEQ    : 'INT',\r\n              RETAUT_YN : 'VARCHAR',\r\n              INSAUT_YN : 'VARCHAR',\r\n              SAVAUT_YN : 'VARCHAR',\r\n              DELAUT_YN : 'VARCHAR',\r\n              PRNAUT_YN : 'VARCHAR',\r\n              EXEAUT_YN : 'VARCHAR',\r\n              APPAUT_YN : 'VARCHAR',\r\n              XLSAUT_YN : 'VARCHAR',\r\n              ETCAUT_YN : 'VARCHAR',\r\n              UPDCHR_NO : 'VARCHAR'\r\n            }],\r\n            [{\r\n                UPDCHR_NO : gfs_getStoreValue('USER_REDUCER', 'USER_ID') //gfs_getStoreValue\r\n            }],\r\n            true\r\n        ).then(\r\n            e => {\r\n              const MSG_CODE = e.data.MSG_CODE;\r\n              const MSG_TEXT = e.data.MSG_TEXT;\r\n              const ROW_KEY = e.data.ROW_KEY;\r\n      \r\n              if(e.data.result){\r\n                grid.removeRow(ROW_KEY);\r\n                grid.resetOriginData();\r\n                grid.restore();\r\n                gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n              }else{\r\n                if (MSG_CODE === 'PHANTOM'){\r\n      \r\n                }else{\r\n                  gfc_getMultiLang(MSG_CODE, MSG_TEXT);\r\n                }\r\n              }\r\n            }\r\n          )\r\n    }\r\n\r\n    onSelectChange = (e) => {\r\n        if(e === null) return;\r\n        gfo_getNumber(this.props.pgm, 'detail_menu_seq').setValue(e.MENU_SEQ);\r\n        gfo_getInput(this.props.pgm, 'detail_menu_comment').setValue(e.BIGO);\r\n        gfo_getInput(this.props.pgm, 'detail_crt_no').setValue(e.CRTCHR_NO);\r\n        gfo_getDateTime(this.props.pgm, 'detail_crt_dt').setValue(e.CRT_DT);\r\n        gfo_getInput(this.props.pgm, 'detail_up_no').setValue(e.UPDCHR_NO);\r\n        gfo_getDateTime(this.props.pgm, 'detail_up_dt').setValue(e.UPD_DT);        \r\n      }\r\n    \r\n      afterChange = (e) => {\r\n      }\r\n\r\n    render(){\r\n        return (\r\n        <Layout split   ='horizontal'\r\n                minSize     ={[54]}\r\n                defaultSize ={54}\r\n                // resizerStyle='none'\r\n                >\r\n        <SearchDiv>\r\n            <Input pgm={this.props.pgm}\r\n                    id='search_menu_id'\r\n                    label={gfc_getAtt('메뉴 ID')}\r\n            >\r\n            </Input>\r\n            <Input pgm={this.props.pgm}\r\n                    id='search_menu_nam'\r\n                    label={gfc_getAtt('메뉴 이름')}>\r\n            </Input>\r\n\r\n            <Combobox pgm={this.props.pgm}\r\n                        id='search_menu_use'\r\n                        location= 'Common/Common.js'\r\n                        fn      = 'use_yn'\r\n                        value   = 'USE_YN'\r\n                        display = 'YN_STR'\r\n                        field   = {[]}\r\n                        param   = {[]}\r\n                        width   = {500}\r\n                        >\r\n            </Combobox>            \r\n        </SearchDiv>\r\n\r\n            <Layout primary     = 'second'\r\n                    split       ='vertical'\r\n                    defaultSize = {'0%'}\r\n                    direction   = 'left'\r\n            >\r\n                <Grid pgm={this.props.pgm}\r\n                  id='main50'\r\n                  selectionChange={(e) => this.onSelectChange(e)}\r\n                  afterChange={(e) => this.afterChange(e)}\r\n                  columns = {[\r\n                                columnInput({name    : 'MENU_ID', \r\n                                            header  : gfc_getAtt('메뉴ID'), \r\n                                            width   : 120, \r\n                                            readOnly: false\r\n                                        }),\r\n                                columnInput({name    : 'MENU_NAM', \r\n                                            header  : gfc_getAtt('메뉴명'), \r\n                                            width   : 120, \r\n                                            readOnly: false\r\n                                        }),\r\n                                columnCombobox({name: 'USE_YN', \r\n                                                header: gfc_getAtt('사용여부'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),\r\n                                columnNumber({name : 'MENU_LEVEL',\r\n                                              header: gfc_getAtt('메뉴단계'),\r\n                                              readOnly : false,\r\n                                            }),\r\n                                columnCombobox({name: 'RETAUT_YN', \r\n                                                header: gfc_getAtt('조회권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'INSAUT_YN', \r\n                                                header: gfc_getAtt('등록권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),\r\n                                columnCombobox({name: 'SAVAUT_YN', \r\n                                                header: gfc_getAtt('저장권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),       \r\n                                columnCombobox({name: 'DELAUT_YN', \r\n                                                header: gfc_getAtt('삭제권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'PRNAUT_YN', \r\n                                                header: gfc_getAtt('출력권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'EXEAUT_YN', \r\n                                                header: gfc_getAtt('실행권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'APPAUT_YN', \r\n                                                header: gfc_getAtt('결재권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'XLSAUT_YN', \r\n                                                header: gfc_getAtt('엑셀권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnCombobox({name: 'ETCAUT_YN', \r\n                                                header: gfc_getAtt('기타권한'),\r\n                                                readOnly: false,\r\n                                                width   : 150,\r\n                                                editor: {\r\n                                                    location: 'Common/Common.js',\r\n                                                    fn      : 'use_yn',\r\n                                                    value   : 'USE_YN',\r\n                                                    display : 'YN_STR',\r\n                                                    field   : [],\r\n                                                    param   : {},\r\n                                                    emptyRow: true,\r\n                                                    }\r\n                                                }),   \r\n                                columnNumber({name : 'MENU_SEQ',\r\n                                              header: gfc_getAtt('메뉴 SEQ'),\r\n                                              width : 0,\r\n                                              readOnly : true,                                              \r\n                                              }),\r\n                                columnInput({name  : 'BIGO', \r\n                                             header: gfc_getAtt('코멘트'), \r\n                                             width : 0,\r\n                                             readOnly: true\r\n                                             }),\r\n                                columnInput({name  : 'CRTCHR_NO', \r\n                                             header: gfc_getAtt('생성자'), \r\n                                             width : 0,\r\n                                             readOnly: true,\r\n                                             align   : 'center'\r\n                                            }),\r\n                                \r\n                                columnDateTime({name  : 'CRT_DT',\r\n                                                header: gfc_getAtt('생성일자'),\r\n                                                width : 0,\r\n                                                format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                                                time  : 'HH:mm',\r\n                                                editor: { \r\n                                                 timepicker: true\r\n                                                }\r\n                                              }),\r\n                                \r\n                                columnInput({name  : 'UPDCHR_NO', \r\n                                             header: gfc_getAtt('수정자'), \r\n                                             width : 0,\r\n                                             readOnly: true\r\n                                            }),\r\n  \r\n                                columnDateTime({name  : 'UPD_DT',\r\n                                                header: gfc_getAtt('수정일시'),\r\n                                                width : 0,\r\n                                                format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                                                time  : 'HH:mm',\r\n                                                readOnly: true\r\n                                              })\r\n                        \r\n                  ]}>\r\n\r\n                </Grid>\r\n                <DetailDiv title={gfc_getAtt('상세정보')}>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('메뉴 SEQ')}</th>\r\n                        <td>\r\n                            <Number pgm={this.props.pgm}\r\n                                    id='detail_menu_seq'>\r\n                            </Number>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('비고')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_menu_comment'>\r\n                            </Input>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('생성자')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_crt_no'\r\n                                    readOnly={true}>\r\n                            </Input>\r\n                        </td>\r\n                        <th>{gfc_getAtt('생성일')}</th>\r\n                        <td>\r\n                            <DateTime pgm={this.props.pgm}\r\n                                        id='detail_crt_dt'\r\n                                        format= {`${gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT')} HH:mm`}\r\n                                        readOnly={true}>\r\n                            </DateTime>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>{gfc_getAtt('갱신자')}</th>\r\n                        <td>\r\n                        <Input pgm={this.props.pgm}\r\n                                    id='detail_up_no'\r\n                                    readOnly={true}>\r\n                            </Input>\r\n                        </td>\r\n                        <th>{gfc_getAtt('갱신일')}</th>\r\n                        <td>\r\n                            <DateTime pgm={this.props.pgm}\r\n                                        id='detail_up_dt'\r\n                                        format= {`${gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT')} HH:mm`}\r\n                                        readOnly={true}>                                            \r\n                            </DateTime>\r\n                        </td>\r\n                    </tr>\r\n                </DetailDiv>\r\n\r\n            </Layout>\r\n        </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js",[],"D:\\Project\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js",[],"D:\\Project\\react\\src\\Component\\Control\\DetailDiv.js",[],"D:\\Project\\react\\src\\Component\\Control\\SearchDiv.js",[],"D:\\Project\\react\\src\\Method\\Popup.js",[],"D:\\Project\\react\\src\\Method\\Component.js",[],"D:\\Project\\react\\src\\Component\\Control\\Input.js",[],"D:\\Project\\react\\src\\Component\\Control\\Combobox.js",[],"D:\\Project\\react\\src\\Component\\Control\\DateTime.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart1.js",[],"D:\\Project\\react\\src\\Component\\Control\\Number.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart2.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart3.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js",[],"D:\\Project\\react\\src\\Program\\MES\\Chart\\Chart4.js",["482","483"],"import React, { useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as echarts from 'echarts';\r\n\r\nlet myChart;\r\n\r\nconst Chart4 = (props) => {\r\n  const chartDiv = useRef(null);\r\n  \r\n  const data = useSelector((e) => e.PGMTEST2_REDUCER.data4Org);\r\n\r\n  const dateList = data.map(function (item) {\r\n      return item.OTIME;\r\n  });\r\n  const valueList = data.map(function (item) {\r\n      return item.VALUE;\r\n  });\r\n\r\n  const option = {\r\n    xAxis: {\r\n        type: 'category',\r\n        boundaryGap: false\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        boundaryGap: [0, '30%']\r\n    },\r\n    visualMap: {\r\n        type: 'piecewise',\r\n        show: false,\r\n        dimension: 0,\r\n        seriesIndex: 0,\r\n        pieces: [{\r\n            gt: 1,\r\n            lt: 3,\r\n            color: 'rgba(0, 0, 180, 0.4)'\r\n        }, {\r\n            gt: 5,\r\n            lt: 7,\r\n            color: 'rgba(255, 0, 0)'\r\n        }]\r\n    },\r\n    series: [\r\n        {\r\n            type: 'line',\r\n            smooth: 0.6,\r\n            symbol: 'none',\r\n            lineStyle: {\r\n                color: '#5470C6',\r\n                width: 5\r\n            },\r\n            markLine: {\r\n                symbol: ['none', 'none'],\r\n                label: {show: false},\r\n                data: [\r\n                    {xAxis: 1},\r\n                    {xAxis: 3},\r\n                    {xAxis: 5},\r\n                    {xAxis: 7}\r\n                ]\r\n            },\r\n            areaStyle: {},\r\n            data: [\r\n                ['2019-10-10', 200],\r\n                ['2019-10-11', 560],\r\n                ['2019-10-12', 750],\r\n                ['2019-10-13', 580],\r\n                ['2019-10-14', 250],\r\n                ['2019-10-15', 300],\r\n                ['2019-10-16', 450],\r\n                ['2019-10-17', 300],\r\n                ['2019-10-18', 100]\r\n            ]\r\n        }\r\n    ]\r\n  };\r\n\r\n\r\n  if(myChart === undefined && chartDiv.current !== null){\r\n     myChart = echarts.init(chartDiv.current);\r\n  }\r\n\r\n  if(option && myChart) myChart.setOption(option);\r\n\r\n  return(\r\n    <div ref={chartDiv} style={{float:'left', width:'50%', height:'100%'}} ></div>\r\n  );\r\n}\r\n\r\nexport default Chart4;","D:\\Project\\react\\src\\Component\\Grid\\Column\\Number.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\Input.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Grid.js",[],"D:\\Project\\react\\src\\Component\\Layout\\Layout.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\DateTime.js",[],"D:\\Project\\react\\src\\Component\\Grid\\Column\\Combobox.js",[],"D:\\Project\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js",[],"D:\\Project\\react\\src\\Component\\Popup\\PopupFrame.js",["484"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport { jsonMaxValue } from '../../JSON/jsonControl';\r\nimport { Rnd } from 'react-rnd';\r\nimport ReactDOM from 'react-dom';\r\nimport { gfs_PGM_REDUCER, gfs_dispatch, gfs_getStoreValue } from '../../Method/Store';\r\n\r\nclass PopupFrame extends Component {\r\n  popupOpenYn = null;\r\n  parentNode = null;\r\n  rootId = 0;\r\n\r\n  zIndex = 0;\r\n  state = {\r\n    width  : this.props.width,\r\n    height : this.props.height,\r\n    child  : undefined,\r\n    pgm    : '',\r\n    nam    : ''\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.rootId = this.props.rootId;\r\n\r\n    this.zIndex = jsonMaxValue(gfs_getStoreValue('WINDOWFRAME_REDUCER', 'windowState'), 'windowZindex');\r\n\r\n    this.popupOpenYn = document.querySelector('[id^=\"POPUP_OWNER\"]');\r\n    \r\n    var bg = document.createElement('div');\r\n    bg.id = 'POPUP_OWNER_' + props.parent.props.pgm + '_' + this.rootId;\r\n    bg.style = `position: fixed;\r\n                z-index: ${this.zIndex};\r\n                left: 0px;\r\n                top: 0px;\r\n                width: 100%;\r\n                height: 100%;\r\n                overflow: auto;\r\n                background: rgba(0,0,0,0.4)`;\r\n    if(this.popupOpenYn === null){\r\n      document.body.append(bg);\r\n    }else{\r\n      this.parentNode = ReactDOM.findDOMNode(this.props.parent);\r\n      this.parentNode.append(bg);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    const pgm = this.state.pgm + this.props.rootId;\r\n    const rtnValue = gfs_getStoreValue(pgm);\r\n\r\n    // gfs_dispatch('WINDOWFRAME_REDUCER', 'CLOSEWINDOW', \r\n    //   ({\r\n    //     activeWindow: {programId: pgm\r\n    //                   }\r\n    //   })\r\n    // );\r\n\r\n    this.props.callback(rtnValue);\r\n  }\r\n\r\n  componentDidMount(){  \r\n    const popup = import(`../../Program/POPUP/${this.props.src}`);\r\n    popup.then(\r\n      e => {\r\n        //지금 팝업은 메뉴도 없고,\r\n        // 다국어 테이블도 없고해서 그냥 하드코딩한다.\r\n        // 차후에 결정되면 메뉴등록해서 nam가져올지 다국어에서 nam가져올지 결정\r\n        const pgm = e.default.name + this.props.rootId;\r\n        const nam = e.default.name;\r\n        gfs_PGM_REDUCER(pgm);\r\n\r\n        this.setState({pgm: e.default.name, nam: nam});\r\n\r\n        this.setState({\r\n          child: \r\n          <div className='win_body'>\r\n            <e.default pgm={pgm} nam={nam}/>\r\n          </div>\r\n        });\r\n      }\r\n    )\r\n  }\r\n  \r\n  render() {\r\n\r\n    return(     \r\n      <Rnd size={{\r\n        width: this.state.width,\r\n        height:this.state.height\r\n      }}\r\n      dragHandleClassName='win_header'\r\n      // bounds='parent'\r\n      style={{\r\n        zIndex: this.zIndex + 1\r\n      }}\r\n      onResizeStop= {(e, dir, ref, delta, position) => this.setState({width: this.state.width < delta.width ? this.state.width - delta.width : this.state.width + delta.width,\r\n                                                                      height: this.state.height < delta.height ? this.state.height - delta.height : this.state.height + delta.height})}\r\n      >\r\n        <div style={{width:'100%'}} \r\n             className='content'\r\n             >\r\n        \r\n          <div className='win_header' style={{cursor:'move'}}>\r\n            <h4>[{this.state.pgm}] {this.state.nam}</h4>\r\n            \r\n            <div className='win_controller'>\r\n\r\n              <button type='button' className='close' \r\n                      onClick={() => {\r\n                        ReactDOM.unmountComponentAtNode(document.getElementById('POPUP_' + this.props.parent.props.pgm + '_' + this.rootId));\r\n\r\n                        if(this.parentNode === null){\r\n                          document.body.removeChild(document.getElementById('POPUP_OWNER_' + this.props.parent.props.pgm + '_' + this.rootId));\r\n                        }else{\r\n                          this.parentNode.removeChild(document.getElementById('POPUP_OWNER_' + this.props.parent.props.pgm + '_' + this.rootId));\r\n                        }\r\n                      }}\r\n                      onMouseDown={e => e.stopPropagation()} >\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {this.state.child}\r\n        </div>\r\n      </Rnd>    \r\n    );\r\n  }\r\n}\r\n\r\nPopupFrame.propTypes = {\r\n\r\n};\r\n\r\nPopupFrame.defaultProps = {\r\n\r\n};\r\n\r\nexport default PopupFrame;","D:\\Project\\react\\src\\Program\\POPUP\\PopupTest.js",["485"],"import React from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport Layout from '../../Component/Layout/Layout';\r\nimport SearchDiv from '../../Component/Control/SearchDiv';\r\nimport Input from '../../Component/Control/Input';\r\nimport { gfc_getAtt } from '../../Method/Comm';\r\nimport { gfp_openPopup } from '../../Method/Popup';\r\n\r\nclass PopupTest extends Component {\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  // }\r\n  \r\n  render() {\r\n\r\n    return(        \r\n      <Layout split       ='horizontal'\r\n              minSize     ={[54]}\r\n              defaultSize ={54}\r\n              resizerStyle='none' \r\n      >\r\n        <SearchDiv>\r\n            <Input pgm={this.props.pgm}\r\n                   id='search_user_nam'\r\n                   label={gfc_getAtt('사용자명')} />\r\n            <Input pgm={this.props.pgm}\r\n                   id='search_user_id'\r\n                   label={gfc_getAtt('사용자ID')} />\r\n                   \r\n        </SearchDiv>\r\n        <div>HIHI</div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nPopupTest.propTypes = {\r\n\r\n};\r\n\r\nPopupTest.defaultProps = {\r\n\r\n};\r\n\r\nexport default PopupTest;","D:\\Project\\01.YK\\react\\src\\index.js",[],["486","487"],"D:\\Project\\01.YK\\react\\src\\Store\\Store.js",[],"D:\\Project\\01.YK\\react\\src\\App.js",[],"D:\\Project\\01.YK\\react\\src\\Home.js",["488"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport SideBarMenuMain from './Component/Menu/SideBarMenu/SideBarMenuMain';\r\nimport TabList from './Component/Menu/tabMenu/TabList';\r\nimport WindowFrame from './Program/WindowFrame';\r\n\r\nimport './Home.css';\r\nimport { getSessionCookie } from \"./Cookies\";\r\nimport { gfs_injectAsyncReducer, gfs_WINDOWFRAME_REDUCER } from './Method/Store';\r\n\r\nimport GifPlayer from 'react-gif-player';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nlet isSession = false;\r\n\r\nconst defaultData = async() => {\r\n  const userReducer = (nowState, action) => {\r\n    if(action.reducer !== 'USER_REDUCER') {\r\n      return {\r\n        COP_CD    : nowState === undefined ? ''           : nowState.COP_CD,\r\n        USER_ID   : nowState === undefined ? 'KKH'        : nowState.USER_ID,\r\n        USER_NAM  : nowState === undefined ? '김경현'      : nowState.USER_NAM,\r\n        LANGUAGE  : nowState === undefined ? 'KOR'        : nowState.LANGUAGE,\r\n        YMD_FORMAT: nowState === undefined ? 'yyyy-MM-DD' : nowState.YMD_FORMAT,\r\n        // YMD_FORMAT: nowState === undefined ? 'MM-DD-yyyy' : nowState.YMD_FORMAT,\r\n        YM_FORMAT : nowState === undefined ? 'yyyy-MM'    : nowState.YM_FORMAT,\r\n        NUM_FORMAT: nowState === undefined ? '0,0'        : nowState.NUM_FORMAT,\r\n        NUM_ROUND : nowState === undefined ? '2R'         : nowState.NUM_ROUND\r\n      };\r\n    }\r\n\r\n    if(action.type === 'USERID_FOCUS'){\r\n      return Object.assign({}, nowState, {\r\n        userIdFocus  : action.userIdFocus\r\n      });\r\n    }else if(action.type === 'PWD_FOCUS'){\r\n      return Object.assign({}, nowState, {\r\n        pwdFocus  : action.pwdFocus\r\n      });\r\n    }else if(action.type === 'USERID_CHANGE'){\r\n      return Object.assign({}, nowState, {\r\n        userIdText   : action.userIdText\r\n      });\r\n    }else if(action.type === 'PWD_CHANGE'){\r\n      return Object.assign({}, nowState, {\r\n        pwdText   : action.pwdText\r\n      });\r\n    }\r\n  };\r\n\r\n  gfs_injectAsyncReducer('USER_REDUCER', userReducer);\r\n}\r\n\r\nconst Home = (props) => {  \r\n  useEffect(e => {\r\n    const MASK_REDUCER = (nowState, action) => {\r\n      if(action.reducer !== 'MASK_REDUCER') {\r\n        return {\r\n          MASK : nowState === undefined ? false : nowState.MASK\r\n        };\r\n      }\r\n      \r\n      if(action.type === 'MASK'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MASK : action.MASK\r\n        })\r\n      }\r\n    }\r\n\r\n    gfs_injectAsyncReducer('MASK_REDUCER', MASK_REDUCER);\r\n\r\n    //#region 윈도우 리듀서 생성\r\n    gfs_WINDOWFRAME_REDUCER();\r\n    //#endregion\r\n\r\n    defaultData();\r\n  }, [])\r\n\r\n  const session = getSessionCookie(\"session\");\r\n  const leftWindow = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n    return p.open === n.open;\r\n  });\r\n\r\n  const MASK = useSelector((e) => {\r\n    if(e.MASK_REDUCER !== undefined){\r\n      return e.MASK_REDUCER.MASK;\r\n    }else{\r\n      return false;\r\n    }\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const windowState = useSelector((e) => {\r\n    if(e.WINDOWFRAME_REDUCER === undefined) {\r\n      return null;\r\n    }else{\r\n      return e.WINDOWFRAME_REDUCER.windowState\r\n    }\r\n  }, (p, n) => {\r\n    return (p === null ? 0 : p.length) === (n === null ? 0 : n.length)\r\n  });\r\n\r\n  // const SideBarMenuState = useSelector((e) => e.SIDEBARMENU_REDUCER.State, (p, n) => {\r\n  //   return JSON.stringify(p) === JSON.stringify(n);\r\n  // });\r\n\r\n  // const width = SideBarMenuState[0].width;\r\n\r\n  let width = 343; \r\n  if(leftWindow.open) width = 90;\r\n  // if (session === \"SUCCESS\")\r\n  // {\r\n    isSession = true;\r\n  // }\r\n  return (\r\n    \r\n    <LoadingOverlay\r\n      active={MASK}\r\n      spinner={<GifPlayer height='100' width='100' gif={require('../src/Image/waitImage.gif').default} autoplay={MASK ? true : false}/>}\r\n      styles={{\r\n        overlay: (base) => ({\r\n          ...base,\r\n          background: 'transparent'\r\n        })\r\n      }}\r\n    >\r\n      <React.Fragment>      \r\n        {isSession ?\r\n        <>\r\n\r\n          <div style={{display:'inline-block', height:'100%'}} >\r\n            <SideBarMenuMain />\r\n          </div>\r\n          \r\n          <div style={{display:'inline-block', paddingRight:'17px', transition:'all 0.2s ease-in-out', position:'absolute', left:width, right:0, height:'100%'}}>\r\n            <div style={{display:'flex', flexDirection:'column', height:'100vh'}}>\r\n              <div style={{height:80}}>\r\n                <TabList />\r\n              </div>\r\n              <div style={{flex:1, display:'flex'}}> \r\n                <div style={{float:'left', width:'100%', position:'relative', zIndex:0, overflow:'hidden'}}>\r\n                  {windowState != null &&\r\n                    windowState.map(e => \r\n                      <WindowFrame key={e.programId} programId={e.programId} programNam={e.programNam}/>\r\n                    )\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n        :\r\n          <div>LOGIN PLZZZ</div>\r\n        }\r\n        \r\n      </React.Fragment>\r\n    </LoadingOverlay>\r\n  );\r\n};\r\n\r\nexport default Home;","D:\\Project\\01.YK\\react\\src\\Login.js",["489","490","491"],"import React from 'react';\r\n\r\nimport Input from './Component/Control/Input';\r\nimport { gfo_getInput } from './Method/Component';\r\nimport { getDynamicSql_Mysql } from './db/Mysql/Mysql';\r\nimport { setSessionCookie, getSessionCookie} from './Cookies';\r\nimport { gfs_PGM_REDUCER, gfs_getStoreValue, gfs_dispatch } from './Method/Store';\r\nimport './login.css';\r\n\r\n\r\ngfs_PGM_REDUCER('login');\r\n\r\nconst onClick = async(e, user_id, pass_cd) => {\r\n\r\n  let result = await getDynamicSql_Mysql(\r\n    'Common/Common',\r\n    'login',\r\n    [{user_id,\r\n      pass_cd}]\r\n  ); \r\n\r\n  if(result.data.result){\r\n    if(result.data.data.length === 0){\r\n      alert('로그인 정보가 잘못되었습니다.');\r\n    }else{\r\n\r\n      gfo_getInput('login', 'id').setValue('');\r\n      gfo_getInput('login', 'pwd').setValue('');\r\n\r\n      const width = window.screen.availWidth;\r\n      const height = window.screen.availHeight;\r\n\r\n      const winProperties = 'fullscreen=yes, location=no, toolbar=no, menubar=no, resizable=yes, scrollbars=no, addressbar=no, width=' + (width) + ',height=' + (height);\r\n\r\n      e.preventDefault(); \r\n      setSessionCookie('session', 'SUCCESS', 1/1440);   \r\n      let win = window.open('Home', 'DK', winProperties);\r\n      win.moveTo(0, 0);\r\n    }\r\n  }else{\r\n    alert('로그인에 실패했습니다.')\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  \r\n  return (\r\n    <div className='login_box'>\r\n\t\t  <h2><img src={require('../src/Image/yk_07@2x.png').default} width='358' height='47' alt='와이케이스틸 로고' /></h2>\r\n\r\n      \r\n      <div className='input_box'>\r\n        <div className='input_line'>\r\n          <label>ID</label>\r\n          <Input pgm='login' id='id' type='text' />\r\n        </div>\r\n        <div className='input_line'>\r\n          <label>PASSWORD</label>\r\n          <Input pgm='login' id='pwd' type='password' />\r\n        </div>\r\n        <button type='button' onClick={e => {\r\n          const id  = gfo_getInput('login', 'id').getValue();\r\n          const pwd = gfo_getInput('login', 'pwd').getValue();\r\n\r\n          onClick(e, id, pwd);\r\n        }}>로그인</button>\r\n\t\t  </div>\r\n    </div>\r\n    // <div>\r\n    //   <h1>Login</h1>\r\n    //   <div>\r\n    //     <form>\r\n    //         <ExplainInput placeholder='사용자ID' \r\n    //                       width='240px'\r\n    //                       height='35px'\r\n    //                       marginBottom='5px'\r\n    //                       parentBorder={userIdParentBorder} \r\n    //                       smallVisible={userIdspanVisible}\r\n    //                       location={userIdinputTop}\r\n    //                       onFocus={props.onUserIdFocus}\r\n    //                       onBlur={props.onUserIdBlur}\r\n    //                       onChange={props.onUserIdChange} />\r\n            \r\n    //         <ExplainInput placeholder='비밀번호' \r\n    //                       width='240px'\r\n    //                       height='35px'\r\n    //                       marginBottom='20px'\r\n    //                       parentBorder={pwdParentBorder} \r\n    //                       smallVisible={pwdspanVisible}\r\n    //                       location={pwdinputTop}\r\n    //                       onFocus={props.onPwdFocus}\r\n    //                       onBlur={props.onPwdBlur}  \r\n    //                       onChange={props.onPwdChange}\r\n    //                       type='password'/>\r\n\r\n    //       <div style={{textAlign:'center'}}>\r\n            \r\n    //       <Button value='로그인'\r\n    //               color='white'\r\n    //               disabled={btnDisabled}\r\n    //               backgroundColor={btnBackGround}\r\n    //               height='30px'\r\n    //               width='240px'\r\n    //               borderWidth='0px'\r\n    //               borderRadius='3px'\r\n    //               outline='0px' \r\n    //               onClick={e => onClick(e, userIdText, pwdText)}/>\r\n    //       </div>\r\n    //     </form>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Login;","D:\\Project\\01.YK\\react\\src\\Cookies.js",["492"],"D:\\Project\\01.YK\\react\\src\\Program\\WindowFrame.js",[],"D:\\Project\\01.YK\\react\\src\\WebReq\\WebReq.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Store.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Component.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\Input.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabList.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuMain.js",[],"D:\\Project\\01.YK\\react\\src\\db\\Mysql\\Mysql.js",[],"D:\\Project\\01.YK\\react\\src\\db\\Mysql\\MysqlServer.js",[],"D:\\Project\\01.YK\\react\\src\\JSON\\jsonControl.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\MES\\PgmTest.js",[],["493","494"],"D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\PgmTest2.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\MES\\Menu.js",["495","496"],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\tabMenu\\TabListItem.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Comm.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainView.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainList.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMenuTitle.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Grid.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\Combobox.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Image.js",["497"],"import { gfg_getRow } from '../../../Method/Grid';\r\nimport ReactDOM from 'react-dom';\r\n/**\r\n * name : 컬럼명\r\n * \r\n * header : 헤더명\r\n * \r\n * width(100) : Width\r\n * \r\n * onRender: {(value, el, rows)}\r\n * \r\n * resizable(true) : 컬럼넓이 조정여부\r\n * \r\n * imgItem: {}\r\n */\r\nexport const Image = (props) => {\r\n  const name      = props.name;\r\n  const header    = props.header;\r\n  const width     = props.width !== undefined ? props.width : 100;\r\n  const resizable = props.resizable !== undefined ? props.resizable : true;\r\n  const readOnly  = true;\r\n  const align     = props.align !== undefined ? props.align : 'center';\r\n  const valign    = props.valign !== undefined ? props.valign : 'middle';\r\n  const imgItem   = props.imgItem;\r\n\r\n  const rtn = {name,\r\n               header,\r\n               width,\r\n               resizable,\r\n               imgItem\r\n              }\r\n  \r\n  rtn.renderer = {\r\n    type   : ImageRenderer,\r\n    options: {\r\n      align : align,\r\n      valign: valign,\r\n      onRender: props.onRender,\r\n      readOnly,\r\n      imgItem\r\n    }\r\n  }\r\n\r\n  return rtn;\r\n}\r\n\r\nclass ImageRenderer {\r\n  constructor(props) {\r\n    const el = document.createElement('div');\r\n\r\n    this.el = el;\r\n    this.render(props);\r\n  }\r\n\r\n  getElement() {\r\n    return this.el;\r\n  }\r\n\r\n  render(props) {\r\n    const grid = props.grid;\r\n    const rowKey = props.rowKey;\r\n    const height = grid.store.rowCoords.heights[rowKey];\r\n\r\n    const option = props.columnInfo.renderer.options;\r\n    const imgItem = option.imgItem;\r\n\r\n    let value = String((props.value === null || props.value === undefined) ? '' : props.value);   \r\n    const viewImg = imgItem.filter(e => e.code === value);\r\n\r\n    if(viewImg.length > 0) ReactDOM.render(viewImg[0].value, this.el);\r\n\r\n    this.el.setAttribute('style', `height: ${height - 1}px; \r\n                                   width:100%; \r\n                                   display:flex;justify-content:center;align-items:center;\r\n                                   border: 0px; \r\n                                   background-color:white;\r\n                                   text-align:${option['align']}; \r\n                                   vertical-align:${option['valign']}; \r\n                                   `)\r\n\r\n\r\n    // this.el.setAttribute('style', `height: 27px; \r\n    //                                width:calc(100% - 5px); \r\n    //                                background-color:white;\r\n    //                                padding: 0px 5px 0px 5px;\r\n    //                                border: 0px; \r\n    //                               `)\r\n    // this.el.value = value\r\n  }\r\n}","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Input.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Combobox.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Grid.js",["498","499","500","501"],"//#region Import\r\nimport './CSS/Grid.css';\r\n// import './CSS/Date.css';\r\n// import './CSS/Time.css';\r\n// import 'tui-grid/dist/tui-grid.css';\r\nimport Draggable from 'react-draggable';\r\n\r\n// import Grid from 'tui-grid';\r\nimport Grid from '@toast-ui/react-grid';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect, useRef } from 'react';\r\nimport { gfs_getStoreValue, gfs_dispatch } from '../../Method/Store';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\n\r\nimport { gfc_getMultiLang, gfc_getAtt, gfc_sleep } from '../../Method/Comm';\r\nimport { gfg_getGrid } from '../../Method/Grid';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { getCallSP_Mysql } from '../../db/Mysql/Mysql';\r\n//#endregion\r\n\r\nconst RtnGrid = (props) => {\r\n\r\n  let   frozenCount = props.frozenCount;\r\n  const columns = props.columns;\r\n\r\n  const setFrozenCount = (cnt) => {\r\n    frozenCount = cnt;\r\n  }\r\n\r\n  const onResize = (width, height) => {\r\n    const grid = gfg_getGrid(props.pgm, props.id);\r\n\r\n    if(grid){\r\n      try{\r\n        if(Object.keys(grid).length > 0){\r\n          // window.dispatchEvent(new Event('resize'));\r\n          grid.setWidth(width);\r\n          grid.setHeight(height);\r\n        }\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }\r\n  };\r\n\r\n  //#region 헤더 설정\r\n  const setHeader = (columnId, columnNam, width, parent) => {\r\n    let elementResizeDetectorMaker = require('element-resize-detector');\r\n    let erd = elementResizeDetectorMaker();\r\n\r\n    const divMain = document.createElement('div');\r\n    divMain.style = `width: ${width}; height: 100%; top: 0; cursor:move; position: absolute; background: transparent;`;\r\n    parent.appendChild(divMain);\r\n\r\n    erd.listenTo(parent, function(element) {\r\n      let width = element.clientWidth;\r\n      divMain.style.width = width;\r\n    });\r\n\r\n    const divLeft = document.createElement('div');\r\n    divLeft.style = `width: 50%; height: 100%; float:left; top: 0; background: transparent;`;\r\n    divMain.appendChild(divLeft);\r\n\r\n    const divRight = document.createElement('div');\r\n    divRight.style = `width: 50%; height: 100%; float:left; top: 0; background: transparent;`;\r\n    divMain.appendChild(divRight);\r\n\r\n    ReactDOM.render(crtDraggable(columnId, 'LEFT', columnNam), divLeft);\r\n    ReactDOM.render(crtDraggable(columnId, 'RIGHT', columnNam), divRight);\r\n  }\r\n\r\n  const setHeaderEach = async (columnId, columnNam, width) => {\r\n    await gfc_sleep(200);        \r\n    \r\n    const header = gridRef.current.gridInst.el.querySelectorAll('div.tui-grid-header-area');   \r\n\r\n    header.forEach(e => {\r\n      const each = e.querySelectorAll('th.tui-grid-cell.tui-grid-cell-header');\r\n      each.forEach(e => {\r\n        if(e.dataset.columnName === columnId){\r\n          setHeader(columnId, columnNam, width, e);\r\n          return;\r\n        }\r\n      })\r\n    })\r\n  }\r\n  //#endregion\r\n\r\n  //#region 컬럼헤더 드래그\r\n  const crtDraggable = (columnId, LR, columnNam) => {\r\n    \r\n    let drg = <Draggable axis='x'\r\n                         handle={'.handle_' + LR}\r\n                         position={{x:0, y:0}}\r\n                         scale={1}\r\n                              \r\n                         onStop={(e1, e2) => {\r\n                           const fromId = e2.node.dataset.id;\r\n                           const toId = e1.target.dataset.id;\r\n                           const lr = e1.target.dataset.lr;\r\n\r\n                           if(fromId !== undefined){\r\n                             if(toId !== undefined){\r\n                               \r\n                               if(fromId !== toId){\r\n                                 const fromIndex = columns.findIndex(e => e.name === fromId);\r\n                                 let toIndex = columns.findIndex(e => e.name === toId);\r\n                                 if(lr === 'RIGHT') {\r\n                                   toIndex = toIndex + 1;\r\n                                 }\r\n      \r\n                                 const from = columns[fromIndex];\r\n                                 columns.splice(toIndex, 0, from);\r\n\r\n                                 if(fromIndex < toIndex){\r\n                                   for(let i = 0; i < columns.length; i++){\r\n                                     if(columns[i].name === from.name){\r\n                                       columns.splice(i, 1);\r\n                                       break;\r\n                                     }\r\n                                   }\r\n                                 }else{\r\n                                  for(let i = columns.length - 1; i >= 0; i--){\r\n                                    if(columns[i].name === from.name){\r\n                                      columns.splice(i, 1);\r\n                                      break;\r\n                                    }\r\n                                  }\r\n                                 }\r\n                                 \r\n                                 gridRef.current.getInstance().setColumns(columns);\r\n                               }\r\n                             }\r\n                          }\r\n                    }}\r\n                  >\r\n                  <div data-id={columnId} data-nam={columnNam} data-lr={LR} className={'handle_' + LR} style={{width:'99%', height:'100%'}} />\r\n                </Draggable>;\r\n    return drg;\r\n  }\r\n  //#endregion\r\n\r\n  //#region 컬럼 틀고정(해제)\r\n  const fixedFrame = (id, parent) => {\r\n    if(id === '_number') return;\r\n\r\n    let index = columns.findIndex(e => e.name === id);\r\n    \r\n    let nam = '틀고정';\r\n    if(frozenCount > 0){\r\n      if(frozenCount > index) nam = '틀고정해제';\r\n    }\r\n\r\n    const contextFixedUl = document.createElement('li');\r\n    contextFixedUl.innerHTML = gfc_getAtt(nam);\r\n    contextFixedUl.style = 'margin-top: 5px;';\r\n    contextFixedUl.onclick = e => {\r\n      //틀고정 해제인경우\r\n      if(frozenCount > index){\r\n        //1. 해당컬럼 확인\r\n        const from = columns[index];\r\n\r\n        //1-1. 기존컬럼삭제\r\n        columns.splice(index, 1); \r\n\r\n        //2. 틀고정 설정을 한다.\r\n        setFrozenCount(frozenCount - 1);\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n\r\n        //2-1. 컬럼이동\r\n        columns.splice(frozenCount, 0, from);\r\n        gridRef.current.getInstance().setColumns(columns);\r\n        \r\n        setHeaderEach(from.name, from.header, from.width);\r\n      }else{\r\n        //1. 해당컬럼 확인\r\n        const from = columns[index];\r\n\r\n        //1-1. 기존컬럼삭제\r\n        columns.splice(index, 1);\r\n\r\n        //2. 틀고정 설정을 한다.\r\n        setFrozenCount(frozenCount + 1);\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n\r\n        //2-1. 컬럼이동\r\n        columns.splice(frozenCount - 1, 0, from);\r\n        gridRef.current.getInstance().setColumns(columns);\r\n      }\r\n    }\r\n    \r\n    parent.appendChild(contextFixedUl);\r\n  }\r\n  //#endregion\r\n\r\n  //#region 컬럼숨김(해제)\r\n  const columnVisible = (id, parent) => {\r\n    if(id === '_number') return;\r\n    \r\n    const contextVisible = document.createElement('li');\r\n    contextVisible.innerHTML = gfc_getAtt('숨기기');\r\n    contextVisible.style = 'margin-top: 5px;';\r\n    contextVisible.onclick = () => {\r\n      const index = columns.findIndex(e => e.name === id);\r\n\r\n      //컬럼순서 때문에 숨김처리시 제일뒤로 보낸다.\r\n      const from = columns[index];\r\n\r\n      columns.splice(index, 1);\r\n      columns.splice(columns.length, 0, from);\r\n\r\n      gridRef.current.getInstance().hideColumn(id);\r\n      from.hidden = true;\r\n      gridRef.current.getInstance().setColumns(columns);\r\n\r\n      if(frozenCount > index){\r\n        setFrozenCount(frozenCount - 1);\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n      }\r\n    }\r\n\r\n    parent.appendChild(contextVisible);\r\n\r\n    const hide = columns.filter(e => e.hidden);\r\n\r\n    if(hide.length > 0){\r\n\r\n      const contextShow = document.createElement('li');\r\n      contextShow.innerHTML = gfc_getAtt('숨기기 취소');\r\n      contextShow.style = 'margin-top: 5px;';\r\n\r\n      const contextShowUl = document.createElement('ul');\r\n      contextShowUl.style = 'margin-top: 5px;';\r\n      contextShow.appendChild(contextShowUl);\r\n\r\n      const onShow = (id, parentId) => {\r\n        \r\n        const index = columns.findIndex(e => e.name === id);\r\n        const parentIndex = columns.findIndex(e => e.name === parentId);\r\n        const from = columns[index];\r\n\r\n        columns.splice(index, 1);\r\n        columns.splice(frozenCount === 0 ? parentIndex + 1 : frozenCount, 0, from);\r\n\r\n        gridRef.current.getInstance().showColumn(id);\r\n        from.hidden = false;\r\n        gridRef.current.getInstance().setColumns(columns);\r\n\r\n        gridRef.current.getInstance().setFrozenColumnCount(frozenCount);\r\n        setHeaderEach(from.name, from.header, from.width);\r\n      }\r\n\r\n      for(let idx in hide){\r\n\r\n        const contextShowUlLi = document.createElement('li');\r\n        contextShowUlLi.innerHTML = gfc_getAtt(hide[idx].header);\r\n        contextShowUlLi.style = 'margin-top: 5px;';\r\n        contextShowUlLi.onclick = (e) => onShow(hide[idx].name, id);\r\n        contextShowUl.appendChild(contextShowUlLi);\r\n        \r\n        parent.appendChild(contextShow);\r\n      }\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region 그리드초기화\r\n  const resetGrid = (parent) => {\r\n\r\n    const contextInit = document.createElement('li');\r\n    contextInit.innerHTML = gfc_getAtt('설정초기화');\r\n    contextInit.onclick = () =>{\r\n\r\n      const CRTCHR_NO = gfs_getStoreValue('USER_REDUCER', 'USER_ID');\r\n      const PGM_ID    = props.pgm;\r\n      const GRID_ID   = props.id;\r\n\r\n      getCallSP_Mysql(\r\n        [{SP           : 'SP_PGM_GRID',\r\n          ROWSTATUS    : 'D',\r\n          PGM_ID,\r\n          GRID_ID,\r\n          GRID_COL_NAM : '',\r\n          HIDE_YN      : '',\r\n          LOCK_YN      : '',\r\n          WIDTH        : 0,\r\n          SEQ          : 0,\r\n          CRTCHR_NO\r\n        }]\r\n      ).then(\r\n        e => {\r\n          gridRef.current.getInstance().setColumns(props.columns);\r\n          gridRef.current.getInstance().setFrozenColumnCount(props.frozenCount);\r\n\r\n          if(e.data.result){\r\n  \r\n          }else{\r\n            if(e.data.MSG_CODE !== 'NO')\r\n              gfc_getMultiLang('dup', '그리드 설정시 오류가 발생했습니다. > ' + props.pgm + ', ' + props.id);\r\n          }\r\n        }\r\n      )\r\n    };\r\n\r\n    parent.appendChild(contextInit);\r\n  }\r\n  //#endregion\r\n\r\n  //#region 그리드 설정저장\r\n  const saveGrid = (parent) => {\r\n\r\n    const contextSave = document.createElement('li');\r\n    contextSave.innerHTML = gfc_getAtt('설정저장');\r\n    contextSave.style = 'margin-top: 5px;';\r\n\r\n    contextSave.onclick = () =>{\r\n\r\n      const CRTCHR_NO = gfs_getStoreValue('USER_REDUCER', 'USER_ID');\r\n      const PGM_ID    = props.pgm;\r\n      const GRID_ID   = props.id;\r\n      \r\n      let seq = 1;\r\n      const param = [];\r\n      columns.forEach(e => {\r\n        const GRID_COL_NAM = e.name;\r\n        const HIDE_YN      = e.hidden ? 'Y' : 'N';\r\n        const LOCK_YN      = frozenCount >= seq ? 'Y' : 'N';\r\n        const WIDTH        = e.width;\r\n        \r\n        param[seq - 1] = {SP           : 'SP_PGM_GRID',\r\n                          ROWSTATUS    : 'I',\r\n                          PGM_ID,\r\n                          GRID_ID,\r\n                          GRID_COL_NAM,\r\n                          HIDE_YN,\r\n                          LOCK_YN,\r\n                          WIDTH,\r\n                          SEQ          : seq,\r\n                          CRTCHR_NO\r\n                        }\r\n\r\n        seq = seq + 1;\r\n      })\r\n\r\n      getCallSP_Mysql(\r\n        param\r\n      ).then(\r\n        e => {\r\n          // console.log(e)\r\n          // gridRef.current.getInstance().setColumns(props.columns);\r\n          // gridRef.current.getInstance().setFrozenColumnCount(props.frozenCount);\r\n\r\n          if(e.data.result){\r\n            gfc_getMultiLang('OK', '저장되었습니다. > ' + props.pgm + ', ' + props.id);\r\n          }else{\r\n            gfc_getMultiLang('dup', '그리드 설정시 오류가 발생했습니다. > ' + props.pgm + ', ' + props.id);\r\n          }\r\n        }\r\n      )\r\n    };\r\n\r\n    parent.appendChild(contextSave);\r\n  }\r\n  //#endregion\r\n\r\n  const gridRef = useRef(null);\r\n  // eslint-disable-next-line no-unused-vars\r\n  const { width, height, ref } = useResizeDetector({onResize});\r\n\r\n  useEffect(() => {\r\n    if(gfg_getGrid(props.pgm, props.id) !== undefined){\r\n      gfc_getMultiLang('dup', '그리드 아이디 중복입니다. > ' + props.pgm + ', ' + props.id);\r\n      return \r\n    }\r\n\r\n    gridRef.current.getInstance().on('focusChange', (e) => {\r\n      if(e.rowKey === e.prevRowKey)\r\n        return false;\r\n      else{\r\n        // gridRef.current.getInstance().setSelectionRange({\r\n        //   start: [e.rowKey, 0],\r\n        //   end: [e.rowKey, gridRef.current.getInstance().getColumns().length - 1]\r\n        // });\r\n\r\n        if(props.selectionChange !== undefined)\r\n          props.selectionChange(gridRef.current.getInstance().getRow(e.rowKey));\r\n      }\r\n    })\r\n\r\n    gridRef.current.getInstance().on('afterChange', (e) => {\r\n      if(props.afterChange !== undefined)\r\n        props.afterChange(e.changes[0]);\r\n    })\r\n\r\n    gridRef.current.getInstance().on('dblclick', (e) => {\r\n      if(props.dblclick !== undefined){\r\n        if(e.targetType !== 'etc'){\r\n          props.dblclick(e.columnName);\r\n        }\r\n      }\r\n    })\r\n        \r\n    gfs_dispatch(props.pgm, 'INITGRID', \r\n      ({\r\n        Grid:{id  : props.id,\r\n              Grid: gridRef.current.getInstance()}\r\n      })\r\n    );\r\n\r\n    return() => {\r\n      gfs_dispatch(props.pgm, 'CLEARGRID', \r\n        ({\r\n          id: props.id\r\n        })\r\n      );\r\n    }\r\n\r\n    // const CRTCHR_NO = gfs_getStoreValue('USER_REDUCER', 'USER_ID');\r\n    // const PGM_ID    = props.pgm;\r\n    // const GRID_ID   = props.id;\r\n\r\n    // getCallSP_Mysql(\r\n    //   [{SP           : 'SP_PGM_GRID',\r\n    //     ROWSTATUS    : 'R',\r\n    //     PGM_ID,\r\n    //     GRID_ID,\r\n    //     GRID_COL_NAM : '',\r\n    //     HIDE_YN      : '',\r\n    //     LOCK_YN      : '',\r\n    //     WIDTH        : 0,\r\n    //     SEQ          : 0,\r\n    //     CRTCHR_NO\r\n    //   }]\r\n    // ).then(\r\n    //   e => {\r\n       \r\n    //     const header = gridRef.current.gridInst.el.querySelectorAll('div.tui-grid-header-area');   \r\n    \r\n    //     for(let idx = 0; idx < header.length; idx++){\r\n    //       header[idx].addEventListener('contextmenu', e => {\r\n    //         let id = e.target.dataset.id;\r\n    //         let nam = e.target.dataset.nam;\r\n    \r\n    //         if(id === undefined){\r\n    //           id = e.target.dataset.columnName;\r\n    //         }\r\n    \r\n    //         if(nam === undefined){\r\n    //           nam = columns.find(e => e.name === id);\r\n    //           if(nam !== undefined){\r\n    //             nam = nam.header;\r\n    //           }\r\n    //         }\r\n    \r\n    //         if(nam === undefined) return;\r\n    \r\n    //         e.preventDefault()\r\n            \r\n    //         const contextDiv = document.createElement('div');\r\n    //         contextDiv.id = props.pgm + '_' + props.id + '_contextmenu';\r\n    //         contextDiv.style = 'position:fixed;width:150px; background: #fff;box-shadow:1px 1px 5px 0 rgba(0, 0, 0, 0.54)';\r\n    \r\n    //         const fDiv = document.getElementById(contextDiv.id);\r\n    //         if(fDiv !== null){\r\n    //           document.body.removeChild(fDiv);\r\n    //         }\r\n    \r\n    //         document.addEventListener('click', () => {\r\n    //           const fDiv = document.getElementById(contextDiv.id);\r\n    //           if(fDiv !== null){\r\n    //             document.body.removeChild(fDiv);\r\n    //           }\r\n    //         }); \r\n    //         document.body.appendChild(contextDiv);\r\n            \r\n    //         const contextChild = document.createElement('input');\r\n    //         contextChild.style = 'width:148px; height:30; text-align:center; margin: 1 0 0 1';\r\n    //         contextChild.value = nam;\r\n    //         contextDiv.appendChild(contextChild);\r\n    \r\n    //         const contextUl = document.createElement('ul');\r\n    //         contextUl.style = 'width:148px; font-size:13;margin-top: 3px;';\r\n    //         contextDiv.appendChild(contextUl); \r\n    \r\n    //         //설정 초기화\r\n    //         resetGrid(contextUl);\r\n    \r\n    //         //설정 저장\r\n    //         saveGrid(contextUl);\r\n    \r\n    //         //틀고정\r\n    //         fixedFrame(id, contextUl);\r\n    \r\n    //         //숨김\r\n    //         columnVisible(id, contextUl);\r\n            \r\n    //         if(e.which === 3){\r\n    //           let x = e.pageX + 'px'; // 현재 마우스의 X좌표\r\n    //           let y = e.pageY + 'px'; // 현재 마우스의 Y좌표\r\n    //           contextDiv.style.left = x;\r\n    //           contextDiv.style.top = y;\r\n    //         }\r\n    //       });\r\n          \r\n    //       const each = header[idx].querySelectorAll('th.tui-grid-cell.tui-grid-cell-header');\r\n          \r\n    //       for(let j = 0; j < each.length; j++){\r\n    //         const columnId  = each[j].dataset.columnName;\r\n    //         const columnNam = each[j].innerText;\r\n    //         setHeader(columnId, columnNam, each[j].clientWidth, each[j]);\r\n    //       }\r\n    //     }\r\n\r\n    //     if(e.data.length > 0){\r\n    //       let frozen = 0;\r\n\r\n    //       e.data.forEach(e => {\r\n    //         const index = columns.findIndex(e1 => e1.name === e.GRID_COL_NAM);\r\n    //         const from = columns[index];\r\n\r\n    //         from.width  = e.WIDTH * 1;\r\n    //         from.hidden = e.HIDE_YN === 'N' ? false : true;\r\n\r\n    //         if(e.SEQ - 1 !== index){\r\n              \r\n    //           columns.splice(index, 1);\r\n    //           columns.splice(e.SEQ - 1, 0, from);\r\n    //           gridRef.current.getInstance().setColumns(columns);\r\n    //         }\r\n\r\n    //         if(e.LOCK_YN === 'Y') {\r\n    //           frozen = frozen + 1;\r\n    //         }\r\n    //       })\r\n\r\n    //       gridRef.current.getInstance().setFrozenColumnCount(frozen);\r\n    //       setFrozenCount(frozen);\r\n    //     }\r\n\r\n    //     if(e.data.result){\r\n\r\n    //     }else{\r\n    //       if(e.data.MSG_CODE !== 'NO')\r\n    //         gfc_getMultiLang('dup', '그리드 설정시 오류가 발생했습니다. > ' + props.pgm + ', ' + props.id);\r\n    //     }\r\n    //   }\r\n    // )    \r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <> \r\n      <div ref={ref} style={{marginLeft: '8px', width:'calc(100% - 17px)', height: 'calc(100% - 10px)'}}>\r\n      {/* <div ref={ref} style={{width:'calc(100% - 10px)', height: 'calc(100% - 10px)', marginLeft: '5px', marginTop: '5px'}}> */}\r\n        \r\n        <Grid header        = {props.colHeader}\r\n              selectionUnit = 'row'\r\n              minRowHeight  = {props.rowHeight < 34 ? 34 : props.rowHeight}\r\n              rowHeight     = {props.rowHeight < 34 ? 34 : props.rowHeight}\r\n              bodyHeight    = 'fitToParent'\r\n              rowHeaders    = {props.rowHeaders !== null ? props.rowHeaders : undefined}\r\n              scrollX       = {true}\r\n\r\n              columns       = {props.columns}\r\n              columnOptions = {{\r\n                frozenCount: props.frozenCount\r\n              }}\r\n\r\n              ref           = {gridRef}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nRtnGrid.propTypes = {\r\n  pgm        : PropTypes.string.isRequired,\r\n  id         : PropTypes.string.isRequired,\r\n  columns    : PropTypes.array.isRequired,\r\n  colHeader  : PropTypes.object,\r\n  rowHeight  : PropTypes.number,\r\n  rowHeader  : PropTypes.array,\r\n  frozenCount: PropTypes.number\r\n};\r\n\r\nRtnGrid.defaultProps = {\r\n  colHeader  :{\r\n    height:32\r\n  },\r\n  rowHeight  :34,\r\n  rowHeaders : [{ type: 'rowNum', width: 50 }],\r\n  frozenCount: 0\r\n};\r\n\r\nexport default RtnGrid;","D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\TextArea.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\DetailDiv.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\SearchDiv.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\DateTime.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Grid\\Column\\Number.js",[],"D:\\Project\\01.YK\\react\\src\\Method\\Popup.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart2.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\DateTime.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart3.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart1.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\Number.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\MES\\Chart\\Chart4.js",["502","503"],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetail.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Layout\\Layout.js",[],"D:\\Project\\01.YK\\react\\src\\Component\\Menu\\SideBarMenu\\SideBarMainListDetailComponent.js",[],["504","505"],"D:\\Project\\01.YK\\react\\src\\Component\\Popup\\PopupFrame.js",["506"],"D:\\Project\\01.YK\\react\\src\\Program\\POPUP\\PopupTest.js",["507"],"D:\\Project\\01.YK\\react\\src\\Component\\Control\\TextArea.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\INSP_HIST.js",["508","509","510","511","512","513"],"//#region import\r\nimport React, { Component } from 'react';\r\n\r\nimport Input from '../../../Component/Control/Input';\r\n\r\nimport { gfc_initPgm, gfc_showMask, gfc_hideMask, gfc_chit_yn_YK, gfc_sleep } from '../../../Method/Comm';\r\nimport { gfs_getStoreValue, gfs_injectAsyncReducer, gfs_dispatch, gfs_subscribe } from '../../../Method/Store';\r\nimport { gfo_getCombo, gfo_getInput, gfo_getTextarea } from '../../../Method/Component';\r\nimport { gfg_getGrid, gfg_setSelectRow } from '../../../Method/Grid';\r\n\r\nimport Grid from '../../../Component/Grid/Grid';\r\nimport { Input as columnInput } from '../../../Component/Grid/Column/Input';\r\nimport { Image as columnImage } from '../../../Component/Grid/Column/Image';\r\nimport { Combobox as columnCombobox }  from '../../../Component/Grid/Column/Combobox';\r\nimport { TextArea as columnTextArea } from '../../../Component/Grid/Column/TextArea';\r\n\r\nimport Combobox from '../../../Component/Control/Combobox';\r\n\r\n// import Mainspan from './Mainspan';\r\nimport Detailspan from '../Common/Detailspan';\r\nimport Botspan from '../Common/Botspan';\r\nimport Chit from '../Common/Chit';\r\nimport CompleteBtn from './CompleteBtn';\r\nimport TabList from '../Common/TabList';\r\nimport RecImage from './RecImage';\r\n\r\nimport { YK_WEB_REQ } from '../../../WebReq/WebReq';\r\nimport { TOKEN, MILESTONE } from '../../../WebReq/WebReq';\r\n//#endregion\r\n\r\nclass INSP_HIST extends Component {\r\n\r\n  state = {\r\n    wait_list: [],\r\n    device: []\r\n  }\r\n\r\n  milestoneInfo = async() => {\r\n\r\n    // 선택된 공정의 카메라를 찾아서 스트리밍 받는다\r\n    // 지금은 하드코딩 되어있지만 나중엔 로컬스토리지와 콤보박스를 써서 선택된 공정의 아이피를 가지고 카메라를 가져온다.\r\n    // 1. 선택된 공정의 카메라 정보를 가지고온다.\r\n    // const milestone = TOKEN({reqAddr: 'LOGIN', MilestoneIP: gfs_getStoreValue('CAMERA_REDUCER', 'MilestoneIP')});\r\n    const milestone = await TOKEN({});\r\n    this.token  = milestone.data.TOKEN;\r\n    this.device = milestone.data.DEVICE;\r\n    if(this.token === ''){\r\n      alert('마일스톤 서버에 접속할 수 없습니다.'); \r\n    }else if(this.device === ''){\r\n      alert('마일스톤 서버에 접속할 수 없습니다.');\r\n    }else{\r\n      let ipArr = ['10.10.136.112', '10.10.136.128'];\r\n      let rtspUrl = ['rtsp://admin:admin13579@10.10.136.112:554/profile2/media.smp', 'rtsp://admin:pass@10.10.136.128:554/video1'];\r\n      let rtspPort = [3100, 3101];\r\n      let infoArr = [];\r\n\r\n      ipArr.forEach(e => {\r\n        const camera = this.device.find(e1 => e1.Name.indexOf(e) >= 0);\r\n        if(camera){\r\n          infoArr.push({camera, rtspUrl, rtspPort}); \r\n        }\r\n      })\r\n\r\n      if(infoArr.length > 0){\r\n        this.setState(this.state.device = infoArr);\r\n      }\r\n    }\r\n  }\r\n\r\n  onTabChg = async() => {\r\n    const carNumb = gfs_getStoreValue('INSP_PROC_MAIN', 'DETAIL_CARNO');\r\n    if(carNumb !== undefined && carNumb !== ''){\r\n      const befCarNumb = gfo_getInput(this.props.pgm, 'search_txt').getValue();\r\n\r\n      if(befCarNumb !== carNumb){\r\n        gfo_getInput(this.props.pgm, 'search_txt').setValue(carNumb);\r\n        \r\n        await gfc_sleep(100);\r\n        this.Retrieve(carNumb);\r\n\r\n        //차량번호, 총중량, 입차시간 세팅\r\n        const scaleNumb = gfs_getStoreValue('INSP_PROC_MAIN', 'DETAIL_SCALE');\r\n        const totalWgt = gfs_getStoreValue('INSP_PROC_MAIN', 'DETAIL_WEIGHT');\r\n        const date = gfs_getStoreValue('INSP_PROC_MAIN', 'DETAIL_DATE');\r\n\r\n        gfs_dispatch('INSP_HIST_MAIN', 'DETAIL_SCALE', {DETAIL_SCALE: scaleNumb});\r\n        gfs_dispatch('INSP_HIST_MAIN', 'DETAIL_CARNO', {DETAIL_CARNO: carNumb});\r\n        gfs_dispatch('INSP_HIST_MAIN', 'DETAIL_WEIGHT', {DETAIL_WEIGHT: totalWgt});\r\n        gfs_dispatch('INSP_HIST_MAIN', 'DETAIL_DATE', {DETAIL_DATE: date});\r\n      }\r\n    }\r\n  }\r\n\r\n  //#region onActiveWindow 스토어 subscribe로 실행됨.\r\n  onActiveWindow = () => {\r\n    const activeWindow = gfs_getStoreValue('WINDOWFRAME_REDUCER', 'activeWindow');\r\n    if(activeWindow.programId === 'INSP_HIST'){\r\n      this.onTabChg();\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#endregion\r\n\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    gfc_initPgm(props.pgm, props.nam, this)\r\n\r\n    //#region 리듀서\r\n    const INSP_HIST_MAIN = (nowState, action) => {\r\n\r\n      if(action.reducer !== 'INSP_HIST_MAIN') {\r\n        return {\r\n          MAIN_WAIT    : nowState === undefined ? 0 : nowState.MAIN_WAIT,\r\n          MAIN_TOTAL   : nowState === undefined ? 0 : nowState.MAIN_TOTAL,\r\n          MAIN_WEIGHT  : nowState === undefined ? 0 : nowState.MAIN_WEIGHT,\r\n          BOT_TOTAL    : nowState === undefined ? 0 : nowState.BOT_TOTAL,\r\n          PROC_WAIT    : nowState === undefined ? 0 : nowState.PROC_WAIT,\r\n          DEPT_WAIT    : nowState === undefined ? 0 : nowState.DEPT_WAIT,\r\n          ENTR_WAIT    : nowState === undefined ? 0 : nowState.ENTR_WAIT,\r\n \r\n          DETAIL_SCALE : nowState === undefined ? '' : nowState.DETAIL_SCALE,\r\n          DETAIL_CARNO : nowState === undefined ? '' : nowState.DETAIL_CARNO,\r\n          DETAIL_WEIGHT: nowState === undefined ? '' : nowState.DETAIL_WEIGHT,\r\n          DETAIL_DATE  : nowState === undefined ? '' : nowState.DETAIL_DATE,\r\n\r\n          STD_CAM_IMG  : nowState === undefined ? null : nowState.STD_CAM_IMG,\r\n          DUM_CAM_IMG  : nowState === undefined ? null : nowState.DUM_CAM_IMG,\r\n\r\n          STD_CAM_OPEN : nowState === undefined ? false : nowState.STD_CAM_OPEN,\r\n          DUM_CAM_OPEN : nowState === undefined ? false : nowState.DUM_CAM_OPEN,\r\n\r\n          STD_CAM_FOCUS: nowState === undefined ? false : nowState.STD_CAM_FOCUS,\r\n          DUM_CAM_FOCUS: nowState === undefined ? false : nowState.DUM_CAM_FOCUS,\r\n\r\n          STD_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.STD_CAM_REC,\r\n          DUM_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.DUM_CAM_REC,\r\n\r\n          CHIT_MEMO    : nowState === undefined ? '' : nowState.CHIT_MEMO,\r\n          \r\n          CHIT_INFO    : nowState === undefined ? {\r\n                                                    date     : '',\r\n                                                    scaleNumb: '',\r\n                                                    carNumb  : '',\r\n                                                    vender   : '',\r\n                                                    itemFlag : '',\r\n                                                    Wgt      : '',\r\n                                                    loc      : '',\r\n                                                    user     : '',\r\n                                                    chit     : 'N',\r\n                                                  } : nowState.CHIT_INFO\r\n        };\r\n      }\r\n\r\n      if(action.type === 'MAIN_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WAIT : action.MAIN_WAIT\r\n        })\r\n      }else if(action.type === 'MAIN_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_TOTAL : action.MAIN_TOTAL\r\n        })\r\n      }else if(action.type === 'MAIN_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WEIGHT : action.MAIN_WEIGHT\r\n        })\r\n      }else if(action.type === 'BOT_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          BOT_TOTAL : action.BOT_TOTAL\r\n        })\r\n      }else if(action.type === 'PROC_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          PROC_WAIT : action.PROC_WAIT\r\n        })\r\n      }else if(action.type === 'DEPT_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DEPT_WAIT : action.DEPT_WAIT\r\n        })\r\n      }else if(action.type === 'ENTR_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          ENTR_WAIT : action.ENTR_WAIT\r\n        })\r\n      }else if(action.type === 'DETAIL_SCALE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_SCALE : action.DETAIL_SCALE\r\n        })\r\n      }else if(action.type === 'DETAIL_CARNO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_CARNO : action.DETAIL_CARNO\r\n        })\r\n      }else if(action.type === 'DETAIL_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_WEIGHT : action.DETAIL_WEIGHT\r\n        })\r\n      }else if(action.type === 'DETAIL_DATE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_DATE : action.DETAIL_DATE\r\n        })\r\n      }else if(action.type === 'STD_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_IMG : action.STD_CAM_IMG\r\n        })\r\n      }else if(action.type === 'DUM_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_IMG : action.DUM_CAM_IMG\r\n        })\r\n      }else if(action.type === 'STD_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_OPEN : action.STD_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'DUM_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_OPEN : action.DUM_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'STD_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_FOCUS : action.STD_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'DUM_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_FOCUS : action.DUM_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.STD_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.DUM_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec     : nowState.STD_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec     : nowState.DUM_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO_ITEM_FLAG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     :  nowState.CHIT_INFO.date,\r\n            scaleNumb:  nowState.CHIT_INFO.scaleNumb,\r\n            carNumb  :  nowState.CHIT_INFO.carNumb,\r\n            vender   :  nowState.CHIT_INFO.vender,\r\n            itemFlag :  action.itemFlag,\r\n            Wgt      :  nowState.CHIT_INFO.Wgt,\r\n            loc      :  nowState.CHIT_INFO.loc,\r\n            user     :  nowState.CHIT_INFO.user,\r\n            chit     :  nowState.CHIT_INFO.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     : action.date,\r\n            scaleNumb: action.scaleNumb,\r\n            carNumb  : action.carNumb,\r\n            vender   : action.vender,\r\n            itemFlag : action.itemFlag,\r\n            Wgt      : action.Wgt,\r\n            loc      : action.loc,\r\n            user     : action.user,\r\n            chit     : action.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_MEMO'){\r\n        return Object.assign({}, nowState, {\r\n          CHIT_MEMO : action.CHIT_MEMO\r\n        })\r\n      }\r\n    }\r\n\r\n    gfs_injectAsyncReducer('INSP_HIST_MAIN', INSP_HIST_MAIN);\r\n    gfs_subscribe(this.onActiveWindow);\r\n    //#endregion\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.milestoneInfo();\r\n    gfo_getCombo(this.props.pgm, 'search_tp').setValue('2');\r\n  }\r\n\r\n  Retrieve = async (carNumb) => {\r\n    if(carNumb === undefined || carNumb === ''){\r\n      alert('선택된 차량번호가 없습니다.');\r\n      return;\r\n    }\r\n\r\n    gfc_showMask();\r\n\r\n    const mainData = await YK_WEB_REQ(`tally_process_f2.jsp?carnumb=${carNumb}&ld=20210417&nd=20210617`);\r\n    const main = mainData.data.dataSend;\r\n    const grid = gfg_getGrid(this.props.pgm, 'main10');\r\n    if(main){\r\n\r\n      const dataMod = [];\r\n      main.forEach(e => {\r\n        dataMod.push({\r\n          totalWgt : e['감량'],\r\n          grade    : e['검수등급'],\r\n          scaleNumb: e['계근번호'],\r\n          date     : e['계근일자'],\r\n          rtn      : e['반품구분'],\r\n          vendor   : e['업체명'],\r\n          carNumb  : e['차량번호'],\r\n          loc      : e['상차주소'],\r\n          // warning  : e['경고'] === 'N' ? '' : '경고'\r\n          warning  : '경고'\r\n        })\r\n      })\r\n\r\n      grid.resetData(dataMod);\r\n      gfg_setSelectRow(grid);\r\n\r\n      gfs_dispatch('INSP_HIST_MAIN', 'BOT_TOTAL', {BOT_TOTAL: main.length});\r\n    }else{\r\n      gfs_dispatch('INSP_HIST_MAIN', 'BOT_TOTAL', {BOT_TOTAL: 0});\r\n    }\r\n\r\n    gfc_hideMask();\r\n  }\r\n\r\n\r\n  onSelectChange = async (e) => {\r\n    if(e === null) return;\r\n\r\n    //계량표 여부 확인.\r\n    const chitYn = await gfc_chit_yn_YK(e.scaleNumb);\r\n    gfs_dispatch('INSP_HIST_MAIN', 'CHIT_INFO', {\r\n      chit     : chitYn.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='win_body' style={{borderRadius:'0px', borderWidth:'0px 1px 0px 1px'}}>\r\n        <div className='car_manager' >\r\n          <div style={{paddingBottom:'0'}} className='car_list'>\r\n            <div className='search_line'>\r\n              <div className='wp' >\r\n                <div style={{position:'absolute', left:0, top:0, width:'124px', height:'42px', fontSize:'16px'}}>\r\n                  <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'search_tp'\r\n                            value   = 'code'\r\n                            display = 'name'\r\n                            width   = {124}\r\n                            height  = {42}\r\n                            emptyRow\r\n                            isDisabled\r\n                            data    = {[{\r\n                              code: '1',\r\n                              name: '배차번호'\r\n                            },{\r\n                              code: '2',\r\n                              name: '차량번호'\r\n                            },{\r\n                              code: '3',\r\n                              name: '등급'\r\n                            },{\r\n                              code: '4',\r\n                              name: '업체'\r\n                            }]}\r\n                  />\r\n                </div>\r\n                <Input pgm         = {this.props.pgm}\r\n                       id          = 'search_txt'\r\n                       height      = '42'\r\n                       placeHolder = '검색어를 입력하세요'\r\n                       paddingLeft = '14'\r\n                       width       = '100%'\r\n                       type        = 'textarea'\r\n                       readOnly\r\n                      //  padding-bottom:2px; padding-left:14px; border:none; font-size:22px;\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='grid'>\r\n              <div className='wp'>\r\n                <div style={{width:'100%', height:'100%', overflow:'auto'}}>\r\n                  <Grid pgm={this.props.pgm}\r\n                        id ='main10'\r\n                        selectionChange={(e) => this.onSelectChange(e)}\r\n                        rowHeight={41}\r\n                        rowHeaders= {[{ type: 'rowNum', width: 40 }]}\r\n                        columns={[\r\n                          columnInput({\r\n                            name: 'scaleNumb',\r\n                            header: '계근번호',\r\n                            width : 90,\r\n                            readOnly: true,\r\n                            color : '#0063A9',\r\n                            align : 'center',\r\n                            fontSize: '12'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'carNumb',\r\n                            header: '차량번호',\r\n                            width : 90,\r\n                            readOnly: true,\r\n                            align : 'center',\r\n                            fontSize: '12'\r\n                          }),   \r\n                          columnInput({\r\n                            name: 'grade',\r\n                            header: '검수등급',\r\n                            width : 90,\r\n                            readOnly: true,\r\n                            align : 'left',\r\n                            fontSize: '12'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'date',\r\n                            header: '계근일자',\r\n                            width : 80,\r\n                            readOnly: true,\r\n                            align : 'center',\r\n                            fontSize: '12'\r\n                          }),   \r\n                          columnTextArea({\r\n                            name: 'vendor',\r\n                            header: '업체명',\r\n                            width : 95,\r\n                            height: 38,\r\n                            readOnly: true,\r\n                            align : 'left',\r\n                            fontSize: '12'\r\n                          }),\r\n                          columnTextArea({\r\n                            name: 'loc',\r\n                            header: '상차주소',\r\n                            width : 120,\r\n                            height: 38,\r\n                            readOnly: true,\r\n                            align : 'left',\r\n                            fontSize: '12'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'totalWgt',\r\n                            header: '감량',\r\n                            width : 40,\r\n                            readOnly: true,\r\n                            align : 'right',\r\n                            fontSize: '12'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'warning',\r\n                            header: '경고',\r\n                            width : 40,\r\n                            readOnly: true,\r\n                            align : 'center',\r\n                            fontSize: '12'\r\n                          })\r\n                        ]}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='grid_info'>\r\n                <span className='title'>전체차량</span><Botspan reducer='INSP_HIST_MAIN' />\r\n              </div>\r\n            </div>\r\n            {/* <div className='total_info'>\r\n              <ul>\r\n                <li><span className='title'>잔류 차량</span><Mainspan flag={1} /></li>\r\n                <li><span className='title'>전체 검수 차량</span><Mainspan flag={2} /></li>\r\n                <li><span className='title'>입고량(KG)</span><Mainspan flag={3} /></li>\r\n              </ul>\r\n              <ul>\r\n                <li><span className='title'>검수대기</span><Mainspan flag={4} /></li>\r\n                <li><span className='title'>출차대기</span><Mainspan flag={5} /></li>\r\n                <li><span className='title'>입차대기</span><Mainspan flag={6} /></li>\r\n              </ul>\r\n            </div> */}\r\n          </div>\r\n          <div style={{paddingBottom:'10px', paddingTop:'200px'}} className='car_info'>\r\n            <div className='title'><span>배차번호</span><Detailspan flag={1}  reducer='INSP_HIST_MAIN'/></div>\r\n            <div style={{height:'130px'}} className='detail'>\r\n              <ul>\r\n                <li><span className='t'>차량번호</span><Detailspan flag={2}  reducer='INSP_HIST_MAIN'/></li>\r\n                <li><span className='t'>총중량(KG)</span><Detailspan flag={3} reducer='INSP_HIST_MAIN' /></li>\r\n                <li><span className='t'>입차시간</span><Detailspan flag={4}  reducer='INSP_HIST_MAIN'/></li> \r\n              </ul>\r\n            </div>\r\n\r\n            <Chit pgm={this.props.pgm} id={'chit_memo'}  reducer='INSP_HIST_MAIN'/>\r\n          </div>\r\n            <div className='cctv_viewer'>\r\n              <h4>녹화영상</h4>\r\n              {/* <div className='rain_info'>\r\n\t\t            <span className='title'>강수량</span><span className='value'>100mm</span>\r\n\t            </div> */}\r\n              <div className='cctv_list'>\r\n                {this.state.device[0] !== undefined && \r\n                  <RecImage device={this.state.device[0].camera.Guid} \r\n                            rtspUrl={this.state.device[0].rtspUrl[0]}\r\n                            rtspPort={this.state.device[0].rtspPort[0]}\r\n                            cam='STD_CAM_OPEN' \r\n                            focus='STD_CAM_FOCUS' \r\n                            rec='STD_CAM_REC' \r\n                            image='STD_CAM_IMG'/> \r\n                }\r\n                {/* {this.state.device[1] !== undefined && \r\n                  <RecImage device={this.state.device[1].camera.Guid} \r\n                            rtspUrl={this.state.device[1].rtspUrl[1]}\r\n                            rtspPort={this.state.device[1].rtspPort[1]}\r\n                            cam='DUM_CAM_OPEN' \r\n                            focus='DUM_CAM_FOCUS' \r\n                            rec='DUM_CAM_REC' \r\n                            image='DUM_CAM_IMG'/> \r\n                } */}\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default INSP_HIST;","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\CompleteBtn.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\RecImage.js",["514","515"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfs_dispatch } from '../../../Method/Store';\r\nimport ReactImageDtl from './RecImageDtl';\r\n\r\nfunction RecImage(props) {  \r\n\r\n  // const isOpen = useSelector((e) => {\r\n  //   return e.INSP_PROC_MAIN[props.cam];\r\n  // }, (p, n) => {\r\n  //   return p === n;\r\n  // });\r\n\r\n  // const isFocus = useSelector((e) => {\r\n  //   return e.INSP_PROC_MAIN[props.focus];\r\n  // }, (p, n) => {\r\n  //   return p === n;\r\n  // });\r\n \r\n  const img = <a href='#!'>\r\n                <div id={props.rec} className='cctv'>\r\n                  <div className='viewer'>\r\n                    <div style={{width:'100%', height:'100%'}}>\r\n                      <ReactImageDtl device={props.device} \r\n                                     rtspUrl={props.rtspUrl}\r\n                                     rtspPort={props.rtspPort}\r\n                                     cam={props.cam}\r\n                                     focus={props.focus}\r\n                                     rec={props.rec} \r\n                                     car={props.car}/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n\r\n  return (\r\n    <>\r\n      {img}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImage;","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\RecImageDtl.js",["516","517","518","519","520","521","522","523","524","525","526","527","528"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, MILESTONE_LIVE } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nimport ReactPlayer from 'react-player'\r\n\r\nfunction RecImageDtl(props) {\r\n  \r\n  const movieRef = useRef();\r\n  const prgRef = useRef();\r\n\r\n  const handleDuration = (duration) => {\r\n    prgRef.current.max = duration;\r\n  }\r\n  const handleSeekMouseDown = e => {\r\n    // prgRef.current.dataset.seeking = 'true';\r\n  }\r\n  const handleSeekMouseUp = e => {\r\n    // const value = prgRef.current.value;\r\n    \r\n    // movieRef.current.seekTo(5);\r\n    // prgRef.current.dataset.seeking = 'false';\r\n\r\n    const aa = movieRef.current.currentTime;\r\n    movieRef.current.currentTime += 0.5;\r\n    console.log(movieRef.current.currentTime);\r\n  }\r\n  const handleSeekChange = e => {\r\n    // this.setState({ played: parseFloat(e.target.value) })\r\n    // movieRef.current.currentTime += 0.5;\r\n  }\r\n  const  handleProgress = state => {\r\n    // // We only want to update time slider if we are not currently seeking\r\n    // if (!state.seeking) {\r\n    //   setState(e)\r\n    // }\r\n    // console.log(state);\r\n    \r\n    // if(prgRef.current.dataset.seeking === 'false')\r\n    //   prgRef.current.value = state.playedSeconds;\r\n  }\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_HIST_MAIN', props.cam, obj);\r\n  }\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  useEffect(() => { \r\n    var req = new XMLHttpRequest();\r\n    req.open('GET', 'http://211.231.136.182:3003/1.mp4', true);\r\n    req.responseType = 'blob';\r\n\r\n    req.onload = function() {\r\n      // Onload is triggered even on 404\r\n      // so we need to check the status code\r\n      if (this.status === 200) {\r\n          var videoBlob = this.response;\r\n          var vid = URL.createObjectURL(videoBlob); // IE10+\r\n          // Video is now downloaded\r\n          // and we can set it as source on the video element\r\n          movieRef.current.src = vid;\r\n      }\r\n    }\r\n    req.onerror = function() {\r\n      // Error\r\n    }\r\n\r\n    req.send();\r\n  })\r\n\r\n  const img = <>\r\n                <div style={{width:'100%', height:'100%'}}>\r\n                  {/* <ReactPlayer\r\n                     controls\r\n                     playing\r\n                     className='react-player'\r\n                     url='http://211.231.136.182:3003/1.mp4'\r\n                     width='100%'\r\n                     height='100%' /> */}\r\n                  <video \r\n                    ref={movieRef} \r\n                    width='100%' \r\n                    height='100%' \r\n                    controls \r\n                    autoPlay \r\n                    style={{objectFit:'fill'}}\r\n                    \r\n                    onCanPlay={e => console.log(e)}\r\n                  >\r\n                    {/* <source src='http://211.231.136.182:3003/1.mp4' type='video/mp4' /> */}\r\n                    <source type='video/mp4' />\r\n                  </video>\r\n                  {/* <input ref={prgRef} data-seeking={false} style={{width:'100%'}} defaultValue={0}\r\n                    type='range' min={0} step='any'\r\n                    // value={played}\r\n                    onMouseDown={e => handleSeekMouseDown(e)}\r\n                    onChange={e => handleSeekChange(e)}\r\n                    onMouseUp={e => handleSeekMouseUp(e)}\r\n                  /> */}\r\n                </div>\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\TabList.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\Botspan.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\CompleteBtn.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\RecImage.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\INSP_PROC.js",["529","530"],"//#region import\r\nimport React, { Component } from 'react';\r\n\r\nimport Input from '../../../Component/Control/Input';\r\n\r\nimport { gfc_initPgm, gfc_sleep, gfc_showMask, gfc_hideMask, gfc_chit_yn_YK } from '../../../Method/Comm';\r\nimport { gfs_getStoreValue, gfs_injectAsyncReducer, gfs_dispatch, gfs_subscribe, gfs_PGM_REDUCER } from '../../../Method/Store';\r\nimport { gfo_getCombo, gfo_getTextarea } from '../../../Method/Component';\r\nimport { gfg_getGrid, gfg_setSelectRow } from '../../../Method/Grid';\r\n\r\nimport Grid from '../../../Component/Grid/Grid';\r\nimport { Input as columnInput } from '../../../Component/Grid/Column/Input';\r\nimport { Image as columnImage } from '../../../Component/Grid/Column/Image';\r\nimport { Combobox as columnCombobox }  from '../../../Component/Grid/Column/Combobox';\r\nimport { TextArea as columnTextArea } from '../../../Component/Grid/Column/TextArea';\r\n\r\nimport Combobox from '../../../Component/Control/Combobox';\r\n\r\nimport Mainspan from '../Common/Mainspan';\r\nimport Detailspan from '../Common/Detailspan';\r\nimport Botspan from '../Common/Botspan';\r\nimport Chit from '../Common/Chit';\r\nimport CompleteBtn from './CompleteBtn';\r\nimport TabList from '../Common/TabList';\r\nimport RecImage from './RecImage';\r\n\r\nimport GifPlayer from 'react-gif-player';\r\n\r\nimport { YK_WEB_REQ } from '../../../WebReq/WebReq';\r\nimport { TOKEN, MILESTONE } from '../../../WebReq/WebReq';\r\nimport { throttle } from 'lodash';\r\n//#endregion\r\n\r\nclass INSP_PROC extends Component {\r\n\r\n  state = {\r\n    wait_list: [],\r\n    device: []\r\n  }\r\n\r\n  milestoneInfo = async() => {\r\n\r\n    // 선택된 공정의 카메라를 찾아서 스트리밍 받는다\r\n    // 지금은 하드코딩 되어있지만 나중엔 로컬스토리지와 콤보박스를 써서 선택된 공정의 아이피를 가지고 카메라를 가져온다.\r\n    // 1. 선택된 공정의 카메라 정보를 가지고온다.\r\n    // const milestone = TOKEN({reqAddr: 'LOGIN', MilestoneIP: gfs_getStoreValue('CAMERA_REDUCER', 'MilestoneIP')});\r\n    const milestone = await TOKEN({});\r\n    this.token  = milestone.data.TOKEN;\r\n    this.device = milestone.data.DEVICE;\r\n    if(this.token === ''){\r\n      alert('마일스톤 서버에 접속할 수 없습니다.'); \r\n    }else if(this.device === ''){\r\n      alert('마일스톤 서버에 접속할 수 없습니다.');\r\n    }else{\r\n      let ipArr = ['10.10.136.112', '10.10.136.128'];\r\n      let rtspUrl = ['rtsp://admin:admin13579@10.10.136.112:554/profile2/media.smp', 'rtsp://admin:pass@10.10.136.128:554/video1'];\r\n      let rtspPort = [3100, 3101];\r\n      let infoArr = [];\r\n\r\n      ipArr.forEach(e => {\r\n        const camera = this.device.find(e1 => e1.Name.indexOf(e) >= 0);\r\n        if(camera){\r\n          infoArr.push({camera, rtspUrl, rtspPort}); \r\n        }\r\n      })\r\n\r\n      if(infoArr.length > 0){\r\n        this.setState(this.state.device = infoArr);\r\n      }\r\n    }\r\n  }\r\n\r\n  //#region onActiveWindow 스토어 subscribe로 실행됨.\r\n  onActiveWindow = () => {\r\n    const activeWindow = gfs_getStoreValue('WINDOWFRAME_REDUCER', 'activeWindow');\r\n    if(activeWindow.programId === 'INSP_PROC'){\r\n      if(window.onkeydown === null){\r\n        window.onkeydown = e => this.onKeyDown(e);\r\n        window.onmousewheel = e => this.onMouseWheel(e);\r\n      }\r\n    }else{\r\n      if(window.onkeydown !== null){\r\n        window.onkeydown = null;\r\n        window.onmousewheel = null;\r\n      }\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region PTZ\r\n  debounceKeyDown = throttle((e, device) => {\r\n    let ptz = '';\r\n    if(e.keyCode === 37) ptz = 'left';\r\n    else if(e.keyCode === 38) ptz = 'up';\r\n    else if(e.keyCode === 39) ptz = 'right';\r\n    else if(e.keyCode === 40) ptz = 'down';\r\n\r\n    if(ptz !== ''){\r\n      MILESTONE({reqAddr: 'PTZ',\r\n      device: device.Guid,\r\n      ptz})\r\n    }\r\n  }, 1000);\r\n\r\n  debounceMouseWheel = throttle((e, device) => {\r\n    let ptz = '';\r\n    if(e.deltaX === -0){\r\n      if (e.wheelDelta > 0){\r\n        ptz = 'zoomin';\r\n      }else{\r\n        ptz = 'zoomout';\r\n      }\r\n    }\r\n\r\n    if(ptz !== ''){\r\n      MILESTONE({reqAddr: 'PTZ',\r\n      device: device.Guid,\r\n      ptz})\r\n    }\r\n  }, 1000);\r\n\r\n  onKeyDown = (e) => {\r\n    e.stopPropagation();\r\n\r\n    const STD_CAM_FOCUS = gfs_getStoreValue('INSP_PROC_MAIN', 'STD_CAM_FOCUS');\r\n    const DUM_CAM_FOCUS = gfs_getStoreValue('INSP_PROC_MAIN', 'DUM_CAM_FOCUS');\r\n    \r\n    if(STD_CAM_FOCUS || DUM_CAM_FOCUS){\r\n      this.debounceKeyDown(e, STD_CAM_FOCUS ? this.device[0] : this.device[1]);\r\n    }\r\n  }\r\n\r\n  onMouseWheel = (e) => {\r\n    e.stopPropagation();\r\n\r\n    const STD_CAM_FOCUS = gfs_getStoreValue('INSP_PROC_MAIN', 'STD_CAM_FOCUS');\r\n    const DUM_CAM_FOCUS = gfs_getStoreValue('INSP_PROC_MAIN', 'DUM_CAM_FOCUS');\r\n    \r\n    if(STD_CAM_FOCUS || DUM_CAM_FOCUS){\r\n      this.debounceMouseWheel(e, STD_CAM_FOCUS ? this.device[0] : this.device[1]);\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region 녹화제어\r\n  startRec = (device, scaleNo, recOwner) => {\r\n    MILESTONE({reqAddr : 'StartManualRecording',\r\n               device  : device.Guid,\r\n               scaleNo,\r\n               recOwner})\r\n  }\r\n\r\n  stopRec = (device, scaleNo) => {\r\n    MILESTONE({reqAddr : 'StopManualRecording',\r\n               device  : device.Guid,\r\n               scaleNo})\r\n  }\r\n  //#endregion\r\n\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    gfc_initPgm(props.pgm, props.nam, this)\r\n\r\n    //#region 리듀서\r\n    const INSP_PROC_MAIN = (nowState, action) => {\r\n\r\n      if(action.reducer !== 'INSP_PROC_MAIN') {\r\n        return {\r\n          MAIN_WAIT    : nowState === undefined ? 0 : nowState.MAIN_WAIT,\r\n          MAIN_TOTAL   : nowState === undefined ? 0 : nowState.MAIN_TOTAL,\r\n          MAIN_WEIGHT  : nowState === undefined ? 0 : nowState.MAIN_WEIGHT,\r\n          BOT_TOTAL    : nowState === undefined ? 0 : nowState.BOT_TOTAL,\r\n          PROC_WAIT    : nowState === undefined ? 0 : nowState.PROC_WAIT,\r\n          DEPT_WAIT    : nowState === undefined ? 0 : nowState.DEPT_WAIT,\r\n          ENTR_WAIT    : nowState === undefined ? 0 : nowState.ENTR_WAIT,\r\n \r\n          DETAIL_SCALE : nowState === undefined ? '' : nowState.DETAIL_SCALE,\r\n          DETAIL_CARNO : nowState === undefined ? '' : nowState.DETAIL_CARNO,\r\n          DETAIL_WEIGHT: nowState === undefined ? '' : nowState.DETAIL_WEIGHT,\r\n          DETAIL_DATE  : nowState === undefined ? '' : nowState.DETAIL_DATE,\r\n\r\n          STD_CAM_IMG  : nowState === undefined ? null : nowState.STD_CAM_IMG,\r\n          DUM_CAM_IMG  : nowState === undefined ? null : nowState.DUM_CAM_IMG,\r\n\r\n          STD_CAM_OPEN : nowState === undefined ? false : nowState.STD_CAM_OPEN,\r\n          DUM_CAM_OPEN : nowState === undefined ? false : nowState.DUM_CAM_OPEN,\r\n\r\n          STD_CAM_FOCUS: nowState === undefined ? false : nowState.STD_CAM_FOCUS,\r\n          DUM_CAM_FOCUS: nowState === undefined ? false : nowState.DUM_CAM_FOCUS,\r\n\r\n          STD_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.STD_CAM_REC,\r\n          DUM_CAM_REC  : nowState === undefined ? {\r\n                                                    rec     : false,\r\n                                                    time    : '00:00'\r\n                                                  } : nowState.DUM_CAM_REC,\r\n\r\n          CHIT_MEMO    : nowState === undefined ? 'N' : nowState.CHIT_MEMO,\r\n          \r\n          CHIT_INFO    : nowState === undefined ? {\r\n                                                    date     : '',\r\n                                                    scaleNumb: '',\r\n                                                    carNumb  : '',\r\n                                                    vender   : '',\r\n                                                    itemFlag : '',\r\n                                                    Wgt      : '',\r\n                                                    loc      : '',\r\n                                                    user     : '',\r\n                                                    chit     : 'N'\r\n                                                  } : nowState.CHIT_INFO\r\n        };\r\n      }\r\n\r\n      if(action.type === 'MAIN_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WAIT : action.MAIN_WAIT\r\n        })\r\n      }else if(action.type === 'MAIN_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_TOTAL : action.MAIN_TOTAL\r\n        })\r\n      }else if(action.type === 'MAIN_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          MAIN_WEIGHT : action.MAIN_WEIGHT\r\n        })\r\n      }else if(action.type === 'BOT_TOTAL'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          BOT_TOTAL : action.BOT_TOTAL\r\n        })\r\n      }else if(action.type === 'PROC_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          PROC_WAIT : action.PROC_WAIT\r\n        })\r\n      }else if(action.type === 'DEPT_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DEPT_WAIT : action.DEPT_WAIT\r\n        })\r\n      }else if(action.type === 'ENTR_WAIT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          ENTR_WAIT : action.ENTR_WAIT\r\n        })\r\n      }else if(action.type === 'DETAIL_SCALE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_SCALE : action.DETAIL_SCALE\r\n        })\r\n      }else if(action.type === 'DETAIL_CARNO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_CARNO : action.DETAIL_CARNO\r\n        })\r\n      }else if(action.type === 'DETAIL_WEIGHT'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_WEIGHT : action.DETAIL_WEIGHT\r\n        })\r\n      }else if(action.type === 'DETAIL_DATE'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DETAIL_DATE : action.DETAIL_DATE\r\n        })\r\n      }else if(action.type === 'STD_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_IMG : action.STD_CAM_IMG\r\n        })\r\n      }else if(action.type === 'DUM_CAM_IMG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_IMG : action.DUM_CAM_IMG\r\n        })\r\n      }else if(action.type === 'STD_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_OPEN : action.STD_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'DUM_CAM_OPEN'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_OPEN : action.DUM_CAM_OPEN\r\n        })\r\n      }else if(action.type === 'STD_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_FOCUS : action.STD_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'DUM_CAM_FOCUS'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_FOCUS : action.DUM_CAM_FOCUS\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.STD_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec  : action.rec,\r\n            //  car  : action.car,\r\n            time : nowState.DUM_CAM_REC.time\r\n          }\r\n        })\r\n      }else if(action.type === 'STD_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          STD_CAM_REC : {\r\n            rec     : nowState.STD_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'DUM_CAM_REC_TIME'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          DUM_CAM_REC : {\r\n            rec     : nowState.DUM_CAM_REC.rec,\r\n            //  car     : action.car,\r\n            time    : action.time\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO_ITEM_FLAG'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     :  nowState.CHIT_INFO.date,\r\n            scaleNumb:  nowState.CHIT_INFO.scaleNumb,\r\n            carNumb  :  nowState.CHIT_INFO.carNumb,\r\n            vender   :  nowState.CHIT_INFO.vender,\r\n            itemFlag :  action.itemFlag,\r\n            Wgt      :  nowState.CHIT_INFO.Wgt,\r\n            loc      :  nowState.CHIT_INFO.loc,\r\n            user     :  nowState.CHIT_INFO.user,\r\n            chit     :  nowState.CHIT_INFO.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_INFO'){\r\n\r\n        return Object.assign({}, nowState, {\r\n          CHIT_INFO : {\r\n            date     : action.date,\r\n            scaleNumb: action.scaleNumb,\r\n            carNumb  : action.carNumb,\r\n            vender   : action.vender,\r\n            itemFlag : action.itemFlag,\r\n            Wgt      : action.Wgt,\r\n            loc      : action.loc,\r\n            user     : action.user,\r\n            chit     : action.chit\r\n          }\r\n        })\r\n      }else if(action.type === 'CHIT_MEMO'){\r\n        return Object.assign({}, nowState, {\r\n          CHIT_MEMO : action.CHIT_MEMO\r\n        })\r\n      }\r\n    }\r\n\r\n    gfs_injectAsyncReducer('INSP_PROC_MAIN', INSP_PROC_MAIN);\r\n    gfs_subscribe(this.onActiveWindow);\r\n    //#endregion\r\n  }\r\n\r\n  Init = async() => {\r\n    this.milestoneInfo();\r\n\r\n    //#region 검수이력 Open\r\n    gfs_PGM_REDUCER('INSP_HIST');\r\n\r\n    gfs_dispatch('WINDOWFRAME_REDUCER', 'SELECTWINDOW', \r\n    ({\r\n      windowZindex: 0,\r\n      activeWindow: {programId: 'INSP_HIST',\r\n                      programNam: '검수이력'\r\n                    }\r\n    }));\r\n    //#endregion\r\n\r\n    await gfc_sleep(50);\r\n\r\n    gfs_dispatch('WINDOWFRAME_REDUCER', 'SELECTWINDOW', \r\n    ({\r\n      windowZindex: 1,\r\n      activeWindow: {programId: 'INSP_PROC',\r\n                      programNam: '검수진행'\r\n                    }\r\n    }));\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.Init();\r\n  }\r\n\r\n  Retrieve = async () => {\r\n    // const search_car_no = gfo_getInput(this.props.pgm, 'search_car_no').getValue();\r\n    \r\n    // console.log(gfs_getStoreValue('INSP_PROC_MAIN', 'MAIN_WAIT'));\r\n\r\n    gfc_showMask();\r\n\r\n    const headData = await YK_WEB_REQ('tally_mstr_header.jsp');\r\n    const header = headData.data.dataSend;\r\n    if(header){\r\n      gfs_dispatch('INSP_PROC_MAIN', 'MAIN_WAIT', {MAIN_WAIT: header[0].rCar});\r\n      gfs_dispatch('INSP_PROC_MAIN', 'MAIN_TOTAL', {MAIN_TOTAL: header[0].eCar});\r\n      gfs_dispatch('INSP_PROC_MAIN', 'MAIN_WEIGHT', {MAIN_WEIGHT: header[0].eKg});\r\n    }else{\r\n      gfs_dispatch('INSP_PROC_MAIN', 'MAIN_WAIT', {MAIN_WAIT: 0});\r\n      gfs_dispatch('INSP_PROC_MAIN', 'MAIN_TOTAL', {MAIN_TOTAL: 0});\r\n      gfs_dispatch('INSP_PROC_MAIN', 'MAIN_WEIGHT', {MAIN_WEIGHT: 0});\r\n    }\r\n\r\n    const mainData = await YK_WEB_REQ('tally_mstr_wait.jsp');\r\n    const main = mainData.data.dataSend;\r\n    const grid = gfg_getGrid(this.props.pgm, 'main10');\r\n    if(main){\r\n      grid.resetData(main);\r\n      gfg_setSelectRow(grid);\r\n\r\n      gfs_dispatch('INSP_PROC_MAIN', 'PROC_WAIT', {PROC_WAIT: main.length});\r\n      gfs_dispatch('INSP_PROC_MAIN', 'BOT_TOTAL', {BOT_TOTAL: main.length});\r\n    }else{\r\n      gfs_dispatch('INSP_PROC_MAIN', 'PROC_WAIT', {PROC_WAIT: 0});\r\n      gfs_dispatch('INSP_PROC_MAIN', 'BOT_TOTAL', {BOT_TOTAL: 0});\r\n    }\r\n\r\n    // const data = {'dataSend':[\r\n    //               {'date':'2021-06-24 13:39:00','vendor':'경원스틸(주)\\/ 대경스틸(주)','itemFlag':'M1KDO0001','totalWgt':'43500','scaleNumb':'202106240215','carNumb':'광주88바5884'},\r\n    //               {'date':'2021-06-24 13:43:39','vendor':'(주)진광스틸\\/ (주)진광스틸','itemFlag':'M1KDO0001','totalWgt':'36960','scaleNumb':'202106240218','carNumb':'경남80사5946'},\r\n    //               {'date':'2021-06-24 13:45:05','vendor':'(주)거산\\/ (주)거산 동부산 지점','itemFlag':'M1KDO0001','totalWgt':'35020','scaleNumb':'202106240219','carNumb':'81버7666'},\r\n    //               {'date':'2021-06-24 14:21:42','vendor':'(주)우신\\/ 주식회사 우신','itemFlag':'M1KDO0001','totalWgt':'43620','scaleNumb':'202106240230','carNumb':'경북86아4725'},\r\n    //               {'date':'2021-06-24 14:26:24','vendor':'(주)진광스틸\\/ 금와산업','itemFlag':'M1KDO0002','totalWgt':'43800','scaleNumb':'202106240233','carNumb':'경남82사5143'},\r\n    //               {'date':'2021-06-24 14:34:09','vendor':'(주)대지에스텍\\/ ㈜대지에스텍','itemFlag':'M1KDO0001','totalWgt':'36240','scaleNumb':'202106240236','carNumb':'경남82사3319'},\r\n    //               {'date':'2021-06-24 14:40:18','vendor':'(주)진광스틸\\/ (주)진광스틸','itemFlag':'M1KDO0001','totalWgt':'31800','scaleNumb':'202106240241','carNumb':'부산94아3089'},\r\n    //               {'date':'2021-06-24 15:15:05','vendor':'(주)와이제이스틸\\/ 강한스틸철','itemFlag':'M1KDO0002','totalWgt':'43100','scaleNumb':'202106240248','carNumb':'경북83아8533'},\r\n    //               {'date':'2021-06-24 15:42:51','vendor':'(주)와이제이스틸\\/ 강한스틸철','itemFlag':'M1KDO0001','totalWgt':'43320','scaleNumb':'202106240255','carNumb':'경북82아8342'},\r\n    //               {'date':'2021-06-24 15:49:33','vendor':'(주)대지에스텍\\/ ㈜대지에스텍','itemFlag':'M1KDO0001','totalWgt':'44040','scaleNumb':'202106240257','carNumb':'부산92아7287'}\r\n    //             ]\r\n    //           }['dataSend'];\r\n\r\n    // const sort = [];\r\n    // main.forEach(e => {\r\n    //   if(e.rec === '1'){\r\n    //     sort.unshift(e);\r\n    //   }else{\r\n    //     sort.push(e);\r\n    //   }\r\n    // })\r\n\r\n    // grid.resetData(\r\n    //   sort\r\n    // );\r\n\r\n    //출차대기\r\n    const headData2 = await YK_WEB_REQ('tally_mstr_pass.jsp');\r\n    const header2 = headData2.data.dataSend;\r\n    if(header2){\r\n      gfs_dispatch('INSP_PROC_MAIN', 'DEPT_WAIT', {DEPT_WAIT: header2.length});\r\n    }else{\r\n      gfs_dispatch('INSP_PROC_MAIN', 'DEPT_WAIT', {DEPT_WAIT: 0});\r\n    }\r\n\r\n    //입차대기\r\n    const headData3 = await YK_WEB_REQ('tally_mstr_drive.jsp');\r\n    const header3 = headData3.data.dataSend;\r\n    if(header3){\r\n      gfs_dispatch('INSP_PROC_MAIN', 'ENTR_WAIT', {ENTR_WAIT: header3.length});\r\n    }else{\r\n      gfs_dispatch('INSP_PROC_MAIN', 'ENTR_WAIT', {ENTR_WAIT: 0});\r\n    }\r\n\r\n    gfc_hideMask();\r\n  }\r\n\r\n  onSelectChange = async (e) => {\r\n    if(e === null) return;\r\n\r\n    gfo_getCombo(this.props.pgm, 'detail_grade1').setValue(''); //고철등급\r\n    gfo_getCombo(this.props.pgm, 'detail_grade2').setValue(''); //상세고철등급\r\n    gfo_getCombo(this.props.pgm, 'detail_subt').setValue(''); //감량중량\r\n    gfo_getCombo(this.props.pgm, 'detail_subt_leg').setValue(''); //감량사유\r\n    gfo_getCombo(this.props.pgm, 'detail_depr').setValue(''); //감가내역\r\n    gfo_getCombo(this.props.pgm, 'detail_depr2').setValue(''); //감가비율\r\n    gfo_getCombo(this.props.pgm, 'detail_car').setValue(''); //차종구분\r\n    gfo_getCombo(this.props.pgm, 'detail_rtn').setValue(''); //반품구분\r\n    gfo_getCombo(this.props.pgm, 'detail_rtn2').setValue(''); //반품구분사유\r\n    gfo_getCombo(this.props.pgm, 'detail_warning').setValue(''); //경고\r\n\r\n    gfs_dispatch('INSP_PROC_MAIN', 'DETAIL_SCALE', {DETAIL_SCALE: e.scaleNumb});\r\n    gfs_dispatch('INSP_PROC_MAIN', 'DETAIL_CARNO', {DETAIL_CARNO: e.carNumb});\r\n    gfs_dispatch('INSP_PROC_MAIN', 'DETAIL_WEIGHT', {DETAIL_WEIGHT: e.totalWgt});\r\n    gfs_dispatch('INSP_PROC_MAIN', 'DETAIL_DATE', {DETAIL_DATE: e.date});\r\n\r\n    //계량표 정보여부\r\n    const chitInfoYn = await YK_WEB_REQ(`tally_chit.jsp?scaleNumb=${e.scaleNumb}`);\r\n    if(!chitInfoYn.data.dataSend){\r\n      alert('계량표 정보가 없습니다.');\r\n      return;\r\n    }\r\n\r\n    //계량표 여부 확인.\r\n    const chitYn = await gfc_chit_yn_YK(e.scaleNumb);\r\n    if(chitYn.data === 'N'){\r\n      gfs_dispatch('INSP_PROC_MAIN', 'CHIT_INFO', {\r\n        date     : chitInfoYn.data.dataSend[0].date,\r\n        scaleNumb: chitInfoYn.data.dataSend[0].scaleNumb,\r\n        carNumb  : chitInfoYn.data.dataSend[0].carNumb,\r\n        vender   : chitInfoYn.data.dataSend[0].vendor,\r\n        itemFlag : '',\r\n        Wgt      : chitInfoYn.data.dataSend[0].totalWgt,\r\n        loc      : '부산',\r\n        user     : gfs_getStoreValue('USER_REDUCER', 'USER_NAM'),\r\n        chit     : 'N'\r\n      });\r\n    }else{\r\n      gfs_dispatch('INSP_PROC_MAIN', 'CHIT_INFO', {\r\n        chit     : chitYn.data\r\n      });\r\n    }\r\n\r\n    //계량표 정보 확인.\r\n    // const headData = YK_WEB_REQ(`tally_chit.jsp?scaleNumb=202107140001`);\r\n    // const headData = YK_WEB_REQ(`tally_chit.jsp?scaleNumb=${e.scaleNumb}`);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='win_body' style={{borderRadius:'0px', borderWidth:'0px 1px 0px 1px'}}>\r\n        <div className='car_manager'>\r\n          <div className='car_list'>\r\n            <div className='search_line'>\r\n              <div className='wp'>\r\n                <div style={{position:'absolute', left:0, top:0, width:'124px', height:'42px', fontSize:'16px'}}>\r\n                  <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'search_tp'\r\n                            value   = 'code'\r\n                            display = 'name'\r\n                            width   = {124}\r\n                            height  = {42}\r\n                            emptyRow\r\n                            data    = {[{\r\n                              code: '1',\r\n                              name: '배차번호'\r\n                            },{\r\n                              code: '2',\r\n                              name: '차량번호'\r\n                            },{\r\n                              code: '3',\r\n                              name: '등급'\r\n                            },{\r\n                              code: '4',\r\n                              name: '업체'\r\n                            }]}\r\n                  />\r\n                </div>\r\n                <Input pgm         = {this.props.pgm}\r\n                       id          = 'search_txt'\r\n                       height      = '42'\r\n                       placeHolder = '검색어를 입력하세요'\r\n                       paddingLeft = '14'\r\n                       width       = '100%'\r\n                       type        = 'textarea'\r\n                      //  padding-bottom:2px; padding-left:14px; border:none; font-size:22px;\r\n                        />\r\n                <button>검색</button>\r\n              </div>\r\n            </div>\r\n            <div className='grid'>\r\n              <div className='wp'>\r\n                <div style={{width:'100%', height:'100%', overflow:'auto'}}>\r\n                  <Grid pgm={this.props.pgm}\r\n                        id ='main10'\r\n                        selectionChange={(e) => this.onSelectChange(e)}\r\n                        rowHeight={46}\r\n                        rowHeaders= {[{ type: 'rowNum', width: 40 }]}\r\n                        columns={[\r\n                          columnInput({\r\n                            name: 'scaleNumb',\r\n                            header: '배차번호',\r\n                            width : 155,\r\n                            readOnly: true,\r\n                            color : '#0063A9',\r\n                            align : 'center',\r\n                            fontSize: '18'\r\n                          }),\r\n                          columnInput({\r\n                            name: 'carNumb',\r\n                            header: '차량번호',\r\n                            width : 135,\r\n                            readOnly: true,\r\n                            align : 'center',\r\n                            fontSize: '18'\r\n                          }),   \r\n                          columnCombobox({\r\n                            name: 'itemFlag', \r\n                            header: '구분',\r\n                            readOnly: true,\r\n                            width   : 75,\r\n                            data: [{\r\n                              'code': 'M1KDO0001',\r\n                              'name': '고철'\r\n                            },{\r\n                              'code': 'M1KDO0002',\r\n                              'name': '분철'\r\n                            }],\r\n                            editor: {\r\n                              value   : 'code',\r\n                              display : 'name'\r\n                            }\r\n                          }),\r\n                          columnTextArea({\r\n                            name  : 'date',\r\n                            header: '입차시간',\r\n                            width : 80,\r\n                            height: 38,\r\n                            // paddingTop: ''\r\n                            readOnly: true,\r\n                            valign:'middle',\r\n                            format: gfs_getStoreValue('USER_REDUCER', 'YMD_FORMAT'),\r\n                            time  : 'HH:mm'\r\n                          }),\r\n                          columnTextArea({\r\n                            name: 'vendor',\r\n                            header: 'Vendor',\r\n                            width : 150,\r\n                            height: 38,\r\n                            readOnly: true,\r\n                            align : 'left'\r\n                          }),\r\n                          columnImage({\r\n                            name: 'rec',\r\n                            header: '녹화중',\r\n                            width: 70,\r\n                            imgItem:[\r\n                              {'code':'0', 'value': ''},\r\n                              {'code':'1', 'value': <GifPlayer height='30' width='65' gif={require('../../../Image/yk_rec01.gif').default} autoplay/>}\r\n                            ]\r\n                          })\r\n                        ]}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className='grid_info'>\r\n                <span className='title'>잔여차량</span><Botspan reducer='INSP_PROC_MAIN' />\r\n              </div>\r\n            </div>\r\n            <div className='total_info'>\r\n              <ul>\r\n                <li><span className='title'>잔류 차량</span><Mainspan reducer='INSP_PROC_MAIN' flag={1} /></li>\r\n                <li><span className='title'>전체 검수 차량</span><Mainspan reducer='INSP_PROC_MAIN' flag={2} /></li>\r\n                <li><span className='title'>입고량(KG)</span><Mainspan reducer='INSP_PROC_MAIN' flag={3} /></li>\r\n              </ul>\r\n              <ul>\r\n                <li><span className='title'>검수대기</span><Mainspan reducer='INSP_PROC_MAIN' flag={4} /></li>\r\n                <li><span className='title'>출차대기</span><Mainspan reducer='INSP_PROC_MAIN' flag={5} /></li>\r\n                <li><span className='title'>입차대기</span><Mainspan reducer='INSP_PROC_MAIN' flag={6} /></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className='car_info'>\r\n            <div className='title'><span>배차번호</span><Detailspan reducer='INSP_PROC_MAIN' flag={1} /></div>\r\n            <div className='detail'>\r\n              <ul>\r\n                <li><span className='t'>차량번호</span><Detailspan reducer='INSP_PROC_MAIN' flag={2} /></li>\r\n                <li><span className='t'>총중량(KG)</span><Detailspan reducer='INSP_PROC_MAIN' flag={3} /></li>\r\n                <li><span className='t'>입차시간</span><Detailspan reducer='INSP_PROC_MAIN' flag={4} /></li>\r\n                <li>\r\n                    <button onClick={() => \r\n                      {\r\n                        const device = this.device[0];\r\n                        this.startRec(device, 'testScale', '0');\r\n                      }}>on1\r\n                    </button>\r\n                    <button onClick={() => \r\n                      {\r\n                        const device = this.device[0];\r\n                        this.stopRec(device, 'testScale');\r\n                      }}>off1\r\n                    </button>\r\n                    <button onClick={() => gfs_dispatch('INSP_PROC_MAIN', 'DUM_CAM_REC', {rec: true, car: '1234'})}>on2</button>\r\n                    <button onClick={() => gfs_dispatch('INSP_PROC_MAIN', 'DUM_CAM_REC', {rec: false, car: '1234'})}>off2</button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <TabList pgm={this.props.pgm} id={this.props.id} reducer='INSP_PROC_MAIN'/>\r\n\r\n            <div className='tab_content' id='tabMain'>\r\n              <div className='input_list on' id={`content1_${this.props.pgm}`}>\r\n                <ul>\r\n                  <li>\r\n                    <h5>등급책정</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Combobox pgm     = {this.props.pgm}\r\n                                id      = 'detail_grade1'\r\n                                value   = 'itemCode'\r\n                                display = 'item'\r\n                                placeholder = '고철등급 검색'\r\n                                height  = {42}\r\n                                data    = ''\r\n                                onFocus = {ComboCreate => {\r\n                                  YK_WEB_REQ('tally_process_pop.jsp?division=P005', {})\r\n                                    .then(res => {\r\n                                      ComboCreate({data   : res.data.dataSend,\r\n                                                  value  : 'itemCode',\r\n                                                  display: 'item'});\r\n                                    })\r\n                                }}\r\n                      />\r\n                    </div>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                              id      = 'detail_grade2'\r\n                              value   = 'itemCode'\r\n                              display = 'item'\r\n                              data    = ''\r\n                              onFocus = {ComboCreate => {\r\n                                const value = gfo_getCombo(this.props.pgm, 'detail_grade1').getValue();\r\n                                if(value === null) return;\r\n\r\n                                YK_WEB_REQ(`tally_process_pop.jsp?division=${value}`, {})\r\n                                  .then(res => {\r\n                                    ComboCreate({data   : res.data.dataSend,\r\n                                                value  : 'itemCode',\r\n                                                display: 'item'});\r\n                                  })\r\n                              }}\r\n                    />\r\n                  </li>\r\n                  <li>\r\n                    <h5>감량중량</h5>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_subt'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '감량중량 검색(KG)'\r\n                          data    = ''\r\n                          onFocus = {ComboCreate => {\r\n                            YK_WEB_REQ('tally_process_pop.jsp?division=P535', {})\r\n                              .then(res => {\r\n                                ComboCreate({data   : res.data.dataSend,\r\n                                            value  : 'itemCode',\r\n                                            display: 'item',\r\n                                            emptyRow: true});\r\n                              })\r\n                          }}\r\n                  />\r\n                  </li>\r\n                  <li>\r\n                    <h5>감량사유</h5>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_subt_leg'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '감량사유 검색'\r\n                          data    = ''\r\n                          onFocus = {ComboCreate => {\r\n                            YK_WEB_REQ('tally_process_pop.jsp?division=P620', {})\r\n                              .then(res => {\r\n                                ComboCreate({data   : res.data.dataSend,\r\n                                            value  : 'itemCode',\r\n                                            display: 'item',\r\n                                            emptyRow: true});\r\n                              })\r\n                          }}\r\n                  />\r\n                  </li>\r\n                  <li>\r\n                    <h5>감가내역</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'detail_depr'\r\n                            value   = 'itemCode'\r\n                            display = 'item'\r\n                            placeholder = '감가내역 검색'\r\n                            data    = ''\r\n                            onFocus = {ComboCreate => {\r\n                              YK_WEB_REQ('tally_process_pop.jsp?division=P130', {})\r\n                                .then(res => {\r\n                                  ComboCreate({data   : res.data.dataSend,\r\n                                              value  : 'itemCode',\r\n                                              display: 'item',\r\n                                              emptyRow: true});\r\n                                })\r\n                            }}\r\n                      />\r\n                    </div>\r\n                    <Combobox pgm = {this.props.pgm}\r\n                          id      = 'detail_depr2'\r\n                          value   = 'code'\r\n                          display = 'name'\r\n                          placeholder = '감가비율'\r\n                          data    = {[{\r\n                            'code': '10',\r\n                            'name': '10%'\r\n                          },{\r\n                            'code': '20',\r\n                            'name': '20%'\r\n                          },{\r\n                            'code': '30',\r\n                            'name': '30%'\r\n                          },{\r\n                            'code': '40',\r\n                            'name': '40%'\r\n                          },{\r\n                            'code': '50',\r\n                            'name': '50%'\r\n                          },{\r\n                            'code': '60',\r\n                            'name': '60%'\r\n                          },{\r\n                            'code': '70',\r\n                            'name': '70%'\r\n                          },{\r\n                            'code': '80',\r\n                            'name': '80%'\r\n                          },{\r\n                            'code': '90',\r\n                            'name': '90%'\r\n                          },{\r\n                            'code': '100',\r\n                            'name': '100%'\r\n                          }]}\r\n                          emptyRow\r\n                    />\r\n                  </li>\r\n                  {/* <li>\r\n                    <h5>하차구역</h5>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_out'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '하차구역 검색(SECTOR)'\r\n                          data    = ''\r\n                          onFocus = {ComboCreate => {\r\n                            YK_WEB_REQ('tally_process_pop.jsp?division=P530', {})\r\n                              .then(res => {\r\n                                ComboCreate({data   : res.data.dataSend,\r\n                                            value  : 'itemCode',\r\n                                            display: 'item'});\r\n                              })\r\n                          }}\r\n                  />\r\n                  </li> */}\r\n                  <li>\r\n                    <h5>차종구분</h5>\r\n                    <Combobox pgm     = {this.props.pgm}\r\n                          id      = 'detail_car'\r\n                          value   = 'itemCode'\r\n                          display = 'item'\r\n                          placeholder = '차종선택'\r\n                          data    = ''\r\n                          onFocus = {ComboCreate => {\r\n                            YK_WEB_REQ('tally_process_pop.jsp?division=P700', {})\r\n                              .then(res => {\r\n                                ComboCreate({data   : res.data.dataSend,\r\n                                            value  : 'itemCode',\r\n                                            display: 'item'});\r\n                              })\r\n                          }}\r\n                  />\r\n                  </li>\r\n                  <li>\r\n                    <h5>반품구분</h5>\r\n                    <div style={{marginBottom:'5px'}}>\r\n                      <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'detail_rtn'\r\n                            value   = 'itemCode'\r\n                            display = 'item'\r\n                            placeholder = '일부,전량 선택'\r\n                            data    = ''\r\n                            onFocus = {ComboCreate => {\r\n                              YK_WEB_REQ('tally_process_pop.jsp?division=P110', {})\r\n                                .then(res => {\r\n                                  ComboCreate({data   : res.data.dataSend,\r\n                                              value  : 'itemCode',\r\n                                              display: 'item',\r\n                                              emptyRow: true});\r\n                                })\r\n                            }}\r\n                    />\r\n                  </div>\r\n                  <Combobox pgm     = {this.props.pgm}\r\n                            id      = 'detail_rtn2'\r\n                            value   = 'itemCode'\r\n                            display = 'item'\r\n                            data    = ''\r\n                            onFocus = {ComboCreate => {\r\n                              const value = gfo_getCombo(this.props.pgm, 'detail_rtn').getValue();\r\n                              if(value === null) return;\r\n\r\n                              YK_WEB_REQ(`tally_process_pop.jsp?division=P120`, {})\r\n                                .then(res => {\r\n                                  ComboCreate({data   : res.data.dataSend,\r\n                                              value  : 'itemCode',\r\n                                              display: 'item'});\r\n                                })\r\n                            }}\r\n                    />\r\n                  </li>\r\n                  <li>\r\n                    <h5>경고</h5>\r\n                    <Combobox pgm = {this.props.pgm}\r\n                          id      = 'detail_warning'\r\n                          value   = 'code'\r\n                          display = 'name'\r\n                          placeholder = '경고'\r\n                          data    = {[{\r\n                            'code': 'Y',\r\n                            'name': '경고'\r\n                          }]}\r\n                          emptyRow\r\n                    />\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              \r\n              <Chit pgm={this.props.pgm} id={'chit_memo'} reducer='INSP_PROC_MAIN'/>\r\n\r\n\r\n            </div>\r\n            \r\n            <CompleteBtn pgm={this.props.pgm}/>\r\n          </div>\r\n            <div className='cctv_viewer'>\r\n              <h4>실시간 CCTV</h4>\r\n              <div className='rain_info'>\r\n\t\t            <span className='title'>강수량</span><span className='value'>100mm</span>\r\n\t            </div>\r\n              <div className='cctv_list'>\r\n                {/* {this.state.device[0] !== undefined && \r\n                  <RecImage device={this.state.device[0].camera.Guid} \r\n                            rtspUrl={this.state.device[0].rtspUrl[0]}\r\n                            rtspPort={this.state.device[0].rtspPort[0]}\r\n                            cam='STD_CAM_OPEN' \r\n                            focus='STD_CAM_FOCUS' \r\n                            rec='STD_CAM_REC' \r\n                            image='STD_CAM_IMG'/> \r\n                }\r\n                {this.state.device[1] !== undefined && \r\n                  <RecImage device={this.state.device[1].camera.Guid} \r\n                            rtspUrl={this.state.device[1].rtspUrl[1]}\r\n                            rtspPort={this.state.device[1].rtspPort[1]}\r\n                            cam='DUM_CAM_OPEN' \r\n                            focus='DUM_CAM_FOCUS' \r\n                            rec='DUM_CAM_REC' \r\n                            image='DUM_CAM_IMG'/> \r\n                } */}\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default INSP_PROC;","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\RecTimer.js",["531","532","533"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport GifPlayer from 'react-gif-player';\r\nimport { MILESTONE } from '../../../WebReq/WebReq';\r\n\r\n// let interval;\r\n\r\nfunction RecTimer(props) {\r\n\r\n  const isRec = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.rec];\r\n  }, (p, n) => {\r\n    return p.rec === n.rec;\r\n  });\r\n\r\n  const time = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.rec];\r\n  }, (p, n) => {\r\n    return p.time === n.time;\r\n  });\r\n\r\n  useEffect(e => {\r\n\r\n    // setInterval(() => {\r\n    //   MILESTONE({\r\n    //     reqAddr: 'Status',\r\n    //     device: props.device\r\n    //   }).then(\r\n    //     e => {\r\n    //       const recYn = e.data.recYn;\r\n    //       const recDt = e.data.recDt;\r\n    //       const isRec = gfs_getStoreValue('INSP_PROC_MAIN', props.rec);\r\n\r\n    //       if(recYn === '0' || recYn === '2'){\r\n    //         if(isRec.rec === false){\r\n    //           gfs_dispatch('INSP_PROC_MAIN', `${props.rec}`, {rec: true, time: recDt});\r\n    //         }\r\n            \r\n    //         gfs_dispatch('INSP_PROC_MAIN', `${props.rec}_TIME`, {rec: true, time: recDt});\r\n    //       }else{\r\n    //         if(isRec.rec === true){\r\n    //           gfs_dispatch('INSP_PROC_MAIN', `${props.rec}`, {rec: false, time: '00:00'});\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   )\r\n\r\n    // }, 1000);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>   \r\n      {isRec.rec &&\r\n        <>\r\n          <div style={{float:'left', width:'40', height:'30', marginTop:'5'}}>\r\n            <GifPlayer height='30' width='30' gif={require('../../../Image/yk_rec02.gif').default} autoplay/>\r\n          </div>\r\n          <div style={{float:'left', width:'70', height:'30', marginTop:'5'}}>\r\n            <h2 style={{color:'white'}}>{time.time}</h2>\r\n          </div>\r\n        </>\r\n      }\r\n      {/* <button onClick={() => {\r\n                const img = document.getElementById(props.rec);\r\n                gfc_screenshot(img, 'capture.jpg');\r\n                \r\n              }}>client</button>\r\n      <button onClick={async () => {\r\n                const img = document.getElementById(props.rec);\r\n                // const result = await gfc_screenshot_srv(img, 'capture-test.png', 'C:\\\\Image');\r\n                const result = await gfc_screenshot_srv(img);\r\n\r\n                if(result.data !== null) gfc_getMultiLang('영상캡처에 실패했습니다.');\r\n                \r\n              }}>server</button> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default RecTimer;","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_PROC\\RecImageDtl.js",["534","535"],"import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, MILESTONE_LIVE } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport RecTimer from './RecTimer';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\n\r\nfunction RecImageDtl(props) {\r\n  const imageRef = useRef();\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_PROC_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_PROC_MAIN', props.cam, obj);\r\n  }\r\n\r\n  const start = async(ip) => {\r\n      MILESTONE({reqAddr: 'CONNECT',\r\n                 device : props.device})\r\n  }\r\n\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  var jsmpeg = null;\r\n  var client = null;\r\n  var canvas = null;\r\n  const setRtsp = () => {\r\n\r\n    jsmpeg = require('jsmpeg');\r\n    client = new WebSocket(`ws://211.231.136.182:${props.rtspPort}`);\r\n    canvas = imageRef.current;\r\n    new jsmpeg(client, {\r\n      canvas \r\n    });\r\n  }\r\n\r\n  useEffect(() => { \r\n    start(props.ip);\r\n    // onStreaming();\r\n\r\n    // var jsmpeg = require('jsmpeg');\r\n    // var client = new WebSocket('ws://211.231.136.182:3100');\r\n    // var canvas = document.querySelector('canvas');\r\n    // new jsmpeg(client, {\r\n    //   canvas \r\n    // });\r\n\r\n    MILESTONE({reqAddr: 'RTSPStart',\r\n               device: props.device,\r\n               streamUrl: props.rtspUrl,\r\n               port: props.rtspPort\r\n              }).then(e => {\r\n                if(e.data === 'OK'){\r\n                  setRtsp();\r\n                }\r\n              })\r\n    \r\n    return() => {\r\n      // const activeWindow = gfs_getStoreValue('WINDOWFRAME_REDUCER', 'activeWindow');\r\n      // if(activeWindow.programId !== 'INSP_PROC'){\r\n        client.close();\r\n      // }\r\n    }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen])\r\n\r\n  const onStreaming = () => {\r\n    setInterval((e) => {\r\n      MILESTONE_LIVE({\r\n        device: props.device\r\n      }).then(e => {\r\n        // console.log('1');\r\n        // const JPEG = e.data.liveImg.data;\r\n        // const JPEG = 'data:image/JPEG;base64,' + _arrayBufferToBase64(e.data.liveImg.data);\r\n        try{\r\n          const JPEG = e.data;\r\n          // setImage(JPEG);\r\n          // imageRef.current.src = JPEG;\r\n  \r\n          if(JPEG !== undefined && JPEG !== ''){\r\n            if(imageRef.current !== undefined){\r\n              // setImage(JPEG);\r\n              imageRef.current.src = JPEG;\r\n              // let obj = {};\r\n              // obj[props.image] = JPEG;\r\n    \r\n              // gfs_dispatch('INSP_PROC_MAIN', props.image, obj);\r\n            }\r\n          }\r\n        }catch (e){\r\n          \r\n        }\r\n      })\r\n    }, 80);\r\n  }\r\n\r\n  const debounceOnClick = throttle((e, ptz) => {\r\n    TOKEN({}).then(e => {\r\n\r\n      MILESTONE({reqAddr: 'PTZ',\r\n      device: props.device,\r\n      ptz})\r\n    })\r\n\r\n  }, 1000);\r\n\r\n  const onClick = (e, ptz) => {\r\n    e.stopPropagation();\r\n    debounceOnClick(e, ptz);\r\n  }\r\n\r\n  const img = <>\r\n                <div style={{position:'absolute'}}>\r\n                  <RecTimer device={props.device} rec={props.rec} car={props.car} />\r\n                </div>\r\n                {/* rtsp://admin:admin13579@10.10.136.112:554/video1+audio1  */}\r\n\r\n                <canvas ref={imageRef} style={{width:'100%', height:'100%'}}\r\n                        onDoubleClick={e => {\r\n                          setModalIsOpen(true);\r\n                        }}/>\r\n\r\n                {/* <img style={{height:'100%', width:'100%'}} alt='yk_image' \r\n                    ref={imageRef}\r\n                    onDoubleClick={e => {\r\n                      setModalIsOpen(true);\r\n                    }}>\r\n                </img> */}\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                  {/* <a href='#!' className='server'></a> */}\r\n                </div>\r\n                <div className=\"direction\">\r\n                <button type='' className='left' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'left')}}>왼쪽</button>\r\n                  <button type='' className='top' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'up')}}>위쪽</button>\r\n                  <button type='' className='down' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'down')}}>아래</button>\r\n                  <button type='' className='right' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'right')}}>오른쪽</button>\r\n                </div>\r\n                <div className={isOpen === true ? 'controller on' : 'controller'}>\r\n                    <button type='' className='plus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomin')}}>확대</button>\r\n                    <button type='' className='minus' onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(e, 'zoomout')}}>축소</button>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Botspan.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Detailspan.js",["536"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { gfc_setNumberFormat } from '../../../Method/Comm';\r\n\r\nfunction Detailspan(props) {\r\n  const value = useSelector((e) => {\r\n    if(props.flag === 1){\r\n      return e[props.reducer].DETAIL_SCALE;\r\n    }else if(props.flag === 2){\r\n      return e[props.reducer].DETAIL_CARNO;\r\n    }else if(props.flag === 3){\r\n      return e[props.reducer].DETAIL_WEIGHT;\r\n    }else if(props.flag === 4){\r\n      return e[props.reducer].DETAIL_DATE;\r\n    }\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  return (\r\n    props.flag !== 3 ? value : gfc_setNumberFormat(value, '0,0', '0R')\r\n  );\r\n}\r\n\r\nDetailspan.defaultProps = {\r\n  fontSize: '30',\r\n  margin: '0 0 8px 15px'\r\n}\r\n\r\nexport default Detailspan;","D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Mainspan.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\Chit.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\TabList.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\Common\\TabList copy.js",[],"D:\\Project\\01.YK\\react\\src\\Program\\VMS\\INSP_HIST\\RecImageDtl copy.js",["537","538","539","540","541","542","543"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TOKEN, MILESTONE, MILESTONE_LIVE } from '../../../WebReq/WebReq';\r\nimport Modal from 'react-modal';\r\nimport { gfs_dispatch, gfs_getStoreValue } from '../../../Method/Store';\r\nimport { throttle } from 'lodash';\r\nimport { gfc_showMask, gfc_hideMask, gfc_screenshot_srv_from_milestone } from '../../../Method/Comm';\r\nimport ReactPlayer from 'react-player'\r\n\r\nfunction RecImageDtl(props) {\r\n  const movieRef = useRef();\r\n  const prgRef = useRef();\r\n\r\n  const handleDuration = (duration) => {\r\n    prgRef.current.max = duration;\r\n  }\r\n  const handleSeekMouseDown = e => {\r\n    prgRef.current.dataset.seeking = 'true';\r\n  }\r\n  const handleSeekMouseUp = e => {\r\n    const value = prgRef.current.value;\r\n    // movieRef.current.pau\r\n    movieRef.current.seekTo(5);\r\n    prgRef.current.dataset.seeking = 'false';\r\n\r\n    console.log(movieRef.current);\r\n  }\r\n  const handleSeekChange = e => {\r\n    // this.setState({ played: parseFloat(e.target.value) })\r\n  }\r\n  const  handleProgress = state => {\r\n    // // We only want to update time slider if we are not currently seeking\r\n    // if (!state.seeking) {\r\n    //   setState(e)\r\n    // }\r\n    console.log(state);\r\n    \r\n    if(prgRef.current.dataset.seeking === 'false')\r\n      prgRef.current.value = state.playedSeconds;\r\n  }\r\n\r\n  const isOpen = useSelector((e) => {\r\n    return e.INSP_HIST_MAIN[props.cam];\r\n  }, (p, n) => {\r\n    return p === n;\r\n  });\r\n\r\n  const setModalIsOpen = (open) => {\r\n    \r\n    let obj = {};\r\n    obj[props.cam] = open;\r\n\r\n    gfs_dispatch('INSP_HIST_MAIN', props.cam, obj);\r\n  }\r\n  const style={\r\n    overlay: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      zIndex: 1000,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.75)'\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: '40px',\r\n      left: '40px',\r\n      right: '40px',\r\n      bottom: '40px',\r\n      height:'auto',\r\n      // border: '1px solid #ccc',\r\n      // background: '#fff',\r\n      overflow: 'auto',\r\n      WebkitOverflowScrolling: 'touch',\r\n      borderRadius: '4px',\r\n      outline: 'none',\r\n      // padding: '20px'\r\n    }\r\n  };\r\n\r\n  useEffect(() => { \r\n    return() => {\r\n\r\n    }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isOpen])\r\n\r\n  const img = <>\r\n                <div style={{width:'100%', height:'100%'}}>\r\n                  {/* <video controls autoPlay width='100%' height='100%'>\r\n                    <source src='http://211.231.136.182:3003/1.mp4' type='video/mp4' />\r\n                  </video> */}\r\n                  <ReactPlayer ref={movieRef} \r\n                    width='100%' \r\n                    height='100%' \r\n                    url='http://211.231.136.182:3003/1.mp4'\r\n                    \r\n                    controls\r\n                    playing \r\n                    muted\r\n                    \r\n                    onDuration={e => handleDuration(e)}\r\n                    onProgress={e => handleProgress(e)}\r\n                  />\r\n                  <input ref={prgRef} data-seeking={false} style={{width:'100%'}} defaultValue={0}\r\n                    type='range' min={0} step='any'\r\n                    // value={played}\r\n                    onMouseDown={e => handleSeekMouseDown(e)}\r\n                    onChange={e => handleSeekChange(e)}\r\n                    onMouseUp={e => handleSeekMouseUp(e)}\r\n                  />\r\n                </div>\r\n                <div className='picture_save' onClick={e => {\r\n                  \r\n                  gfc_showMask();\r\n                  gfc_screenshot_srv_from_milestone(props.device, 'TESTScaleNo').then(\r\n                    e => {\r\n                      gfc_hideMask();\r\n                      if(e.data.Result !== 'OK'){\r\n                        alert('파일저장에 실패 했습니다.');\r\n                      }\r\n                    }\r\n                  )\r\n                }}>\r\n                </div>\r\n              </>;\r\n\r\n  return (\r\n    <>\r\n      {isOpen === false ? img : \r\n        <Modal style={style}\r\n              className='cctv'\r\n              isOpen={isOpen} \r\n              onRequestClose={() => setModalIsOpen(false)} \r\n              ariaHideApp={false}>\r\n              {img}\r\n        </Modal>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecImageDtl;",{"ruleId":"544","replacedBy":"545"},{"ruleId":"546","replacedBy":"547"},{"ruleId":"548","severity":1,"message":"549","line":9,"column":31,"nodeType":"550","messageId":"551","endLine":9,"endColumn":56},{"ruleId":"548","severity":1,"message":"552","line":10,"column":28,"nodeType":"550","messageId":"551","endLine":10,"endColumn":44},{"ruleId":"548","severity":1,"message":"553","line":125,"column":7,"nodeType":"550","messageId":"551","endLine":125,"endColumn":15},{"ruleId":"548","severity":1,"message":"554","line":15,"column":9,"nodeType":"550","messageId":"551","endLine":15,"endColumn":16},{"ruleId":"548","severity":1,"message":"555","line":1,"column":8,"nodeType":"550","messageId":"551","endLine":1,"endColumn":13},{"ruleId":"548","severity":1,"message":"556","line":6,"column":38,"nodeType":"550","messageId":"551","endLine":6,"endColumn":50},{"ruleId":"548","severity":1,"message":"557","line":24,"column":8,"nodeType":"550","messageId":"551","endLine":24,"endColumn":13},{"ruleId":"548","severity":1,"message":"558","line":12,"column":9,"nodeType":"550","messageId":"551","endLine":12,"endColumn":17},{"ruleId":"548","severity":1,"message":"559","line":15,"column":9,"nodeType":"550","messageId":"551","endLine":15,"endColumn":18},{"ruleId":"548","severity":1,"message":"560","line":6,"column":27,"nodeType":"550","messageId":"551","endLine":6,"endColumn":39},{"ruleId":"548","severity":1,"message":"561","line":8,"column":10,"nodeType":"550","messageId":"551","endLine":8,"endColumn":23},{"ruleId":"544","replacedBy":"562"},{"ruleId":"546","replacedBy":"563"},{"ruleId":"548","severity":1,"message":"554","line":81,"column":9,"nodeType":"550","messageId":"551","endLine":81,"endColumn":16},{"ruleId":"548","severity":1,"message":"552","line":6,"column":28,"nodeType":"550","messageId":"551","endLine":6,"endColumn":44},{"ruleId":"548","severity":1,"message":"564","line":7,"column":27,"nodeType":"550","messageId":"551","endLine":7,"endColumn":44},{"ruleId":"548","severity":1,"message":"560","line":7,"column":46,"nodeType":"550","messageId":"551","endLine":7,"endColumn":58},{"ruleId":"548","severity":1,"message":"555","line":1,"column":8,"nodeType":"550","messageId":"551","endLine":1,"endColumn":13},{"ruleId":"544","replacedBy":"565"},{"ruleId":"546","replacedBy":"566"},{"ruleId":"548","severity":1,"message":"556","line":6,"column":38,"nodeType":"550","messageId":"551","endLine":6,"endColumn":50},{"ruleId":"548","severity":1,"message":"557","line":24,"column":8,"nodeType":"550","messageId":"551","endLine":24,"endColumn":13},{"ruleId":"548","severity":1,"message":"567","line":1,"column":10,"nodeType":"550","messageId":"551","endLine":1,"endColumn":20},{"ruleId":"548","severity":1,"message":"568","line":147,"column":9,"nodeType":"550","messageId":"551","endLine":147,"endColumn":19},{"ruleId":"548","severity":1,"message":"569","line":200,"column":9,"nodeType":"550","messageId":"551","endLine":200,"endColumn":22},{"ruleId":"548","severity":1,"message":"570","line":271,"column":9,"nodeType":"550","messageId":"551","endLine":271,"endColumn":18},{"ruleId":"548","severity":1,"message":"571","line":313,"column":9,"nodeType":"550","messageId":"551","endLine":313,"endColumn":17},{"ruleId":"548","severity":1,"message":"558","line":12,"column":9,"nodeType":"550","messageId":"551","endLine":12,"endColumn":17},{"ruleId":"548","severity":1,"message":"559","line":15,"column":9,"nodeType":"550","messageId":"551","endLine":15,"endColumn":18},{"ruleId":"544","replacedBy":"572"},{"ruleId":"546","replacedBy":"573"},{"ruleId":"548","severity":1,"message":"560","line":6,"column":27,"nodeType":"550","messageId":"551","endLine":6,"endColumn":39},{"ruleId":"548","severity":1,"message":"561","line":8,"column":10,"nodeType":"550","messageId":"551","endLine":8,"endColumn":23},{"ruleId":"548","severity":1,"message":"574","line":8,"column":38,"nodeType":"550","messageId":"551","endLine":8,"endColumn":53},{"ruleId":"548","severity":1,"message":"575","line":13,"column":19,"nodeType":"550","messageId":"551","endLine":13,"endColumn":30},{"ruleId":"548","severity":1,"message":"576","line":14,"column":22,"nodeType":"550","messageId":"551","endLine":14,"endColumn":36},{"ruleId":"548","severity":1,"message":"577","line":23,"column":8,"nodeType":"550","messageId":"551","endLine":23,"endColumn":19},{"ruleId":"548","severity":1,"message":"578","line":24,"column":8,"nodeType":"550","messageId":"551","endLine":24,"endColumn":15},{"ruleId":"548","severity":1,"message":"579","line":28,"column":17,"nodeType":"550","messageId":"551","endLine":28,"endColumn":26},{"ruleId":"548","severity":1,"message":"580","line":2,"column":10,"nodeType":"550","messageId":"551","endLine":2,"endColumn":21},{"ruleId":"548","severity":1,"message":"560","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":22},{"ruleId":"548","severity":1,"message":"581","line":1,"column":36,"nodeType":"550","messageId":"551","endLine":1,"endColumn":44},{"ruleId":"548","severity":1,"message":"582","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":15},{"ruleId":"548","severity":1,"message":"579","line":3,"column":17,"nodeType":"550","messageId":"551","endLine":3,"endColumn":26},{"ruleId":"548","severity":1,"message":"583","line":3,"column":28,"nodeType":"550","messageId":"551","endLine":3,"endColumn":42},{"ruleId":"548","severity":1,"message":"564","line":5,"column":24,"nodeType":"550","messageId":"551","endLine":5,"endColumn":41},{"ruleId":"548","severity":1,"message":"584","line":6,"column":10,"nodeType":"550","messageId":"551","endLine":6,"endColumn":18},{"ruleId":"548","severity":1,"message":"585","line":8,"column":8,"nodeType":"550","messageId":"551","endLine":8,"endColumn":19},{"ruleId":"548","severity":1,"message":"586","line":15,"column":9,"nodeType":"550","messageId":"551","endLine":15,"endColumn":23},{"ruleId":"548","severity":1,"message":"587","line":18,"column":9,"nodeType":"550","messageId":"551","endLine":18,"endColumn":28},{"ruleId":"548","severity":1,"message":"588","line":21,"column":9,"nodeType":"550","messageId":"551","endLine":21,"endColumn":26},{"ruleId":"548","severity":1,"message":"589","line":27,"column":11,"nodeType":"550","messageId":"551","endLine":27,"endColumn":13},{"ruleId":"548","severity":1,"message":"590","line":31,"column":9,"nodeType":"550","messageId":"551","endLine":31,"endColumn":25},{"ruleId":"548","severity":1,"message":"591","line":35,"column":10,"nodeType":"550","messageId":"551","endLine":35,"endColumn":24},{"ruleId":"548","severity":1,"message":"574","line":8,"column":24,"nodeType":"550","messageId":"551","endLine":8,"endColumn":39},{"ruleId":"548","severity":1,"message":"592","line":25,"column":8,"nodeType":"550","messageId":"551","endLine":25,"endColumn":16},{"ruleId":"548","severity":1,"message":"560","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":22},{"ruleId":"548","severity":1,"message":"564","line":3,"column":24,"nodeType":"550","messageId":"551","endLine":3,"endColumn":41},{"ruleId":"548","severity":1,"message":"579","line":5,"column":10,"nodeType":"550","messageId":"551","endLine":5,"endColumn":19},{"ruleId":"548","severity":1,"message":"564","line":5,"column":24,"nodeType":"550","messageId":"551","endLine":5,"endColumn":41},{"ruleId":"548","severity":1,"message":"593","line":103,"column":9,"nodeType":"550","messageId":"551","endLine":103,"endColumn":20},{"ruleId":"548","severity":1,"message":"555","line":1,"column":8,"nodeType":"550","messageId":"551","endLine":1,"endColumn":13},{"ruleId":"548","severity":1,"message":"581","line":1,"column":36,"nodeType":"550","messageId":"551","endLine":1,"endColumn":44},{"ruleId":"548","severity":1,"message":"582","line":3,"column":10,"nodeType":"550","messageId":"551","endLine":3,"endColumn":15},{"ruleId":"548","severity":1,"message":"579","line":3,"column":17,"nodeType":"550","messageId":"551","endLine":3,"endColumn":26},{"ruleId":"548","severity":1,"message":"583","line":3,"column":28,"nodeType":"550","messageId":"551","endLine":3,"endColumn":42},{"ruleId":"548","severity":1,"message":"564","line":5,"column":24,"nodeType":"550","messageId":"551","endLine":5,"endColumn":41},{"ruleId":"548","severity":1,"message":"584","line":6,"column":10,"nodeType":"550","messageId":"551","endLine":6,"endColumn":18},{"ruleId":"548","severity":1,"message":"594","line":21,"column":11,"nodeType":"550","messageId":"551","endLine":21,"endColumn":16},"no-native-reassign",["595"],"no-negated-in-lhs",["596"],"no-unused-vars","'getDynamicSql_Mysql_async' is defined but never used.","Identifier","unusedVar","'getSessionCookie' is defined but never used.","'winClose' is assigned a value but never used.","'session' is assigned a value but never used.","'React' is defined but never used.","'gfg_setValue' is defined but never used.","'store' is defined but never used.","'dateList' is assigned a value but never used.","'valueList' is assigned a value but never used.","'gfs_dispatch' is defined but never used.","'gfp_openPopup' is defined but never used.",["595"],["596"],"'gfs_getStoreValue' is defined but never used.",["595"],["596"],"'gfg_getRow' is defined but never used.","'fixedFrame' is assigned a value but never used.","'columnVisible' is assigned a value but never used.","'resetGrid' is assigned a value but never used.","'saveGrid' is assigned a value but never used.",["595"],["596"],"'gfo_getTextarea' is defined but never used.","'columnImage' is defined but never used.","'columnCombobox' is defined but never used.","'CompleteBtn' is defined but never used.","'TabList' is defined but never used.","'MILESTONE' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","'TOKEN' is defined but never used.","'MILESTONE_LIVE' is defined but never used.","'throttle' is defined but never used.","'ReactPlayer' is defined but never used.","'handleDuration' is assigned a value but never used.","'handleSeekMouseDown' is assigned a value but never used.","'handleSeekMouseUp' is assigned a value but never used.","'aa' is assigned a value but never used.","'handleSeekChange' is assigned a value but never used.","'handleProgress' is assigned a value but never used.","'RecImage' is defined but never used.","'onStreaming' is assigned a value but never used.","'value' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]